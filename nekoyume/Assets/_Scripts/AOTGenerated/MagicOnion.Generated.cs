// <auto-generated />
#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

namespace MagicOnion
{
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::MagicOnion;
    using global::MagicOnion.Client;

    public static partial class MagicOnionInitializer
    {
        static bool isRegistered = false;

#if UNITY_2019_4_OR_NEWER
        [UnityEngine.RuntimeInitializeOnLoadMethod(UnityEngine.RuntimeInitializeLoadType.BeforeSceneLoad)]
#elif NET5_0_OR_GREATER
        [System.Runtime.CompilerServices.ModuleInitializer]
#endif
        public static void Register()
        {
            if (isRegistered) return;
            isRegistered = true;

            global::MagicOnion.Client.MagicOnionClientFactoryProvider.Default =
                (global::MagicOnion.Client.MagicOnionClientFactoryProvider.Default is global::MagicOnion.Client.ImmutableMagicOnionClientFactoryProvider immutableMagicOnionClientFactoryProvider)
                    ? immutableMagicOnionClientFactoryProvider.Add(MagicOnionGeneratedClientFactoryProvider.Instance)
                    : new global::MagicOnion.Client.ImmutableMagicOnionClientFactoryProvider(MagicOnionGeneratedClientFactoryProvider.Instance);

            global::MagicOnion.Client.StreamingHubClientFactoryProvider.Default =
                (global::MagicOnion.Client.StreamingHubClientFactoryProvider.Default is global::MagicOnion.Client.ImmutableStreamingHubClientFactoryProvider immutableStreamingHubClientFactoryProvider)
                    ? immutableStreamingHubClientFactoryProvider.Add(MagicOnionGeneratedClientFactoryProvider.Instance)
                    : new global::MagicOnion.Client.ImmutableStreamingHubClientFactoryProvider(MagicOnionGeneratedClientFactoryProvider.Instance);
        }
    }

    public partial class MagicOnionGeneratedClientFactoryProvider : global::MagicOnion.Client.IMagicOnionClientFactoryProvider, global::MagicOnion.Client.IStreamingHubClientFactoryProvider
    {
        public static MagicOnionGeneratedClientFactoryProvider Instance { get; } = new MagicOnionGeneratedClientFactoryProvider();

        MagicOnionGeneratedClientFactoryProvider() {}

        bool global::MagicOnion.Client.IMagicOnionClientFactoryProvider.TryGetFactory<T>(out global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T> factory)
            => (factory = MagicOnionClientFactoryCache<T>.Factory) != null;

        bool global::MagicOnion.Client.IStreamingHubClientFactoryProvider.TryGetFactory<TStreamingHub, TReceiver>(out global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver> factory)
            => (factory = StreamingHubClientFactoryCache<TStreamingHub, TReceiver>.Factory) != null;

        static class MagicOnionClientFactoryCache<T> where T : global::MagicOnion.IService<T>
        {
            public readonly static global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T> Factory;

            static MagicOnionClientFactoryCache()
            {
                object factory = default(global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T>);

                if (typeof(T) == typeof(global::Nekoyume.Shared.Services.IBlockChainService))
                {
                    factory = ((global::MagicOnion.Client.MagicOnionClientFactoryDelegate<global::Nekoyume.Shared.Services.IBlockChainService>)((x, y) => new Nekoyume.Shared.Services.BlockChainServiceClient(x, y)));
                }
                Factory = (global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T>)factory;
            }
        }
        
        static class StreamingHubClientFactoryCache<TStreamingHub, TReceiver> where TStreamingHub : global::MagicOnion.IStreamingHub<TStreamingHub, TReceiver>
        {
            public readonly static global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver> Factory;

            static StreamingHubClientFactoryCache()
            {
                object factory = default(global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver>);

                if (typeof(TStreamingHub) == typeof(global::Nekoyume.Shared.Hubs.IActionEvaluationHub) && typeof(TReceiver) == typeof(global::Nekoyume.Shared.Hubs.IActionEvaluationHubReceiver))
                {
                    factory = ((global::MagicOnion.Client.StreamingHubClientFactoryDelegate<global::Nekoyume.Shared.Hubs.IActionEvaluationHub, global::Nekoyume.Shared.Hubs.IActionEvaluationHubReceiver>)((a, _, b, c, d, e) => new Nekoyume.Shared.Hubs.ActionEvaluationHubClient(a, b, c, d, e)));
                }

                Factory = (global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver>)factory;
            }
        }
    }

}

#pragma warning restore 168
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 612
#pragma warning restore 618

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.
namespace MagicOnion.Resolvers
{
    using global::System;
    using global::MessagePack;

    partial class PreserveAttribute : global::System.Attribute {}
    public class MagicOnionResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new MagicOnionResolver();
    
        MagicOnionResolver() {}
    
        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
            => FormatterCache<T>.formatter;
    
        static class FormatterCache<T>
        {
            public static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> formatter;
    
            static FormatterCache()
            {
                var f = MagicOnionResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }
    internal static class MagicOnionResolverGetFormatterHelper
    {
        static readonly global::System.Collections.Generic.Dictionary<global::System.Type, int> lookup;
    
        static MagicOnionResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(8)
            {
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>), 0 },
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>), 1 },
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Collections.Generic.IEnumerable<global::System.Byte[]>>), 2 },
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>), 3 },
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>), 4 },
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.String, global::System.String>), 5 },
                {typeof(global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>), 6 },
                {typeof(global::System.Collections.Generic.IEnumerable<global::System.Byte[]>), 7 },
            };
        }
        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }
        
            switch (key)
            {
                case 0: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Byte[], global::System.Byte[], global::System.Byte[]>(default(global::System.Byte[]), default(global::System.Byte[]), default(global::System.Byte[]));
                case 1: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Byte[], global::System.Byte[]>(default(global::System.Byte[]), default(global::System.Byte[]));
                case 2: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Byte[], global::System.Collections.Generic.IEnumerable<global::System.Byte[]>>(default(global::System.Byte[]), default(global::System.Collections.Generic.IEnumerable<global::System.Byte[]>));
                case 3: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>(default(global::System.Collections.Generic.IEnumerable<global::System.Byte[]>), default(global::System.Byte[]));
                case 4: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Int32, global::System.String>(default(global::System.Int32), default(global::System.String));
                case 5: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.String, global::System.String>(default(global::System.String), default(global::System.String));
                case 6: return new global::MessagePack.Formatters.DictionaryFormatter<global::System.Byte[], global::System.Byte[]>();
                case 7: return new global::MessagePack.Formatters.InterfaceEnumerableFormatter<global::System.Byte[]>();
                default: return null;
            }
        }
    }
    /// <summary>Type hints for Ahead-of-Time compilation.</summary>
    [MagicOnion.Resolvers.Preserve]
    internal static class TypeHints
    {
        [MagicOnion.Resolvers.Preserve]
        internal static void Register()
        {
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Collections.Generic.IEnumerable<global::System.Byte[]>>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.String, global::System.String>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MessagePack.Nil>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.Boolean>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.Byte>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.Byte[]>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.Int32>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.Int64>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.String>();
        }
    }
}
#pragma warning restore 168
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 612
#pragma warning restore 618

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

namespace Nekoyume.Shared.Services
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class BlockChainServiceClient : global::MagicOnion.Client.MagicOnionClientBase<global::Nekoyume.Shared.Services.IBlockChainService>, global::Nekoyume.Shared.Services.IBlockChainService
    {
        class ClientCore
        {
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::System.Byte[], global::System.Boolean> PutTransaction;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::System.Byte[], global::System.Int64> GetNextTxNonce;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>, global::System.Byte[]> GetState;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>, global::System.Byte[]> GetStateBySrh;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>, global::System.Byte[]> GetBalance;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>, global::System.Byte[]> GetBalanceBySrh;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MessagePack.Nil, global::System.Byte[]> GetTip;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::System.Int64, global::System.Byte[]> GetBlockHash;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Collections.Generic.IEnumerable<global::System.Byte[]>>, global::System.Boolean> SetAddressesToSubscribe;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::System.Byte[], global::System.Boolean> IsTransactionStaged;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.String, global::System.String>, global::System.Boolean> ReportException;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::System.Byte[], global::System.Boolean> AddClient;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::System.Byte[], global::System.Boolean> RemoveClient;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>, global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>> GetAvatarStates;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>, global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>> GetAvatarStatesBySrh;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>, global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>> GetStateBulk;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>, global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>> GetStateBulkBySrh;
            public ClientCore(global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider)
            {
                this.PutTransaction = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_ValueType<global::System.Byte[], global::System.Boolean>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "PutTransaction", serializerProvider);
                this.GetNextTxNonce = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_ValueType<global::System.Byte[], global::System.Int64>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "GetNextTxNonce", serializerProvider);
                this.GetState = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_RefType<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>, global::System.Byte[]>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "GetState", serializerProvider);
                this.GetStateBySrh = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_RefType<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>, global::System.Byte[]>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "GetStateBySrh", serializerProvider);
                this.GetBalance = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_RefType<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>, global::System.Byte[]>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "GetBalance", serializerProvider);
                this.GetBalanceBySrh = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_RefType<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>, global::System.Byte[]>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "GetBalanceBySrh", serializerProvider);
                this.GetTip = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_RefType<global::MessagePack.Nil, global::System.Byte[]>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "GetTip", serializerProvider);
                this.GetBlockHash = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_RefType<global::System.Int64, global::System.Byte[]>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "GetBlockHash", serializerProvider);
                this.SetAddressesToSubscribe = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Collections.Generic.IEnumerable<global::System.Byte[]>>, global::System.Boolean>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "SetAddressesToSubscribe", serializerProvider);
                this.IsTransactionStaged = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_ValueType<global::System.Byte[], global::System.Boolean>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "IsTransactionStaged", serializerProvider);
                this.ReportException = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MagicOnion.DynamicArgumentTuple<global::System.String, global::System.String>, global::System.Boolean>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "ReportException", serializerProvider);
                this.AddClient = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_ValueType<global::System.Byte[], global::System.Boolean>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "AddClient", serializerProvider);
                this.RemoveClient = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_ValueType<global::System.Byte[], global::System.Boolean>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "RemoveClient", serializerProvider);
                this.GetAvatarStates = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_RefType<global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>, global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "GetAvatarStates", serializerProvider);
                this.GetAvatarStatesBySrh = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_RefType<global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>, global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "GetAvatarStatesBySrh", serializerProvider);
                this.GetStateBulk = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_RefType<global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>, global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "GetStateBulk", serializerProvider);
                this.GetStateBulkBySrh = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_RefType<global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>, global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>>(global::Grpc.Core.MethodType.Unary, "IBlockChainService", "GetStateBulkBySrh", serializerProvider);
            }
        }
        
        readonly ClientCore core;
        
        public BlockChainServiceClient(global::MagicOnion.Client.MagicOnionClientOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider) : base(options)
        {
            this.core = new ClientCore(serializerProvider);
        }
        
        private BlockChainServiceClient(MagicOnionClientOptions options, ClientCore core) : base(options)
        {
            this.core = core;
        }
        
        protected override global::MagicOnion.Client.MagicOnionClientBase<IBlockChainService> Clone(global::MagicOnion.Client.MagicOnionClientOptions options)
            => new BlockChainServiceClient(options, core);
        
        public global::MagicOnion.UnaryResult<global::System.Boolean> PutTransaction(global::System.Byte[] txBytes)
            => this.core.PutTransaction.InvokeUnary(this, "IBlockChainService/PutTransaction", txBytes);
        public global::MagicOnion.UnaryResult<global::System.Int64> GetNextTxNonce(global::System.Byte[] addressBytes)
            => this.core.GetNextTxNonce.InvokeUnary(this, "IBlockChainService/GetNextTxNonce", addressBytes);
        public global::MagicOnion.UnaryResult<global::System.Byte[]> GetState(global::System.Byte[] addressBytes, global::System.Byte[] blockHashBytes)
            => this.core.GetState.InvokeUnary(this, "IBlockChainService/GetState", new global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>(addressBytes, blockHashBytes));
        public global::MagicOnion.UnaryResult<global::System.Byte[]> GetStateBySrh(global::System.Byte[] addressBytes, global::System.Byte[] stateRootHashBytes)
            => this.core.GetStateBySrh.InvokeUnary(this, "IBlockChainService/GetStateBySrh", new global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>(addressBytes, stateRootHashBytes));
        public global::MagicOnion.UnaryResult<global::System.Byte[]> GetBalance(global::System.Byte[] addressBytes, global::System.Byte[] currencyBytes, global::System.Byte[] blockHashBytes)
            => this.core.GetBalance.InvokeUnary(this, "IBlockChainService/GetBalance", new global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>(addressBytes, currencyBytes, blockHashBytes));
        public global::MagicOnion.UnaryResult<global::System.Byte[]> GetBalanceBySrh(global::System.Byte[] addressBytes, global::System.Byte[] currencyBytes, global::System.Byte[] stateRootHashBytes)
            => this.core.GetBalanceBySrh.InvokeUnary(this, "IBlockChainService/GetBalanceBySrh", new global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>(addressBytes, currencyBytes, stateRootHashBytes));
        public global::MagicOnion.UnaryResult<global::System.Byte[]> GetTip()
            => this.core.GetTip.InvokeUnary(this, "IBlockChainService/GetTip", global::MessagePack.Nil.Default);
        public global::MagicOnion.UnaryResult<global::System.Byte[]> GetBlockHash(global::System.Int64 blockIndex)
            => this.core.GetBlockHash.InvokeUnary(this, "IBlockChainService/GetBlockHash", blockIndex);
        public global::MagicOnion.UnaryResult<global::System.Boolean> SetAddressesToSubscribe(global::System.Byte[] toByteArray, global::System.Collections.Generic.IEnumerable<global::System.Byte[]> addressesBytes)
            => this.core.SetAddressesToSubscribe.InvokeUnary(this, "IBlockChainService/SetAddressesToSubscribe", new global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Collections.Generic.IEnumerable<global::System.Byte[]>>(toByteArray, addressesBytes));
        public global::MagicOnion.UnaryResult<global::System.Boolean> IsTransactionStaged(global::System.Byte[] txidBytes)
            => this.core.IsTransactionStaged.InvokeUnary(this, "IBlockChainService/IsTransactionStaged", txidBytes);
        public global::MagicOnion.UnaryResult<global::System.Boolean> ReportException(global::System.String code, global::System.String message)
            => this.core.ReportException.InvokeUnary(this, "IBlockChainService/ReportException", new global::MagicOnion.DynamicArgumentTuple<global::System.String, global::System.String>(code, message));
        public global::MagicOnion.UnaryResult<global::System.Boolean> AddClient(global::System.Byte[] addressByte)
            => this.core.AddClient.InvokeUnary(this, "IBlockChainService/AddClient", addressByte);
        public global::MagicOnion.UnaryResult<global::System.Boolean> RemoveClient(global::System.Byte[] addressByte)
            => this.core.RemoveClient.InvokeUnary(this, "IBlockChainService/RemoveClient", addressByte);
        public global::MagicOnion.UnaryResult<global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>> GetAvatarStates(global::System.Collections.Generic.IEnumerable<global::System.Byte[]> addressBytesList, global::System.Byte[] blockHashBytes)
            => this.core.GetAvatarStates.InvokeUnary(this, "IBlockChainService/GetAvatarStates", new global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>(addressBytesList, blockHashBytes));
        public global::MagicOnion.UnaryResult<global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>> GetAvatarStatesBySrh(global::System.Collections.Generic.IEnumerable<global::System.Byte[]> addressBytesList, global::System.Byte[] stateRootHashBytes)
            => this.core.GetAvatarStatesBySrh.InvokeUnary(this, "IBlockChainService/GetAvatarStatesBySrh", new global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>(addressBytesList, stateRootHashBytes));
        public global::MagicOnion.UnaryResult<global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>> GetStateBulk(global::System.Collections.Generic.IEnumerable<global::System.Byte[]> addressBytesList, global::System.Byte[] blockHashBytes)
            => this.core.GetStateBulk.InvokeUnary(this, "IBlockChainService/GetStateBulk", new global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>(addressBytesList, blockHashBytes));
        public global::MagicOnion.UnaryResult<global::System.Collections.Generic.Dictionary<global::System.Byte[], global::System.Byte[]>> GetStateBulkBySrh(global::System.Collections.Generic.IEnumerable<global::System.Byte[]> addressBytesList, global::System.Byte[] stateRootHashBytes)
            => this.core.GetStateBulkBySrh.InvokeUnary(this, "IBlockChainService/GetStateBulkBySrh", new global::MagicOnion.DynamicArgumentTuple<global::System.Collections.Generic.IEnumerable<global::System.Byte[]>, global::System.Byte[]>(addressBytesList, stateRootHashBytes));
    }
}


#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

namespace Nekoyume.Shared.Hubs
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class ActionEvaluationHubClient : global::MagicOnion.Client.StreamingHubClientBase<global::Nekoyume.Shared.Hubs.IActionEvaluationHub, global::Nekoyume.Shared.Hubs.IActionEvaluationHubReceiver>, global::Nekoyume.Shared.Hubs.IActionEvaluationHub
    {
        protected override global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]> DuplexStreamingAsyncMethod { get; }
        
        public ActionEvaluationHubClient(global::Grpc.Core.CallInvoker callInvoker, global::System.String host, global::Grpc.Core.CallOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider, global::MagicOnion.Client.IMagicOnionClientLogger logger)
            : base(callInvoker, host, options, serializerProvider, logger)
        {
            var marshaller = global::MagicOnion.MagicOnionMarshallers.ThroughMarshaller;
            DuplexStreamingAsyncMethod = new global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]>(global::Grpc.Core.MethodType.DuplexStreaming, "IActionEvaluationHub", "Connect", marshaller, marshaller);
        }
        
        public global::System.Threading.Tasks.Task JoinAsync(global::System.String addressHex)
            => base.WriteMessageWithResponseAsync<global::System.String, global::MessagePack.Nil>(-733403293, addressHex);
        public global::System.Threading.Tasks.Task LeaveAsync()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(1368362116, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task BroadcastRenderAsync(global::System.Byte[] encoded)
            => base.WriteMessageWithResponseAsync<global::System.Byte[], global::MessagePack.Nil>(-291080696, encoded);
        public global::System.Threading.Tasks.Task BroadcastUnrenderAsync(global::System.Byte[] encoded)
            => base.WriteMessageWithResponseAsync<global::System.Byte[], global::MessagePack.Nil>(-1141315011, encoded);
        public global::System.Threading.Tasks.Task BroadcastRenderBlockAsync(global::System.Byte[] oldTip, global::System.Byte[] newTip)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>, global::MessagePack.Nil>(-493480153, new global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>(oldTip, newTip));
        public global::System.Threading.Tasks.Task ReportReorgAsync(global::System.Byte[] oldTip, global::System.Byte[] newTip, global::System.Byte[] branchpoint)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>, global::MessagePack.Nil>(1187694116, new global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>(oldTip, newTip, branchpoint));
        public global::System.Threading.Tasks.Task ReportReorgEndAsync(global::System.Byte[] oldTip, global::System.Byte[] newTip, global::System.Byte[] branchpoint)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>, global::MessagePack.Nil>(697389103, new global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>(oldTip, newTip, branchpoint));
        public global::System.Threading.Tasks.Task ReportExceptionAsync(global::System.Int32 code, global::System.String message)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>, global::MessagePack.Nil>(1773826856, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>(code, message));
        public global::System.Threading.Tasks.Task PreloadStartAsync()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-662856294, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task PreloadEndAsync()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-486331643, global::MessagePack.Nil.Default);
        
        public global::Nekoyume.Shared.Hubs.IActionEvaluationHub FireAndForget()
            => new FireAndForgetClient(this);
        
        [global::MagicOnion.Ignore]
        class FireAndForgetClient : global::Nekoyume.Shared.Hubs.IActionEvaluationHub
        {
            readonly ActionEvaluationHubClient parent;
        
            public FireAndForgetClient(ActionEvaluationHubClient parent)
                => this.parent = parent;
        
            public global::Nekoyume.Shared.Hubs.IActionEvaluationHub FireAndForget() => this;
            public global::System.Threading.Tasks.Task DisposeAsync() => throw new global::System.NotSupportedException();
            public global::System.Threading.Tasks.Task WaitForDisconnect() => throw new global::System.NotSupportedException();
        
            public global::System.Threading.Tasks.Task JoinAsync(global::System.String addressHex)
                => parent.WriteMessageFireAndForgetAsync<global::System.String, global::MessagePack.Nil>(-733403293, addressHex);
            public global::System.Threading.Tasks.Task LeaveAsync()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(1368362116, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task BroadcastRenderAsync(global::System.Byte[] encoded)
                => parent.WriteMessageFireAndForgetAsync<global::System.Byte[], global::MessagePack.Nil>(-291080696, encoded);
            public global::System.Threading.Tasks.Task BroadcastUnrenderAsync(global::System.Byte[] encoded)
                => parent.WriteMessageFireAndForgetAsync<global::System.Byte[], global::MessagePack.Nil>(-1141315011, encoded);
            public global::System.Threading.Tasks.Task BroadcastRenderBlockAsync(global::System.Byte[] oldTip, global::System.Byte[] newTip)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>, global::MessagePack.Nil>(-493480153, new global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>(oldTip, newTip));
            public global::System.Threading.Tasks.Task ReportReorgAsync(global::System.Byte[] oldTip, global::System.Byte[] newTip, global::System.Byte[] branchpoint)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>, global::MessagePack.Nil>(1187694116, new global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>(oldTip, newTip, branchpoint));
            public global::System.Threading.Tasks.Task ReportReorgEndAsync(global::System.Byte[] oldTip, global::System.Byte[] newTip, global::System.Byte[] branchpoint)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>, global::MessagePack.Nil>(697389103, new global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>(oldTip, newTip, branchpoint));
            public global::System.Threading.Tasks.Task ReportExceptionAsync(global::System.Int32 code, global::System.String message)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>, global::MessagePack.Nil>(1773826856, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>(code, message));
            public global::System.Threading.Tasks.Task PreloadStartAsync()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-662856294, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task PreloadEndAsync()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-486331643, global::MessagePack.Nil.Default);
            
        }
        
        protected override void OnBroadcastEvent(global::System.Int32 methodId, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case 1092973952: // Void OnRender(global::System.Byte[] evaluation)
                    {
                        var value = base.Deserialize<global::System.Byte[]>(data);
                        receiver.OnRender(value);
                    }
                    break;
                case -1668462809: // Void OnUnrender(global::System.Byte[] evaluation)
                    {
                        var value = base.Deserialize<global::System.Byte[]>(data);
                        receiver.OnUnrender(value);
                    }
                    break;
                case -1243684591: // Void OnRenderBlock(global::System.Byte[] oldTip, global::System.Byte[] newTip)
                    {
                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[]>>(data);
                        receiver.OnRenderBlock(value.Item1, value.Item2);
                    }
                    break;
                case 1940953564: // Void OnReorged(global::System.Byte[] oldTip, global::System.Byte[] newTip, global::System.Byte[] branchpoint)
                    {
                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>>(data);
                        receiver.OnReorged(value.Item1, value.Item2, value.Item3);
                    }
                    break;
                case 1034302074: // Void OnReorgEnd(global::System.Byte[] oldTip, global::System.Byte[] newTip, global::System.Byte[] branchpoint)
                    {
                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Byte[], global::System.Byte[], global::System.Byte[]>>(data);
                        receiver.OnReorgEnd(value.Item1, value.Item2, value.Item3);
                    }
                    break;
                case 1163840065: // Void OnException(global::System.Int32 code, global::System.String message)
                    {
                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>>(data);
                        receiver.OnException(value.Item1, value.Item2);
                    }
                    break;
                case -1340987425: // Void OnPreloadStart()
                    {
                        var value = base.Deserialize<global::MessagePack.Nil>(data);
                        receiver.OnPreloadStart();
                    }
                    break;
                case 1916412074: // Void OnPreloadEnd()
                    {
                        var value = base.Deserialize<global::MessagePack.Nil>(data);
                        receiver.OnPreloadEnd();
                    }
                    break;
            }
        }
        
        protected override void OnResponseEvent(global::System.Int32 methodId, global::System.Object taskCompletionSource, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case -733403293: // Task JoinAsync(global::System.String addressHex)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 1368362116: // Task LeaveAsync()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -291080696: // Task BroadcastRenderAsync(global::System.Byte[] encoded)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -1141315011: // Task BroadcastUnrenderAsync(global::System.Byte[] encoded)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -493480153: // Task BroadcastRenderBlockAsync(global::System.Byte[] oldTip, global::System.Byte[] newTip)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 1187694116: // Task ReportReorgAsync(global::System.Byte[] oldTip, global::System.Byte[] newTip, global::System.Byte[] branchpoint)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 697389103: // Task ReportReorgEndAsync(global::System.Byte[] oldTip, global::System.Byte[] newTip, global::System.Byte[] branchpoint)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 1773826856: // Task ReportExceptionAsync(global::System.Int32 code, global::System.String message)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -662856294: // Task PreloadStartAsync()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -486331643: // Task PreloadEndAsync()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
            }
        }
        
    }
}


