<?xml version="1.0"?>
<doc xml:lang="en">
    <assembly>
        <name>Microsoft.ApplicationInsights</name>
    </assembly>
    <members>
        <member name="M:Microsoft.ApplicationInsights.ActivityExtensions.TryRun(System.Action)">
            <summary>
            Executes action if Activity is available (DiagnosticSource DLL is available).
            Decorate all code that works with Activity with this method.
            </summary>
            <param name="action">Action to execute.</param>
            <returns>True if Activity is available, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.IAiSerializableTelemetry">
            <summary>
            This interface defines Telemetry objects that are intended to be serialized for the Application Insights Ingestion Endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.IAiSerializableTelemetry.TelemetryName">
            <summary>
            Gets the name of the Telemetry. Used internally for serialization.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.IAiSerializableTelemetry.BaseType">
            <summary>
            Gets the name of the TelemetryType. Typically the datatype of the internal Data property. Used internally for serialization.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.InMemoryChannel">
            <summary>
            Represents a communication channel for sending telemetry to Application Insights via HTTPS. There will be a buffer that will not be persisted, to enforce the 
            queued telemetry items to be sent, <see cref="M:Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush"/> should be called.    
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.InMemoryChannel.isDisposed">
            <summary>
            Indicates if this instance has been disposed of.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.InMemoryChannel" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.#ctor(Microsoft.ApplicationInsights.Channel.TelemetryBuffer,Microsoft.ApplicationInsights.Channel.InMemoryTransmitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.InMemoryChannel" /> class. Used in unit tests for constructor injection.  
            </summary>
            <param name="telemetryBuffer">The telemetry buffer that will be used to enqueue new events.</param>
            <param name="transmitter">The in memory transmitter that will send the events queued in the buffer.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.DeveloperMode">
            <summary>
            Gets or sets a value indicating whether developer mode of telemetry transmission is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.SendingInterval">
            <summary>
            Gets or sets the sending interval. Once the interval expires, <see cref="T:Microsoft.ApplicationInsights.Channel.InMemoryChannel"/> 
            serializes the accumulated telemetry items for transmission and sends it over the wire.
            </summary>    
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.EndpointAddress">
            <summary>
            Gets or sets the HTTP address where the telemetry is sent.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.MaxTelemetryBufferCapacity">
            <summary>
            Gets or sets the maximum number of telemetry items will accumulate in a memory before 
            the <see cref="T:Microsoft.ApplicationInsights.Channel.InMemoryChannel"/> serializing them for transmission to Application Insights.
            This is not a hard limit on how many unsent items can be in the buffer.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.InMemoryChannel.BacklogSize">
            <summary>
            Gets or sets the maximum number of telemetry items that can be in the backlog to send. This is a hard limit
            and Items will be dropped by the <see cref="T:Microsoft.ApplicationInsights.Channel.InMemoryChannel"/> once this limit is hit until items are drained from the buffer.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Sends an instance of ITelemetry through the channel.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush">
            <summary>
            Will send all the telemetry items stored in the memory.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Flush(System.TimeSpan)">
            <summary>
            Will send all the telemetry items stored in the memory.
            </summary>
            <param name="timeout">Timeout interval to abort sending.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose">
            <summary>
            Disposing the channel.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryChannel.Dispose(System.Boolean)">
            <summary>
            Dispose the channel if not already disposed.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.InMemoryTransmitter">
            <summary>
            A transmitter that will immediately send telemetry over HTTP. 
            Telemetry items are being sent when Flush is called, or when the buffer is full (An OnFull "event" is raised) or every 30 seconds. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.InMemoryTransmitter.sendingLockObj">
            <summary>
            A lock object to serialize the sending calls from Flush, OnFull event and the Runner.  
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.InMemoryTransmitter.disposeCount">
            <summary>
            The number of times this object was disposed.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryTransmitter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryTransmitter.Flush(System.TimeSpan)">
            <summary>
            Flushes the in-memory buffer and sends it.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryTransmitter.Runner">
            <summary>
            Flushes the in-memory buffer and sends the telemetry items in <see cref="F:Microsoft.ApplicationInsights.Channel.InMemoryTransmitter.sendingInterval"/> intervals or when 
            <see cref="F:Microsoft.ApplicationInsights.Channel.InMemoryTransmitter.startRunnerEvent" /> is set.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryTransmitter.OnBufferFull">
            <summary>
            Happens when the in-memory buffer is full. Flushes the in-memory buffer and sends the telemetry items.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryTransmitter.DequeueAndSend(System.TimeSpan)">
            <summary>
            Flushes the in-memory buffer and send it.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.InMemoryTransmitter.Send(System.Collections.Generic.IEnumerable{Microsoft.ApplicationInsights.Channel.ITelemetry},System.TimeSpan)">
            <summary>
            Serializes a list of telemetry items and sends them.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.ITelemetry">
            <summary>
            The base telemetry type for application insights.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp">
            <summary>
            Gets or sets date and time when telemetry was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.ITelemetry.Context">
            <summary>
            Gets the context associated with this telemetry instance.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.ITelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strongly
            typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
            <remarks>
            The sequence is used to track absolute order of uploaded telemetry items. It is a two-part value that includes 
            a stable identifier for the current boot session and an incrementing identifier for each event added to the upload queue:
            For UTC this would increment for all events across the system.
            For Persistence this would increment for all events emitted from the hosting process.    
            The Sequence helps track how many events were fired and how many events were uploaded and enables identification 
            of data lost during upload and de-duplication of events on the ingress server.
            From <a href="https://microsoft.sharepoint.com/teams/CommonSchema/Shared%20Documents/Schema%20Specs/Common%20Schema%202%20-%20Language%20Specification.docx"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.ITelemetry.Sanitize">
            <summary>
            Sanitizes the properties of the telemetry item based on DP constraints.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.ITelemetry.DeepClone">
            <summary>
            Clones the telemetry object deeply, so that the original object and the clone share no state 
            and can be modified independently.
            </summary>
            <returns>The cloned object.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.ITelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <summary>
            Writes serialization info about the data class of the implementing type using the given <see cref="T:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter"/>
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.ITelemetryChannel">
            <summary>
            Represents a communication channel for sending telemetry to application insights.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.ITelemetryChannel.DeveloperMode">
            <summary>
            Gets or sets a value indicating whether this channel is in developer mode.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.ITelemetryChannel.EndpointAddress">
            <summary>
            Gets or sets the endpoint address of the channel.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Send(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Sends an instance of ITelemetry through the channel.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.ITelemetryChannel.Flush">
            <summary>
            Flushes the in-memory buffer.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.TelemetryBuffer">
            <summary>
            Accumulates <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/> items for efficient transmission.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Channel.TelemetryBuffer.OnFull">
            <summary>
            Delegate that is raised when the buffer is full.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.TelemetryBuffer.Capacity">
            <summary>
            Gets or sets the maximum number of telemetry items that can be buffered before transmission.
            </summary>        
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.TelemetryBuffer.BacklogSize">
            <summary>
            Gets or sets the maximum number of telemetry items that can be in the backlog to send. Items will be dropped
            once this limit is hit.
            </summary>        
        </member>
        <member name="T:Microsoft.ApplicationInsights.Channel.Transmission">
            <summary>
            Implements an asynchronous transmission of data to an HTTP POST endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Transmission.#ctor(System.Uri,System.Byte[],System.String,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.Transmission"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Transmission.#ctor(System.Uri,System.Collections.Generic.ICollection{Microsoft.ApplicationInsights.Channel.ITelemetry},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.Transmission"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Transmission.#ctor(System.Uri,System.Collections.Generic.IEnumerable{Microsoft.ApplicationInsights.Channel.ITelemetry},System.String,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.Transmission"/> class. This overload is for Test purposes. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Transmission.#ctor(System.Uri,System.Byte[],System.Net.Http.HttpClient,System.String,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.Transmission"/> class. This overload is for Test purposes. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Transmission.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Channel.Transmission"/> class. This overload is for Test purposes. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.Transmission.EndpointAddress">
            <summary>
            Gets the Address of the endpoint to which transmission will be sent.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.Transmission.Content">
            <summary>
            Gets the content of the transmission.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.Transmission.ContentType">
            <summary>
            Gets the content's type of the transmission.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.Transmission.ContentEncoding">
            <summary>
            Gets the encoding method of the transmission.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.Transmission.Timeout">
            <summary>
            Gets a timeout value for the transmission.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.Transmission.Id">
            <summary>
            Gets an id of the transmission.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Channel.Transmission.TelemetryItems">
            <summary>
            Gets the number of telemetry items in the transmission.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Transmission.SendAsync">
            <summary>
            Executes the request that the current transmission represents.
            </summary>
            <returns>The task to await.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Transmission.Split(System.Func{System.Int32,System.Int32})">
            <summary>
            Splits the Transmission object into two pieces using a method 
            to determine the length of the first piece based off of the length of the transmission.
            </summary>
            <returns>
            A tuple with the first item being a Transmission object with n ITelemetry objects
            and the second item being a Transmission object with the remaining ITelemetry objects.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Transmission.CreateRequestMessage(System.Uri,System.IO.Stream)">
            <summary>
            Creates an http request for sending a transmission.
            </summary>
            <param name="address">The address of the web request.</param>
            <param name="contentStream">The stream to write to.</param>
            <returns>The request. An object of type HttpRequestMessage.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Channel.Transmission.CreateRequest(System.Uri)">
            <summary>
            Creates a post web request.
            </summary>
            <param name="address">The Address in the web request.</param>
            <returns>A web request pointing to the <c>Address</c>.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry">
            <summary>
            Telemetry type used for availability web test results.
            Contains a time and message and optionally some additional metadata.
            <a href="https://go.microsoft.com/fwlink/?linkid=517889">Learn more</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry"/> class with empty properties.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor(System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry"/> class with empty properties.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry"/> class by cloning an existing instance.
            </summary>
            <param name="source">Source instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry"/> to clone from.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#TelemetryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#BaseType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Id">
            <summary>
            Gets or sets the test run id.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Name">
            <summary>
            Gets or sets the test name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Duration">
            <summary>
            Gets or sets availability test duration.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Success">
            <summary>
            Gets or sets a value indicating whether the availability test was successful or not.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.RunLocation">
            <summary>
            Gets or sets location where availability test was run.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Message">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strong typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this availability test run.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Metrics">
            <summary>
            Gets a dictionary of application-defined event metrics.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when telemetry was recorded.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.DeepClone">
            <summary>
            Deeply clones an  <see cref="T:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry">
            <summary>
            The class that represents information about the collected dependency.
            <a href="https://go.microsoft.com/fwlink/?linkid=839889">Learn more.</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.#ctor(System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry"/> class with the given <paramref name="dependencyName"/>, <paramref name="data"/>,
            <paramref name="startTime"/>, <paramref name="duration"/> and <paramref name="success"/> property values.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry"/> class with the given <paramref name="dependencyTypeName"/>, <paramref name="target"/>,
            <paramref name="dependencyName"/>, <paramref name="data"/> property values.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.#ctor(System.String,System.String,System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry"/> class with the given <paramref name="dependencyTypeName"/>, <paramref name="target"/>,
            <paramref name="dependencyName"/>, <paramref name="data"/>, <paramref name="startTime"/>, <paramref name="duration"/>, <paramref name="resultCode"/>
            and <paramref name="success"/> and  property values.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry"/> class by cloning an existing instance.
            </summary>
            <param name="source">Source instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry"/> to clone from.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#TelemetryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#BaseType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when telemetry was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strongly typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Id">
            <summary>
            Gets or sets Dependency ID.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.ResultCode">
            <summary>
            Gets or sets the Result Code.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Name">
            <summary>
            Gets or sets resource name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.CommandName">
            <summary>
            Gets or sets text of SQL command or empty it not applicable.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Data">
            <summary>
            Gets or sets data associated with the current dependency instance. Command name/statement for SQL dependency, URL for http dependency.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Target">
            <summary>
            Gets or sets target of dependency call. SQL server name, url host, etc.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.DependencyTypeName">
            <summary>
            Gets or sets the dependency type name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Type">
            <summary>
            Gets or sets the dependency type name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Duration">
            <summary>
            Gets or sets the amount of time it took the application to handle the request.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Success">
            <summary>
            Gets or sets a value indicating whether the dependency call was successful or not.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this remote dependency.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Metrics">
            <summary>
            Gets a dictionary of application-defined event metrics.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.DependencyKind">
            <summary>
            Gets or sets the dependency kind, like SQL, HTTP, Azure, etc.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Microsoft#ApplicationInsights#DataContracts#ISupportSampling#SamplingPercentage">
            <summary>
            Gets or sets data sampling percentage (between 0 and 100).
            Should be 100/n where n is an integer. <a href="https://go.microsoft.com/fwlink/?linkid=832969">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.MetricExtractorInfo">
            <summary>
            Gets or sets the MetricExtractorInfo.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.InternalData">
            <summary>
            Gets the InternalData associated with this Telemetry instance.
            This is being served by a singleton instance, so this will
            not pickup changes made to the telemetry after first call to this.
            It is recommended to make all changes (including sanitization)
            to this telemetry before calling InternalData.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.DeepClone">
            <summary>
            Deeply clones a <see cref="T:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.TryGetOperationDetail(System.String,System.Object@)">
            <summary>
            In specific collectors, objects are added to the dependency telemetry which may be useful
            to enhance DependencyTelemetry telemetry by <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer" /> implementations.
            Objects retrieved here are not automatically serialized and sent to the backend.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="detail">When this method returns, contains the object that has the specified key, or the default value of the type if the operation failed.</param>
            <returns>true if the key was found; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.SetOperationDetail(System.String,System.Object)">
            <summary>
            Sets the operation detail specific against the key specified. Objects set through this method
            are not automatically serialized and sent to the backend.
            </summary>
            <param name="key">The key to store the detail against.</param>
            <param name="detail">Detailed information collected by the tracked operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.EventTelemetry">
            <summary>
            Telemetry type used to track custom events.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackevent">Learn more</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.EventTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.EventTelemetry"/> class with the given <paramref name="name"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#TelemetryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#BaseType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when event was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strong typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.Name">
            <summary>
            Gets or sets the name of the event.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.Metrics">
            <summary>
            Gets a dictionary of application-defined event metrics.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this event.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.Microsoft#ApplicationInsights#DataContracts#ISupportSampling#SamplingPercentage">
            <summary>
            Gets or sets data sampling percentage (between 0 and 100).
            Should be 100/n where n is an integer. <a href="https://go.microsoft.com/fwlink/?linkid=832969">Learn more</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.DeepClone">
            <summary>
            Deeply clones a <see cref="T:Microsoft.ApplicationInsights.DataContracts.EventTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.EventTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.ExceptionDetailsInfo">
            <summary>
            Wrapper class for <see cref="P:Microsoft.ApplicationInsights.DataContracts.ExceptionDetailsInfo.ExceptionDetails"/> that lets user gets/sets TypeName and Message.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.ExceptionDetailsInfo.#ctor(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.String,System.Collections.Generic.IEnumerable{Microsoft.ApplicationInsights.DataContracts.StackFrame})">
            <summary>
            Constructs the instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionDetailsInfo"/>.
            </summary>
            <param name="id">Exception id.</param>
            <param name="outerId">Parent exception's id.</param>
            <param name="typeName">Type name for the exception.</param>
            <param name="message">Exception message.</param>
            <param name="hasFullStack">Indicates that this exception has full stack information.</param>
            <param name="stack">Exception's stack trace.</param>
            <param name="parsedStack">Exception's stack.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionDetailsInfo.TypeName">
            <summary>
            Gets or sets type name of the underlying <see cref="T:System.Exception"/> that this object represents.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionDetailsInfo.Message">
            <summary>
            Gets or sets message name of the underlying <see cref="T:System.Exception"/> that this object represents.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.ExceptionHandledAt">
            <summary>
            This enumeration is used by ExceptionTelemetry to identify if and where exception was handled.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.DataContracts.ExceptionHandledAt.Unhandled">
            <summary>
            Exception was not handled. Application crashed.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.DataContracts.ExceptionHandledAt.UserCode">
            <summary>
            Exception was handled in user code.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.DataContracts.ExceptionHandledAt.Platform">
            <summary>
            Exception was handled by some platform handlers.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.ExceptionInfo">
            <summary>
            Wrapper class for <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.ExceptionData"/> that lets user provide exception data without having the actual Exception object.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.ExceptionInfo.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ApplicationInsights.DataContracts.ExceptionDetailsInfo},System.Nullable{Microsoft.ApplicationInsights.DataContracts.SeverityLevel},System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Constructs the instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionInfo"/>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionInfo.ExceptionDetailsInfoList">
            <summary>
            Gets a list of <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionDetailsInfo"/> to modify as needed.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionInfo.SeverityLevel">
            <summary>
            Gets or sets Exception severity level.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionInfo.ProblemId">
            <summary>
            Gets or sets problem id.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionInfo.Properties">
            <summary>
            Gets or sets properties collection.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionInfo.Measurements">
            <summary>
            Gets or sets measurements collection.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry">
            <summary>
            Telemetry type used to track exceptions. This will capture TypeName, Message, and CallStack.
            <a href="https://go.microsoft.com/fwlink/?linkid=723596">Learn more</a>
            </summary>
            <remarks>
            Additional exception details will need to be tracked manually.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry"/> class with empty properties.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry"/> class with empty properties.
            </summary>
            <param name="exception">Exception instance.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ApplicationInsights.DataContracts.ExceptionDetailsInfo},System.Nullable{Microsoft.ApplicationInsights.DataContracts.SeverityLevel},System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry"/> class.
            </summary>
            <param name="exceptionDetailsInfoList">Exception info.</param>
            <param name="severityLevel">Severity level.</param>
            <param name="problemId">Problem id.</param>
            <param name="properties">Properties.</param>
            <param name="measurements">Measurements.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry"/> class by cloning an existing instance.
            </summary>
            <param name="source">Source instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry"/> to clone from.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#TelemetryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#BaseType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when telemetry was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strong typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.ProblemId">
            <summary>
            Gets or sets the problemId.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.HandledAt">
            <summary>
            Gets or sets the value indicated where the exception was handled.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Exception">
            <summary>
            Gets or sets the original exception tracked by this <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Message">
            <summary>
            Gets or sets ExceptionTelemetry message.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Metrics">
            <summary>
            Gets a dictionary of application-defined exception metrics.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.ExceptionDetailsInfoList">
            <summary>
            Gets the list of <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionDetailsInfo"/>. User can modify the contents of individual object, but
            not the list itself.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this exception.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.SeverityLevel">
            <summary>
            Gets or sets Exception severity level.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft#ApplicationInsights#DataContracts#ISupportSampling#SamplingPercentage">
            <summary>
            Gets or sets data sampling percentage (between 0 and 100).
            Should be 100/n where n is an integer. <a href="https://go.microsoft.com/fwlink/?linkid=832969">Learn more</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.DeepClone">
            <summary>
            Deeply clones a <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.SetParsedStack(System.Diagnostics.StackFrame[])">
            <summary>
            Set parsedStack from an array of StackFrame objects.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.IJsonWriter">
            <summary>
            Encapsulates logic for serializing objects to JSON. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteStartArray">
            <summary>
            Writes opening/left square bracket.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteStartObject">
            <summary>
            Writes opening/left curly brace.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteEndArray">
            <summary>
            Writes closing/right square bracket.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteEndObject">
            <summary>
            Writes closing/right curly brace.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteComma">
            <summary>
            Writes comma.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteProperty(System.String,System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteProperty(System.String,System.Nullable{System.Boolean})">
            <summary>
            Writes a <see cref="T:System.Boolean"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteProperty(System.String,System.Nullable{System.Int32})">
            <summary>
            Writes a <see cref="T:System.Int32"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteProperty(System.String,System.Nullable{System.Double})">
            <summary>
            Writes a <see cref="T:System.Double"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteProperty(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Writes a <see cref="T:System.TimeSpan"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteProperty(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteProperty(System.String,System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Writes a <see cref="T:System.Collections.Generic.IDictionary`2"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteProperty(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes a <see cref="T:System.Collections.Generic.IDictionary`2"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WritePropertyName(System.String)">
            <summary>
            Writes a property name in double quotation marks, followed by a colon.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.IJsonWriter.WriteRawValue(System.Object)">
            <summary>
            Writes <see cref="T:System.Object"/> as raw value directly.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.InnerExceptionCountExceededException">
            <summary>
            This exception is used to notify the user that the set of inner exceptions has been trimmed because it exceeded our allowed send limit.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.InnerExceptionCountExceededException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.InnerExceptionCountExceededException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.InnerExceptionCountExceededException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.InnerExceptionCountExceededException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error. </param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.InnerExceptionCountExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.InnerExceptionCountExceededException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception. </param><param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.InnerExceptionCountExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.InnerExceptionCountExceededException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.ISupportMetrics">
            <summary>
            Represents an object that supports application-defined metrics.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ISupportMetrics.Metrics">
            <summary>
            Gets a dictionary of application-defined metric names and values providing additional information about telemetry.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.ISupportProperties">
            <summary>
            Represents an object that supports application-defined properties.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ISupportProperties.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about telemetry.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.ISupportSampling">
            <summary>
            Represent objects that support data sampling.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.ISupportSampling.SamplingPercentage">
            <summary>
            Gets or sets data sampling percentage (between 0 and 100).
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry">
            <summary>
            Telemetry type used to track metrics. Represents a sample set of values with a specified count, sum, max, min, and standard deviation.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackmetric">Learn more</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry"/> class with empty
            properties.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor(System.String,System.Double)">
            <summary>
            Obsolete - use MetricTelemetry(name,count,sum,min,max,standardDeviation). Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry"/> class with the
            specified <paramref name="metricName"/> and <paramref name="metricValue"/>.
            </summary>
            <exception cref="T:System.ArgumentException">The <paramref name="metricName"/> is null or empty string.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor(System.String,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry"/> class with properties provided.
            </summary>
            <remarks>
            Metrics should always be pre-aggregated across a time period before being sent.
            Most applications do not need to explicitly create <c>MetricTelemetry</c> objects. Instead, use one of
            the <c>GetMetric(..)</c> overloads on the <see cref="T:Microsoft.ApplicationInsights.TelemetryClient" /> class to get a metric object
            for accessing SDK pre-aggregation capabilities. <br />
            However, you can use this ctor to create metric telemetry items if you have implemented your own metric
            aggregation. In that case, use <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.Track(Microsoft.ApplicationInsights.Channel.ITelemetry)"/> method to send your aggregates.
            </remarks>
            <param name="name">Metric name.</param>
            <param name="count">Count of values taken during aggregation interval.</param>
            <param name="sum">Sum of values taken during aggregation interval.</param>
            <param name="min">Minimum value taken during aggregation interval.</param>
            <param name="max">Maximum of values taken during aggregation interval.</param>
            <param name="standardDeviation">Standard deviation of values taken during aggregation interval.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor(System.String,System.String,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry"/> class with properties provided.
            </summary>
            <remarks>
            Metrics should always be pre-aggregated across a time period before being sent.
            Most applications do not need to explicitly create <c>MetricTelemetry</c> objects. Instead, use one of
            the <c>GetMetric(..)</c> overloads on the <see cref="T:Microsoft.ApplicationInsights.TelemetryClient" /> class to get a metric object
            for accessing SDK pre-aggregation capabilities. <br />
            However, you can use this ctor to create metric telemetry items if you have implemented your own metric
            aggregation. In that case, use <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.Track(Microsoft.ApplicationInsights.Channel.ITelemetry)"/> method to send your aggregates.
            </remarks>
            <param name="metricNamespace">Metric namespace.</param>
            <param name="name">Metric name.</param>
            <param name="count">Count of values taken during aggregation interval.</param>
            <param name="sum">Sum of values taken during aggregation interval.</param>
            <param name="min">Minimum value taken during aggregation interval.</param>
            <param name="max">Maximum of values taken during aggregation interval.</param>
            <param name="standardDeviation">Standard deviation of values taken during aggregation interval.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.MetricTelemetry)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry"/> class by cloning an existing instance.
            </summary>
            <param name="source">Source instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry"/> to clone from.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#TelemetryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#BaseType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when event was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strong typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.MetricNamespace">
            <summary>
            Gets or sets the name of the metric.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Name">
            <summary>
            Gets or sets the name of the metric.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Value">
            <summary>
            Gets or sets the value of this metric.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Sum">
            <summary>
            Gets or sets sum of the values of the metric samples.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Count">
            <summary>
            Gets or sets the number of values in the sample set.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Min">
            <summary>
            Gets or sets the min value of this metric across the sample set.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Max">
            <summary>
            Gets or sets the max value of this metric across the sample set.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.StandardDeviation">
            <summary>
            Gets or sets the standard deviation of this metric across the sample set.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this metric.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.DeepClone">
            <summary>
            Deeply clones a <see cref="T:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.MetricTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry">
            <summary>
            Telemetry type used to track page load performance.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry"/> class with the
            specified <paramref name="pageName"/>.
            </summary>
            <exception cref="T:System.ArgumentException">The <paramref name="pageName"/> is null or empty string.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry"/> class by cloning an existing instance.
            </summary>
            <param name="source">Source instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry"/> to clone from.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#TelemetryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#BaseType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when event was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strong typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Id">
            <summary>
            Gets or sets page view ID.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Name">
            <summary>
            Gets or sets the name of the page.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Url">
            <summary>
            Gets or sets the page view Uri.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Duration">
            <summary>
            Gets or sets the page view duration.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.DomProcessing">
            <summary>
            Gets or sets the page DOM processing time.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.PerfTotal">
            <summary>
            Gets or sets the page loading total time.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.NetworkConnect">
            <summary>
            Gets or sets the page load network time.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.SentRequest">
            <summary>
            Gets or sets the page load send request time.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.ReceivedResponse">
            <summary>
            Gets or sets the page load recieve response duration.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Metrics">
            <summary>
            Gets a dictionary of custom defined metrics.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this page view.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Microsoft#ApplicationInsights#DataContracts#ISupportSampling#SamplingPercentage">
            <summary>
            Gets or sets data sampling percentage (between 0 and 100).
            Should be 100/n where n is an integer. <a href="https://go.microsoft.com/fwlink/?linkid=832969">Learn more</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.DeepClone">
            <summary>
            Deeply clones a <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewPerformanceTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry">
            <summary>
            Telemetry type used to track page views.
            </summary>
            <remarks>
            You can send information about pages viewed by your application to Application Insights by
            passing an instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry"/> class to the <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry)"/>
            method.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#page-views">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry"/> class with the
            specified <paramref name="pageName"/>.
            </summary>
            <exception cref="T:System.ArgumentException">The <paramref name="pageName"/> is null or empty string.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry"/> class by cloning an existing instance.
            </summary>
            <param name="source">Source instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry"/> to clone from.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#TelemetryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#BaseType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when event was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strong typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Id">
            <summary>
            Gets or sets page view ID.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Name">
            <summary>
            Gets or sets the name of the page.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Url">
            <summary>
            Gets or sets the page view Uri.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Duration">
            <summary>
            Gets or sets the page view duration.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Metrics">
            <summary>
            Gets a dictionary of custom defined metrics.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this page view.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Microsoft#ApplicationInsights#DataContracts#ISupportSampling#SamplingPercentage">
            <summary>
            Gets or sets data sampling percentage (between 0 and 100).
            Should be 100/n where n is an integer. <a href="https://go.microsoft.com/fwlink/?linkid=832969">Learn more</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.DeepClone">
            <summary>
            Deeply clones a <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry">
            <summary>
            The class that represents information about performance counters.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor(System.String,System.String,System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry"/> class.
            </summary>
            <param name="categoryName">Category name.</param>
            <param name="counterName">Performance counter name.</param>
            <param name="instanceName">Instance name.</param>
            <param name="value">Performance counter value.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry"/> class by cloning an existing instance.
            </summary>
            <param name="source">Source instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry"/> to clone from.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#TelemetryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#BaseType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when telemetry was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strong typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Value">
            <summary>
            Gets or sets the counter value.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CategoryName">
            <summary>
            Gets or sets the category name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.CounterName">
            <summary>
            Gets or sets the counter name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.InstanceName">
            <summary>
            Gets or sets the instance name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this exception.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.DeepClone">
            <summary>
            Deeply clones a <see cref="T:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.PerformanceCounterTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry">
            <summary>
            Encapsulates information about a web request handled by the application.
            </summary>
            <remarks>
            You can send information about requests processed by your web application to Application Insights by
            passing an instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry"/> class to the <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(Microsoft.ApplicationInsights.DataContracts.RequestTelemetry)"/>
            method.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackrequest">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.#ctor(System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry"/> class with the given <paramref name="name"/>,
            <paramref name="startTime"/>, <paramref name="duration"/>, <paramref name="responseCode"/> and <paramref name="success"/> property values.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.RequestTelemetry)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry"/> class by cloning an existing instance.
            </summary>
            <param name="source">Source instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry"/> to clone from.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#TelemetryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#BaseType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when telemetry was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Context">
            <summary>
            Gets the object that contains contextual information about the application at the time when it handled the request.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strong typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Id">
            <summary>
            Gets or sets Request ID.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Name">
            <summary>
            Gets or sets human-readable name of the requested page.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.ResponseCode">
            <summary>
            Gets or sets response code returned by the application after handling the request.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Success">
            <summary>
            Gets or sets a value indicating whether application handled the request successfully.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Duration">
            <summary>
            Gets or sets the amount of time it took the application to handle the request.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this request.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Url">
            <summary>
            Gets or sets request url (optional).
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Metrics">
            <summary>
            Gets a dictionary of application-defined request metrics.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.HttpMethod">
            <summary>
            Gets or sets the HTTP method of the request.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Microsoft#ApplicationInsights#DataContracts#ISupportSampling#SamplingPercentage">
            <summary>
            Gets or sets data sampling percentage (between 0 and 100).
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Source">
            <summary>
            Gets or sets the source for the request telemetry object. This often is a hashed instrumentation key identifying the caller.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.MetricExtractorInfo">
            <summary>
            Gets or sets the MetricExtractorInfo.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Data">
            <summary>
            Gets the Data associated with this Telemetry instance.
            This is being served by a singleton instance, so this will
            not pickup changes made to the telemetry after first call to this.
            It is recommended to make all changes (including sanitization)
            to this telemetry before calling Data.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.DeepClone">
            <summary>
            Deeply clones a <see cref="T:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.SessionState">
            <summary>
            Contains values that identify state of a user session.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.DataContracts.SessionState.Start">
            <summary>
            Indicates that a user session started.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.DataContracts.SessionState.End">
            <summary>
            Indicates that a user session ended.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry">
            <summary>
            Telemetry type used to track user sessions.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.SessionState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry"/> class with the specified <paramref name="state"/>.
            </summary>
            <param name="state">
            A <see cref="T:Microsoft.ApplicationInsights.DataContracts.SessionState"/> value indicating state of the user session.
            </param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry"/> class by cloning an existing instance.
            </summary>
            <param name="source">Source instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry"/> to clone from.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#TelemetryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#BaseType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Timestamp">
            <summary>
            Gets or sets the date and time the session state was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Context">
            <summary>
            Gets the <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/> of the application when the session state was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strong typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.State">
            <summary>
            Gets or sets the value describing state of the user session.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.DeepClone">
            <summary>
            Deeply clones a <see cref="T:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes this telemetry instance to ensure it can be accepted by the Application Insights.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.SessionStateTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.SeverityLevel">
            <summary>
            This enumeration is used by ExceptionTelemetry and TraceTelemetry to identify severity level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.DataContracts.SeverityLevel.Verbose">
            <summary>
            Verbose severity level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.DataContracts.SeverityLevel.Information">
            <summary>
            Information severity level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.DataContracts.SeverityLevel.Warning">
            <summary>
            Warning severity level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.DataContracts.SeverityLevel.Error">
            <summary>
            Error severity level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.DataContracts.SeverityLevel.Critical">
            <summary>
            Critical severity level.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.StackFrame">
            <summary>
            Wrapper class for <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.StackFrame"/> for API exposure.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.StackFrame.#ctor(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Constructs an instance.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext">
            <summary>
            Represents a context for sending telemetry to the Application Insights service.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#telemetrycontext">Learn more</a>
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.FlagDropIdentifiers">
            <summary>
            Value for the flag that indicates that server should not store IP address from incoming events.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey">
            <summary>
            Gets or sets the default instrumentation key for all <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/> objects logged in this <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/>.
            </summary>
            <remarks>
            By default, this property is initialized with the <see cref="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey"/> value
            of the <see cref="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active"/> instance of <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration"/>. You can specify it
            for all telemetry tracked via a particular <see cref="T:Microsoft.ApplicationInsights.TelemetryClient"/> or for a specific <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/>
            instance.
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Flags">
            <summary> 
            Gets or sets flags which controls events priority and endpoint behavior.
            </summary> 
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Component">
            <summary>
            Gets the object describing the component tracked by this <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Device">
            <summary>
            Gets the object describing the device tracked by this <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Cloud">
            <summary>
            Gets the object describing the cloud tracked by this <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Session">
            <summary>
            Gets the object describing a user session tracked by this <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.User">
            <summary>
            Gets the object describing a user tracked by this <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Operation">
            <summary>
            Gets the object describing a operation tracked by this <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/>.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#operationcontext">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Location">
            <summary>
            Gets the object describing a location tracked by this <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext" />.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Properties">
            <summary>
            Gets a dictionary of application-defined property values.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>        
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.GlobalProperties">
            <summary>
            Gets a dictionary of application-defined property values which are global in scope.
            Future SDK versions could serialize this separately from the item level properties.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.SanitizedTags">
            <summary>
            Gets a dictionary of context tags.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.TryGetRawObject(System.String,System.Object@)">
            <summary>
            Returns the raw object with the given key.        
            Objects retrieved here are not automatically serialized and sent to the backend.
            They are shared (i.e not cloned) if multiple sinks are configured, so sinks should treat them as read-only.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="rawObject">When this method returns, contains the object that has the specified key, or the default value of the type if the operation failed.</param>
            <returns>true if the key was found; otherwise, false.</returns>
            <remarks>
            This method is not thread-safe. Objects should be stored from Collectors or TelemetryInitializers that are run synchronously.
            </remarks>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.StoreRawObject(System.String,System.Object,System.Boolean)">
            <summary>
            Stores the raw object against the key specified.
            Use this to store raw objects from data collectors so that TelemetryInitializers can access
            them to extract additional details to enrich telemetry.
            Objects stored through this method are not automatically serialized and sent to the backend.
            They are shared (i.e not cloned) if multiple sinks are configured, so sinks should treat them as read-only.
            </summary>
            <param name="key">The key to store the object against.</param>
            <param name="rawObject">Object to be stored.</param>
            <param name="keepForInitializationOnly">Boolean flag indicating if this object should be made available only during TelemetryInitializers.
            If set to true, then the object will not accessible in TelemetryProcessors and TelemetryChannel.</param>
            <remarks>
            This method is not thread-safe. Objects should be stored from Collectors or TelemetryInitializers that are run synchronously.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.Initialize(Microsoft.ApplicationInsights.DataContracts.TelemetryContext,System.String)">
            <summary>
            Initialize this instance's Context properties with the values from another TelemetryContext.
            First check that source is not null, then copy to this instance.
            Note that invoking the public getter instead of the private field will call the LazyInitializer.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InitializeInstrumentationkey(System.String)">
            <summary>
            Initialize this instance's instrumentation key.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry">
            <summary>
            Telemetry type used for log messages.
            Contains a time and message and optionally some additional metadata.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#tracktrace">Learn more</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.#ctor(System.String,Microsoft.ApplicationInsights.DataContracts.SeverityLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.#ctor(Microsoft.ApplicationInsights.DataContracts.TraceTelemetry)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry"/> class by cloning an existing instance.
            </summary>
            <param name="source">Source instance of <see cref="T:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry"/> to clone from.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#TelemetryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.Microsoft#ApplicationInsights#Channel#IAiSerializableTelemetry#BaseType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when event was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strong typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.Message">
            <summary>
            Gets or sets the message text. For example, the text that would normally be written to a log file line.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.SeverityLevel">
            <summary>
            Gets or sets Trace severity level.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this trace.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#properties">Learn more</a>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.Microsoft#ApplicationInsights#DataContracts#ISupportSampling#SamplingPercentage">
            <summary>
            Gets or sets data sampling percentage (between 0 and 100).
            Should be 100/n where n is an integer. <a href="https://go.microsoft.com/fwlink/?linkid=832969">Learn more</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.DeepClone">
            <summary>
            Deeply clones a <see cref="T:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.IApplicationIdProvider">
            <summary>
            An interface for providing an Application Id for a given Instrumentation Key.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.IApplicationIdProvider.TryGetApplicationId(System.String,System.String@)">
            <summary>
            Retrieves the Application Id to be used for Request.Source or Dependency.Target
            </summary>
            <remarks>
            Application Insights data model defines two fields: request.source and dependency.target. 
            The first field identifies the component that initiated the dependency request, 
            and the second identifies which component returned the response of the dependency call.
            For more information see: https://docs.microsoft.com/azure/application-insights/application-insights-correlation
            </remarks>
            <param name="instrumentationKey">Instrumentation Key string used to lookup associated Application Id.</param>
            <param name="applicationId">Application Id corresponding to the Instrumentation Key. Returns NULL if a match was not found.</param>
            <returns>TRUE if Application Id was successfully retrieved; FALSE otherwise.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.IDebugOutput">
            <summary>
            Encapsulates method call that has to be compiled with DEBUG compiler constant.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.IDebugOutput.WriteLine(System.String)">
            <summary>
            Write the message to the VisualStudio output window.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.IDebugOutput.IsLogging">
            <summary>
            Checks to see if logging is enabled by an attached debugger. 
            </summary>
            <returns>true if a debugger is attached and logging is enabled; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.IDebugOutput.IsAttached">
            <summary>
            Checks to see if debugger is attached.
            </summary>
            <returns>true if debugger is attached.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.IExtension">
            <summary>
            Interface for defining strongly typed extensions to telemetry types.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.IExtension.DeepClone">
            <summary>
            Deep clones the members of the class.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationIdHelper.Format">
            <summary>
            special string which describes that ID was taken from Breeze
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationIdHelper.ApplicationIdMaxLength">
            <summary>
            Max length of Application Id allowed in response from Breeze.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationIdHelper.ApplyFormatting(System.String)">
            <summary>
            Format an Application Id string (ex: 00000000-0000-0000-0000-000000000000) 
            as (ex: cid-v1:00000000-0000-0000-0000-000000000000).
            </summary>
            <param name="applicationId">Application Id is expected to be a Guid string.</param>
            <remarks>
            To protect against injection attacks, Application Id will be truncated to a maximum length.
            Application Ids are expected to Http Header safe, and all non-ASCII characters will be removed.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationIdHelper.SanitizeString(System.String)">
            <summary>
            Application Id will eventually end up in Http Headers.
            Remove all characters which are not header safe.
            </summary>
            <remarks>
            Input is expected to be a GUID. For performance, only use the Regex after an unsupported character is discovered.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationIdHelper.EnforceMaxLength(System.String,System.Int32)">
            <summary>
            Check a strings length and trim to a max length if needed.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationIdHelper.IsCharHeaderSafe(System.Char)">
            <summary>
            US-ASCII characters (hex: 0x00 - 0x7F) (decimal: 0-127) (PARTIALLY ALLOWED)
            ASCII Extended characters (hex: 0x80 - 0xFF) (decimal: 128-255) (NOT ALLOWED)
            Non-Printable ASCII characters are (hex: 0x00 - 0x1F) (decimal: 0-31) (NOT ALLOWED)
            Printable ASCII characters are (hex: 0x20 - 0xFF) (decimal: 32-255) (PARTIALLY ALLOWED)
            ALLOWED characters are (hex: 0x20 - 0x7F) (decimal: 32-127)
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider">
            <summary>
            This <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider"/> will query the Application Insights' Breeze endpoint to lookup an Application Id based on Instrumentation Key.
            This will cache lookup results to prevent repeat queries.
            This will rely on the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ProfileServiceWrapper" /> and <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.FailedRequestsManager" /> to record failed requests and block additional failing requests.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider.MAXSIZE">
            <summary>
            Max number of Application Ids to cache.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider.#ctor(Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ProfileServiceWrapper)">
            <summary>
            Unit Test Only! Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider" /> class and accepts mocks for fetching Application Id.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider.ProfileQueryEndpoint">
            <summary>
            Gets or sets the endpoint that is to be used to get the Application Insights resource's profile (Application Id etc.). 
            Default value is "https://dc.services.visualstudio.com/api/profiles/{0}/appId". If this is overwritten, MUST include the '{0}' for string replacement!
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider.Dispose">
            <summary>
            Disposes resources
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider.TryGetApplicationId(System.String,System.String@)">
            <summary>
            Retrieves the Application Id corresponding to a given Instrumentation Key.
            </summary>
            <param name="instrumentationKey">Instrumentation Key string.</param>
            <param name="applicationId">Application Id corresponding to the provided Instrumentation Key. Returns NULL if a match was not found.</param>
            <returns>TRUE if Application Id was successfully retrieved, FALSE otherwise.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider.IsFetchAppInProgress(System.String)">
            <summary>
            Unit Test Only! Informs tests to wait for a fetch task to complete.
            </summary>
            <returns>TRUE if fetch task is still in progress, FALSE otherwise.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider.FormatAndAddToDictionary(System.String,System.String)">
            <summary>
            Format and store an Instrumentation Key and Application Id pair into the dictionary of known Application Ids.
            </summary>
            <param name="instrumentationKey">Instrumentation Key is expected to be a Guid string.</param>
            <param name="applicationId">Application Id is expected to be a Guid string. </param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.DictionaryApplicationIdProvider">
            <summary>
            Application Id Provider that holds a dictionary of Instrumentation Keys to Application Ids.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.DictionaryApplicationIdProvider.Defined">
            <summary>
            Gets or sets a dictionary of Instrumentation Keys to Application Ids
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.DictionaryApplicationIdProvider.Next">
            <summary>
            Gets or sets an <see cref="T:Microsoft.ApplicationInsights.Extensibility.IApplicationIdProvider" /> to use to lookup an Instrumentation Key not found in the dictionary.
            </summary>
            <remarks>
            This property is optional. If this is NULL, additional lookups will not be performed.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.DictionaryApplicationIdProvider.TryGetApplicationId(System.String,System.String@)">
            <summary>
            Provides an Application Id based on an Instrumentation Key.
            </summary>
            <param name="instrumentationKey">Instrumentation Key string used to lookup associated Application Id.</param>
            <param name="applicationId">Application Id corresponding to the Instrumentation Key. Returns NULL if a match was not found.</param>
            <returns>TRUE if Application Id was successfully retrieved, FALSE otherwise.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.FailedRequestsManager.RegisterFetchFailure(System.String,System.Net.HttpStatusCode)">
            <summary>
            Registers failure for further action in future.
            </summary>
            <param name="instrumentationKey">Instrumentation key for which the failure occurred.</param>
            <param name="httpStatusCode">Response code from Application Id Endpoint.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.FailedRequestsManager.RegisterFetchFailure(System.String,System.Exception)">
            <summary>
            Registers failure for further action in future.
            </summary>
            <param name="instrumentationKey">Instrumentation Key for which the failure occurred.</param>
            <param name="ex">Exception indicating failure.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.FailedRequestsManager.FailedResult">
            <summary>
            Structure that represents a failed fetch Application Id call.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.FailedRequestsManager.FailedResult.#ctor(System.TimeSpan,System.Net.HttpStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.FailedRequestsManager.FailedResult" /> class.
            </summary>
            <param name="retryAfter">Time to wait before a retry</param>
            <param name="httpStatusCode">Failure response code. Used to determine if we should retry requests.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ProfileServiceWrapper.GetAsync(System.String)">
            <summary>Send HttpRequest to get config id.</summary>
            <remarks>This method is internal virtual so it can be moq-ed in a unit test.</remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ProfileServiceWrapper.SendRequestAsync(System.String)">
            <summary>
            Retrieves the Application Id given the Instrumentation Key.
            </summary>
            <param name="instrumentationKey">Instrumentation key for which Application Id is to be retrieved.</param>
            <returns>Task to resolve Application Id.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ProfileServiceWrapper.GetApplicationIdEndPointUri(System.String)">
            <summary>
            Strips off any relative path at the end of the base URI and then appends the known relative path to get the Application Id uri.
            </summary>
            <param name="instrumentationKey">AI resource's Instrumentation Key.</param>
            <returns>Computed Uri.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.CallContextHelpers.SaveOperationContext(Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContextForCallContext)">
            <summary>
            Saves the context store to the call context.
            </summary>
            <param name="operationContext">Operation context store instance.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.CallContextHelpers.GetCurrentOperationContext">
            <summary>
            Returns the current operation context store present in the call context.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.CallContextHelpers.RestoreOperationContext(Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContextForCallContext)">
            <summary>
            Clears the call context and restores the parent operation.
            </summary>
            <param name="parentContext">Parent operation context store to replace child operation context store.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.CloudContext">
            <summary>
            Encapsulates information about a cloud where an application is running.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.CloudContext.RoleName">
            <summary>
            Gets or sets the role name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.CloudContext.RoleInstance">
            <summary>
            Gets or sets the role instance.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.ComponentContext">
            <summary>
            Encapsulates information describing an Application Insights component.
            </summary>
            <remarks>
            This class matches the "Application" schema concept. We are intentionally calling it "Component" for consistency
            with terminology used by our portal and services and to encourage standardization of terminology within our
            organization. Once a consensus is reached, we will change type and property names to match.
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.ComponentContext.Version">
            <summary>
            Gets or sets the application version.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext">
            <summary>
            Encapsulates information about a device where an application is running.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Type">
            <summary>
            Gets or sets the type for the current device.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Id">
            <summary>
            Gets or sets a device unique ID.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.OperatingSystem">
            <summary>
            Gets or sets the operating system name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.OemName">
            <summary>
            Gets or sets the device OEM for the current device.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Model">
            <summary>
            Gets or sets the device model for the current device.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.NetworkType">
            <summary>
            Gets or sets the <a href="http://www.iana.org/assignments/ianaiftype-mib/ianaiftype-mib">IANA interface type</a>
            for the internet connected network adapter.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.ScreenResolution">
            <summary>
            Gets or sets the current application screen resolution.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.DeviceContext.Language">
            <summary>
            Gets or sets the current display language of the operating system.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ExceptionConverter.ConvertToExceptionDetails(System.Exception,Microsoft.ApplicationInsights.Extensibility.Implementation.External.ExceptionDetails)">
            <summary>
            Converts a System.Exception to a Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryTypes.ExceptionDetails.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ExceptionConverter.GetStackFrame(System.Diagnostics.StackFrame,System.Int32)">
            <summary>
            Converts a System.Diagnostics.StackFrame to a Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryTypes.StackFrame.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ExceptionConverter.GetStackFrameLength(Microsoft.ApplicationInsights.Extensibility.Implementation.External.StackFrame)">
            <summary>
            Gets the stack frame length for only the strings in the stack frame.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.ExceptionConverter.SanitizeStackFrame``2(System.Collections.Generic.IList{``0},System.Func{``0,System.Int32,``1},System.Func{``1,System.Int32})">
            <summary>
            Sanitizing stack to 32k while selecting the initial and end stack trace.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.AjaxCallData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.AvailabilityData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
            <summary>
            Partial class to add the Lazy instantiation of ConcurrentDictionary.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.ContextTagKeys">
            <summary>
            Holds the static singleton instance of ContextTagKeys.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.DataPoint">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.EventData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
            <summary>
            Partial class to add the Lazy instantiation of ConcurrentDictionary.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.ExceptionData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
            <summary>
             Partial class to add the Lazy instantiation of ConcurrentDictionary.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.ExceptionDetails">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Additional implementation for ExceptionDetails.
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.External.ExceptionDetails.CreateWithoutStackInfo(System.Exception,Microsoft.ApplicationInsights.Extensibility.Implementation.External.ExceptionDetails)">
            <summary>
            Creates a new instance of ExceptionDetails from a System.Exception and a parent ExceptionDetails.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.MessageData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.MetricData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.PageViewData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.PageViewPerfData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.PerformanceCounterData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.RemoteDependencyData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.RequestData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Partial class to implement ISerializableWithWriter
            </summary>
            <summary>
            Partial class to declare measurements.( This is to be removed once
            every telemetry type gets rid of internal Data classes)
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.SessionStateData">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.StackFrame">
            <summary>
            Partial class to add the EventData attribute and any additional customizations to the generated type.
            </summary>
            <summary>
            Partial class to impelement ISerializableWithWriter
            </summary>    
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.External.Tags">
            <summary>
            Base class for tags backed context.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.HttpWebResponseWrapper">
            <summary>
            HttpWebResponse wrapper object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.HttpWebResponseWrapper.Content">
            <summary>
            Gets or sets HttpWebResponse content.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.HttpWebResponseWrapper.StatusCode">
            <summary>
            Gets or sets HttpWebResponse StatusCode. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.HttpWebResponseWrapper.RetryAfterHeader">
            <summary>
            Gets or sets HttpWebResponse Retry-After header value.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.HttpWebResponseWrapper.StatusDescription">
            <summary>
            Gets or sets HttpWebResponse StatusDescription.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext">
            <summary>
            Encapsulates Internal information.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.SdkVersion">
            <summary>
            Gets or sets application insights SDK version.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.AgentVersion">
            <summary>
            Gets or sets application insights agent version.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.InternalContext.NodeName">
            <summary>
            Gets or sets node name for the billing purposes. Use this filed to override the standard way node names got detected.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.IPlatform">
            <summary>
            Encapsulates platform-specific functionality required by the API.
            </summary>
            <remarks>
            This type is public to enable mocking on Windows Phone.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.IPlatform.ReadConfigurationXml">
            <summary>
            Returns contents of the ApplicationInsights.config file in the application directory.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.IPlatform.GetDebugOutput">
            <summary>
            Returns the platform specific Debugger writer to the VS output console.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.IPlatform.GetMachineName">
            <summary>
            Returns the machine name.
            </summary>
            <returns>The machine name.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.IRandomNumberBatchGenerator">
            <summary>
            Interface for random number generator capable of producing 
            a batch of unsigned 64 bit random numbers.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteStartObject">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteStartObject(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(System.String,System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(System.String,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(System.String,System.Nullable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(System.String,System.Nullable{System.TimeSpan})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(System.String,System.Nullable{System.DateTimeOffset})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(System.String,System.Collections.Generic.IList{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(System.String,System.Collections.Generic.IList{Microsoft.ApplicationInsights.Extensibility.ISerializableWithWriter})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(System.String,Microsoft.ApplicationInsights.Extensibility.ISerializableWithWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(Microsoft.ApplicationInsights.Extensibility.ISerializableWithWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(System.String,System.Collections.Generic.IDictionary{System.String,System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteProperty(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializationWriter.WriteEndObject">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializer">
            <summary>
            Serializes and compress the telemetry items into a JSON string. Compression will be done using GZIP, for Windows Phone 8 compression will be disabled because there
            is API support for it. 
            </summary>    
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializer.CompressionType">
            <summary>
            Gets the compression type used by the serializer. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializer.ContentType">
            <summary>
            Gets the content type used by the serializer. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializer.Serialize(System.Collections.Generic.IEnumerable{Microsoft.ApplicationInsights.Channel.ITelemetry},System.Boolean)">
            <summary>
            Serializes and compress the telemetry items into a JSON string. Each JSON object is separated by a new line. 
            </summary>
            <param name="telemetryItems">The list of telemetry items to serialize.</param>
            <param name="compress">Should serialization also perform compression.</param>
            <returns>The compressed and serialized telemetry items.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializer.ConvertToByteArray(System.String,System.Boolean)">
            <summary>
            Converts serialized telemetry items to a byte array.
            </summary>
            <param name="telemetryItems">Serialized telemetry items.</param>
            <param name="compress">Should serialization also perform compression.</param>
            <returns>The compressed and serialized telemetry items.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializer.Deserialize(System.Byte[],System.Boolean)">
            <summary>
            Deserializes and decompress the telemetry items into a JSON string.
            </summary>
            <param name="telemetryItemsData">Serialized telemetry items.</param>
            <param name="compress">Should deserialization also perform decompression.</param>
            <returns>Telemetry items serialized as a string.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializer.Serialize(Microsoft.ApplicationInsights.Channel.ITelemetry,System.Boolean)">
            <summary>
             Serialize and compress a telemetry item. 
            </summary>
            <param name="telemetryItem">A telemetry item.</param>
            <param name="compress">Should serialization also perform compression.</param>
            <returns>The compressed and serialized telemetry item.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializer.SerializeAsString(System.Collections.Generic.IEnumerable{Microsoft.ApplicationInsights.Channel.ITelemetry})">
            <summary>
            Serializes <paramref name="telemetryItems"/> into a JSON string. Each JSON object is separated by a new line. 
            </summary>
            <param name="telemetryItems">The list of telemetry items to serialize.</param>
            <returns>A JSON string of all the serialized items.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializer.SerializeAsString(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Serializes a <paramref name="telemetry"/> into a JSON string. 
            </summary>
            <param name="telemetry">The telemetry to serialize.</param>
            <returns>A JSON string of the serialized telemetry.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializer.CreateCompressedStream(System.IO.Stream)">
            <summary>
            Creates a GZIP compression stream that wraps <paramref name="stream"/>. For windows phone 8.0 it returns <paramref name="stream"/>. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.JsonSerializer.SerializeToStream(System.Collections.Generic.IEnumerable{Microsoft.ApplicationInsights.Channel.ITelemetry},System.IO.TextWriter)">
            <summary>
            Serializes <paramref name="telemetryItems"/> and write the response to <paramref name="streamWriter"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext">
            <summary>
            Encapsulates telemetry location information.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.LocationContext.Ip">
            <summary>
            Gets or sets the location IP.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContext">
            <summary>
            Encapsulates information about an operation. Operation normally reflects an end to end scenario that starts from a user action (e.g. button click).
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContext.Id">
            <summary>
            Gets or sets the application-defined operation ID for the topmost operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContext.ParentId">
            <summary>
            Gets or sets the parent operation ID.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContext.CorrelationVector">
            <summary>
            Gets or sets the correlation vector for the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContext.Name">
            <summary>
            Gets or sets the application-defined topmost operation's name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContext.SyntheticSource">
            <summary>
            Gets or sets the application-defined operation SyntheticSource.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContextForCallContext">
            <summary>
            Operation class that holds operation id and operation name for the current call context.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContextForCallContext.ParentOperationId">
            <summary>
            Operation id that will be assigned to all the child telemetry items.
            Parent Operation id that will be assigned to all the child telemetry items.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContextForCallContext.RootOperationId">
            <summary>
            Root Operation id that will be assigned to all the child telemetry items.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContextForCallContext.RootOperationName">
            <summary>
            Operation name that will be assigned to all the child telemetry items.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationContextForCallContext.CorrelationContext">
            <summary>
            Context that is propagated with HTTP outbound calls, check for null.
            <see href="https://github.com/lmolkova/correlation/blob/master/http_protocol_proposal_v1.md"/> 
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationHolder`1">
            <summary>
            Operation class that holds the telemetry item and the corresponding telemetry client.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationHolder`1.ParentContext">
            <summary>
            Parent context store that is used to restore call context.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationHolder`1.isDisposed">
            <summary>
            Indicates if this instance has been disposed of.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationHolder`1.#ctor(Microsoft.ApplicationInsights.TelemetryClient,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationHolder`1"/> class.
            Initializes telemetry client.
            </summary>
            <param name="telemetryClient">Initializes telemetry client object.</param>
            <param name="telemetry">Operation telemetry item that is assigned to the telemetry associated to the current operation item.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationHolder`1.Telemetry">
            <summary>
            Gets Telemetry item of interest that is created when StartOperation function of ClientExtensions is invoked.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationHolder`1.Dispose">
            <summary>
            Dispose method to clear the variables.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationHolder`1.Dispose(System.Boolean)">
            <summary>
            Computes the duration and tracks the respective telemetry item on dispose.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry">
            <summary>
            Base class for telemetry types representing duration in time.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.StartTime">
            <summary>
            Gets or sets the start time of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Id">
            <summary>  
            Gets or sets Operation ID.
            </summary>  
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Name">
            <summary>
            Gets or sets the name of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Success">
            <summary>
            Gets or sets whether operation has finished successfully.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Duration">
            <summary>
            Gets or sets the duration of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Metrics">
            <summary>
            Gets the custom metrics collection.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Properties">
            <summary>
            Gets the custom properties collection.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Timestamp">
            <summary>
            Gets or sets the timestamp for the operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Context">
            <summary>
            Gets the object that contains contextual information about the application at the time when it handled the request.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Extension">
            <summary>
            Gets or sets gets the extension used to extend this telemetry instance using new strong typed object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.BeginTimeInTicks">
            <summary>  
            Gets or sets Time in StopWatch ticks representing begin time of the operation. Used internally
            for calculating duration between begin and end.
            </summary>  
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Microsoft#ApplicationInsights#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.DeepClone">
            <summary>
            Deeply clones a <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry"/> object.
            </summary>
            <returns>A cloned instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.SerializeData(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.GenerateId">
            <summary>
            Sets operation Id.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry.Sanitize">
            <summary>
            Allow to call OperationTelemetry.Sanitize method from child classes.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Platform.PlatformImplementation">
            <summary>
            The .NET 4.0 and 4.5 implementation of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.IPlatform"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Platform.PlatformImplementation.#ctor">
            <summary>
            Initializes a new instance of the PlatformImplementation class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Platform.PlatformImplementation.ReadConfigurationXml">
            <summary>
            Returns contents of the ApplicationInsights.config file in the application directory.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Platform.PlatformImplementation.GetDebugOutput">
            <summary>
            Returns the platform specific Debugger writer to the VS output console.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Platform.PlatformImplementation.GetMachineName">
            <summary>
            Returns the machine name.
            </summary>
            <returns>The machine name.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Platform.PlatformSingleton">
            <summary>
            Provides access to the <see cref="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Platform.PlatformSingleton.Current"/> platform.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Platform.PlatformSingleton.Current">
            <summary>
            Gets or sets the current <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.IPlatform"/> implementation.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Property">
            <summary>
            A helper class for implementing properties of telemetry and context classes.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource">
            <summary>
            Event Source exposes Application Insights telemetry information as ETW events.
            </summary>
            <summary>
            Event Source exposes Application Insights telemetry information as ETW events.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Log">
            <summary>RichPayloadEventSource instance.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.EventSourceInternal">
            <summary>Event source.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.EventProviderName">
            <summary>Event provider name.</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.#ctor">
            <summary>
            Initializes a new instance of the RichPayloadEventSource class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RichPayloadEventSource class.
            </summary>
            <param name="providerName">The ETW provider name.</param>
            <remarks>Internal so that unit tests can provide a unique provider name.</remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Process(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Process a collected telemetry item.
            </summary>
            <param name="item">A collected Telemetry item.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.ProcessOperationStart(Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry)">
            <summary>
            Record an operation start.
            </summary>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.ProcessOperationStop(Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry)">
            <summary>
            Record an operation stop.
            </summary>
            <param name="operation">The operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Dispose(System.Boolean)">
            <summary>
            Disposes the object.
            </summary>
            <param name="disposing">True if disposing.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords">
            <summary>
            Keywords for the RichPayloadEventSource.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.Requests">
            <summary>
            Keyword for requests.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.Traces">
            <summary>
            Keyword for traces.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.Events">
            <summary>
            Keyword for events.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.Exceptions">
            <summary>
            Keyword for exceptions.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.Dependencies">
            <summary>
            Keyword for dependencies.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.Metrics">
            <summary>
            Keyword for metrics.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.PageViews">
            <summary>
            Keyword for page views.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.PerformanceCounters">
            <summary>
            Keyword for performance counters.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.SessionState">
            <summary>
            Keyword for session state.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.Availability">
            <summary>
            Keyword for availability.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.Operations">
            <summary>
            Keyword for operations (Start/Stop).
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.RichPayloadEventSource.Keywords.PageViewPerformance">
            <summary>
            Keyword for page view performance.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.SdkVersionUtils.GetSdkVersion(System.String)">
            <summary>
            Builds a string representing file version of the assembly with added prefix
            in format prefix:major.minor-revision.
            </summary>
            <param name="versionPrefix">Prefix to add to version.</param>
            <returns>String representation of the version with prefix added.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.SessionContext">
            <summary>
            Encapsulates information about a user session.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.SessionContext.Id">
            <summary>
            Gets or sets the application-defined session ID.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.SessionContext.IsFirst">
            <summary>
            Gets or sets the IsFirst Session for the user.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimer">
            <summary>
            Runs a task after a certain delay and log any error.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimer.InfiniteTimeSpan">
            <summary>
            Represents an infinite time span.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimer.Delay">
            <summary>
            Gets or sets the delay before the task starts. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimer.IsStarted">
            <summary>
            Gets a value indicating whether value that indicates if a task has already started.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimer.Start(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Start the task.
            </summary>
            <param name="elapsed">The task to run.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimer.Cancel">
            <summary>
            Cancels the current task.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimer.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimer.Dispose(System.Boolean)">
            <summary>
            Disposes the timer.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimerInternal">
            <summary>
            Runs a task after a certain delay and log any error.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimerInternal.InfiniteTimeSpan">
            <summary>
            Represents an infinite time span.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimerInternal.Delay">
            <summary>
            Gets or sets the delay before the task starts. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimerInternal.IsStarted">
            <summary>
            Gets a value indicating whether value that indicates if a task has already started.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimerInternal.Start(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Start the task.
            </summary>
            <param name="elapsed">The task to run.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimerInternal.Cancel">
            <summary>
            Cancels the current task.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimerInternal.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TaskTimerInternal.LogException(System.Exception)">
            <summary>
            Log exception thrown by outer code.
            </summary>
            <param name="exception">Exception to log.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Telemetry.CopyGlobalPropertiesIfExist(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Copies GlobalProperties to the target's Properties. 
            This avoids accessing the public accessor GlobalProperties to avoid the penalty of ConcurrentDictionary instantiation.
            </summary> 
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Telemetry.CopyGlobalPropertiesIfExist(Microsoft.ApplicationInsights.Channel.ITelemetry,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Copies GlobalProperties to the target dictionary.
            This avoids accessing the public accessor GlobalProperties to avoid the penalty of ConcurrentDictionary instantiation.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Telemetry.FlattenIExtensionIfExists(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Flattens Extension object on ITelemetry if exists into the properties and measurements
            </summary>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Telemetry.FlattenTelemetryIntoEventData(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Flattens ITelemetry object into the properties and measurements
            </summary>        
            <returns>EventData containing flattened ITelemetry object</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Telemetry.IsDeveloperMode(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Inspect if <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/> Properties contains 'DeveloperMode' and return it's boolean value.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Telemetry.NormalizeInstrumentationKey(System.String)">
            <summary>
            Normalize instrumentation key by removing dashes ('-') and making string in the lowercase.
            In case no InstrumentationKey is available just return empty string.
            In case when InstrumentationKey is available return normalized key + dot ('.')
            as a separator between instrumentation key part and telemetry name part.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryConfigurationFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryConfigurationFactory"/> class.
            </summary>
            <remarks>
            This constructor is protected because <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryConfigurationFactory"/> is only meant to be instantiated 
            by the <see cref="P:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryConfigurationFactory.Instance"/> property or by tests.
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryConfigurationFactory.Instance">
            <summary>
            Gets or sets the default <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryConfigurationFactory"/> instance used by <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration"/>.
            </summary>
            <remarks>
            This property is a test isolation "pinch point" that allows us to test <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration"/> without using reflection.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryConfigurationFactory.LoadTelemetrySinks(System.Xml.Linq.XElement,Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Loads a collection of <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetrySink"/> from configuration.
            </summary>
            <param name="definition">Configuration element representing a collection of <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetrySink"/> instances.</param>
            <param name="telemetryConfiguration">Telemetry configuration to use for new sinks.</param>
            <remarks>
            There are a few of reasons why special handling for TelemetrySinks collection is necessary. 
            1. Just like for TelemetryProcessors, sinks have to be created using a constructor that takes parameters(telemetry configuration in the sink case).
            2. There is special logic involving default sink (always present, and designated by the name "default"). Default sink is never created from configuration.
            3. If the sink is referred to multiple times in the configuration (by the same name), we apply all the configuration to a single, named instance.
            This part is somewhat arbitrary, but we had to choose some behavior in case we are facing repeated sink configuration with the same name,
            and this is a reasonable choice.
            </remarks>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryContextExtensions">
            <summary>
            Extension methods for TelemetryContext.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryContextExtensions.GetInternalContext(Microsoft.ApplicationInsights.DataContracts.TelemetryContext)">
            <summary>
            Returns TelemetryContext's Internal context.
            </summary>
            <param name="context">Telemetry context to get Internal context for.</param>
            <returns>Internal context for TelemetryContext.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryDebugWriter">
            <summary>
            Writes telemetry items to debug output.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryDebugWriter.IsTracingDisabled">
            <summary>
            Gets or sets a value indicating whether writing telemetry items to debug output is enabled.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryDebugWriter.WriteTelemetry(Microsoft.ApplicationInsights.Channel.ITelemetry,System.String)">
            <summary>
            Write the specified <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/> item to debug output.
            </summary>
            <param name="telemetry">Item to write.</param>
            <param name="filteredBy">If specified, indicates the telemetry item was filtered out and not sent to the API.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChain">
            <summary>
            Represents the TelemetryProcessor chain. Clients should use TelemetryProcessorChainBuilder to construct this object.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChain.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChain" /> class.
            Marked internal, as clients should use TelemetryProcessorChainBuilder to build the processing chain.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChain.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChain" /> class by using the given list elements.
            Marked internal, as clients should use TelemetryProcessorChainBuilder to build the processing chain.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChain.FirstTelemetryProcessor">
            <summary>
            Gets the first telemetry processor from the chain of processors.        
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChain.TelemetryProcessors">
            <summary>
            Gets the list of TelemetryProcessors making up this chain.        
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChain.Process(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Invokes the process method in the first telemetry processor.
            </summary>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChain.Dispose">
            <summary>
            Releases resources used by the current instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChain"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder">
            <summary>
            Represents an object used to Build a TelemetryProcessorChain.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder" /> class.
            </summary>
            <param name="configuration"> The <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration"/> instance to which the constructed processing chain should be set to.</param>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration,Microsoft.ApplicationInsights.Extensibility.TelemetrySink)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder" /> class.
            </summary>
            <param name="configuration">Configuration instance to use for constructing the processor chain.</param>
            <param name="telemetrySink">Telemetry sink the processor chain will be assigned to.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Use(System.Func{Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor})">
            <summary>
            Uses given factory to add TelemetryProcessor to the chain of processors. The processors
            in the chain will be invoked in the same order in which they are added.
            </summary>
            <param name="telemetryProcessorFactory">A delegate that returns a <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor"/>
            , given the next <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor"/> in the call chain.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryProcessorChainBuilder.Build">
            <summary>
            Builds the chain of linked <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor" /> instances and sets the same in configuration object passed.
            A special telemetry processor for handling Transmission is always appended as the last
            processor in the chain.
            </summary>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.OperationIsNullWarning(System.String)">
            <summary>
            Logs the information when there operation to track is null.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.InvalidOperationToStopError(System.String)">
            <summary>
            Logs the information when there operation to stop does not match the current operation.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.InvalidOperationToStopDetails(System.String,System.String)">
            <summary>
            Logs the details when there operation to stop does not match the current operation.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.Keywords">
            <summary>
            Keywords for the PlatformEventSource.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.Keywords.UserActionable">
            <summary>
            Key word for user actionable events.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.Keywords.Diagnostics">
            <summary>
            Keyword for errors that trace at Verbose level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.Keywords.VerboseFailure">
            <summary>
            Keyword for errors that trace at Verbose level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.CoreEventSource.Keywords.ErrorFailure">
            <summary>
            Keyword for errors that trace at Error level.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsListener">
            <summary>
            Subscriber to ETW Event source events, which sends data to other Senders (F5 and Portal).
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule">
            <summary>
            Use diagnostics telemetry module to report SDK internal problems to the portal and VS debug output window.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.IsHeartbeatEnabled">
            <summary>
            Gets or sets a value indicating whether or not the Heartbeat feature is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.HeartbeatInterval">
            <summary>
            Gets or sets the delay interval between heartbeats.
            
            <remarks>
            Note that there is a minimum interval <see cref="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.MinimumHeartbeatInterval"/> and if an 
            attempt to make the interval less than this minimum value is detected, the interval rate will be set to 
            the minimum. 
            Also note, if the interval is set to any value less than the current channel flush rate, the heartbeat may 
            not be emitted at expected times. (The heartbeat will still be sent, but after having been cached for a 
            time first).
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.ExcludedHeartbeatPropertyProviders">
            <summary>
            Gets a list of default heartbeat property providers that are disabled and will not contribute to the
            default heartbeat properties. The only default heartbeat property provide currently defined is named
            'Base'.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.ExcludedHeartbeatProperties">
            <summary>
            Gets a list of property names that are not to be sent with the heartbeats. null/empty list means allow all default properties through.
            
            <remarks>
            Default properties supplied by the Application Insights SDK:
            baseSdkTargetFramework, osType, processSessionId
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Severity">
            <summary>
            Gets or sets diagnostics Telemetry Module LogLevel configuration setting. 
            Possible values LogAlways, Critical, Error, Warning, Informational and Verbose.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.DiagnosticsInstrumentationKey">
            <summary>
            Gets or sets instrumentation key for diagnostics. Use to redirect SDK 
            internal problems reporting to the separate instrumentation key.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initializes this telemetry module.
            </summary>
            <param name="configuration">Telemetry configuration to use for this telemetry module.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.AddHeartbeatProperty(System.String,System.String,System.Boolean)">
            <summary>
            Add a new Heartbeat property to the payload sent with each heartbeat.
            
            To update the value of the property you are adding to the heartbeat, 
            <see cref="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.SetHeartbeatProperty(System.String,System.String,System.Nullable{System.Boolean})"/>.
            
            Note that you cannot add a HeartbeatProperty with a name that already exists in the Heartbeat
            payload, including (but not limited to) the name of SDK-default items.
            
            </summary>
            <param name="propertyName">Name of the heartbeat value to add</param>
            <param name="propertyValue">Current value of the heartbeat value to add</param>
            <param name="isHealthy">Flag indicating whether or not the property represents a healthy value</param>
            <returns>True if the new payload item is successfully added, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.SetHeartbeatProperty(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Set an updated value into an existing property of the heartbeat. The propertyName must be non-null and non-empty
            and at least one of the propertyValue and isHealthy parameters must be non-null.
            
            After the new HeartbeatProperty has been added (<see cref="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.AddHeartbeatProperty(System.String,System.String,System.Boolean)"/>) to the 
            heartbeat payload, the value represented by that item can be updated using this method at any time.
            
            </summary>
            <param name="propertyName">Name of the heartbeat payload item property to set the value and/or its health status.</param>
            <param name="propertyValue">Value of the heartbeat payload item. If this is null, the current value in the item is left unchanged.</param>
            <param name="isHealthy">Health status of the heartbeat payload item. If this is set to null the health status is left unchanged.</param>
            <returns>True if the payload provider was added, false if it hasn't been added yet 
            (<see cref="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.AddHeartbeatProperty(System.String,System.String,System.Boolean)"/>).</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Dispose">
            <summary>
            Disposes this object.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.DiagnosticsTelemetryModule.Dispose(System.Boolean)">
            <summary>
            Disposes of resources.
            </summary>
            <param name="managed">Indicates if managed code is being disposed.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.EventMetaData">
            <summary>
            Event metadata from event source method attribute.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.Extensions">
            <summary>
            Provides a set of extension methods for tracing.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.Extensions.ToInvariantString(System.Exception)">
            <summary>
            Returns a culture-independent string representation of the given <paramref name="exception"/> object, 
            appropriate for diagnostics tracing.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IDiagnosticsSender.Send(Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.TraceEvent)">
            <summary>
            Sends diagnostics data to the appropriate output.
            </summary>
            <param name="eventData">Information about trace event.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.PortalDiagnosticsQueueSender">
            <summary>
            A dummy queue sender to keep the data to be sent to the portal before the initialize method is called.
            This is due to the fact that initialize method cannot be called without the configuration and 
            the event listener write event is triggered before the diagnosticTelemetryModule initialize method is triggered.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.PortalDiagnosticsSender">
            <summary>
            This class is responsible for sending diagnostics information into portal.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.PortalDiagnosticsSender.AiPrefix">
            <summary>
            Prefix of the traces in portal.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.PortalDiagnosticsSender.AiNonUserActionable">
            <summary>
            For user non actionable traces use AI Internal prefix.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.PortalDiagnosticsSender.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration,Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IDiagnoisticsEventThrottlingManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.PortalDiagnosticsSender"/> class. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.PortalDiagnosticsSender.DiagnosticsInstrumentationKey">
            <summary>
            Gets or sets instrumentation key for diagnostics (optional).
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.ThreadResourceLock">
            <summary>
            Thread level resource section lock.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.ThreadResourceLock.syncObject">
            <summary>
            Thread level lock object.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.ThreadResourceLock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.ThreadResourceLock" /> class.
            Marks section locked.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.ThreadResourceLock.IsResourceLocked">
            <summary>
            Gets a value indicating whether lock is set on the section.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.ThreadResourceLock.Dispose">
            <summary>
            Release lock.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.TraceEvent">
            <summary>
            Event Source event wrapper.
            Contains description information for trace event.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.TraceEvent.MetaData">
            <summary>
            Gets or sets event metadata.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.TraceEvent.Payload">
            <summary>
            Gets or sets event parameters.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.BaseDefaultHeartbeatPropertyProvider.uniqueProcessSessionId">
            <summary>
            A unique identifier that would help to indicate to the analytics when the current process session has
            restarted. 
            
            <remarks>If a process is unstable and is being restared frequently, tracking this property
            in the heartbeat would help to identify this unstability.
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.BaseDefaultHeartbeatPropertyProvider.GetRuntimeFrameworkVer">
            <summary>
            This will return the current running .NET framework version, based on the version of the assembly that owns
            the 'Object' type. The version number returned can be used to infer other things such as .NET Core / Standard.
            </summary>
            <returns>a string representing the version of the current .NET framework</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.BaseDefaultHeartbeatPropertyProvider.GetBaseSdkTargetFramework">
            <summary>
            Returns the current target framework that the assembly was built against.
            </summary>
            <returns>standard string representing the target framework</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.BaseDefaultHeartbeatPropertyProvider.GetRuntimeOsType">
            <summary>
            Runtime information for the underlying OS, should include Linux information here as well.
            Note that in NET45/46 the PlatformId is returned which have slightly different (more specific,
            such as Win32NT/Win32S/MacOSX/Unix) values than in NETSTANDARD assemblies where you will get
            the OS platform Windows/Linux/OSX.
            </summary>
            <returns>String representing the OS or 'unknown'.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.BaseDefaultHeartbeatPropertyProvider.GetProcessSessionId">
            <summary>
            Return a unique process session identifier that will only be set once in the lifetime of a 
            single executable session.
            </summary>
            <returns>string representation of a unique id</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatPropertyPayload">
            <summary>
            Payload stored and used to transmit Health Heartbeat properties with, allowing for user to push updates
            as they deem necessary.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatPropertyPayload.PayloadValue">
            <summary>
            Gets or sets the payload value at the time the property item was added, as a string
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatPropertyPayload.IsHealthy">
            <summary>
            Gets or sets a value indicating whether this property is currently in a healthy or unhealthy state
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatPropertyPayload.IsUpdated">
            <summary>
            Gets or sets a value indicating whether this property payload has been updated since the last time it was delivered in a heartbeat
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider">
            <summary>
            Implementation of heartbeat functionality.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.DefaultHeartbeatInterval">
            <summary>
            The default interval between heartbeats if not specified by the user. Left public for use in unit tests.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.MinimumHeartbeatInterval">
            <summary>
            The minimum interval that can be set between heartbeats.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.sdkVersionPropertyValue">
            <summary>
            Value for property indicating 'app insights version' related specifically to heartbeats.
            </summary>        
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.heartbeatSyntheticMetricName">
            <summary>
            The name of the heartbeat metric item and operation context. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.disabledDefaultFields">
            <summary>
            List of fields that are not to be sent with the payload. Empty list means send everything available.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.disabledHeartbeatPropertyProviders">
            <summary>
            List of default heartbeat property providers that are not to contribute to the payload. Empty list means send everything available.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.heartbeatProperties">
            <summary>
            The payload items to send out with each heartbeat.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.HeartbeatInterval">
            <summary>
            Gets or sets the currently defined interval between heartbeats
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.InstrumentationKey">
            <summary>
            Gets or sets the currently defined instrumentation key to send heartbeat telemetry items to.
            
            Note that if the heartbeat provider has not been initialized yet, this key would get reset to 
            whatever the telemetry configuration the heartbeat provider is initialized with.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.IsHeartbeatEnabled">
            <summary>
            Gets or sets a value indicating whether or not heartbeats are enabled
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.ExcludedHeartbeatPropertyProviders">
            <summary>
            Gets a list of default heartbeat property providers that are disabled and will not contribute to the
            default heartbeat properties.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.ExcludedHeartbeatProperties">
            <summary>
            Gets a list of default field names that should not be sent with each heartbeat.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.HeartbeatProvider.GatherData">
            <summary>
            Get the metric telemetry item that will be sent.
            
            Note: exposed to internal to allow inspection for testing.
            </summary>
            <returns>A MetricTelemtry item that contains the currently defined payload for a heartbeat 'pulse'.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatDefaultPayloadProvider">
            <summary>
            Provides default properties for the heartbeat.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatDefaultPayloadProvider.Name">
            <summary>
            Gets the name of this heartbeat payload provider. Users can disable default payload providers 
            altogether by specifying them in the ApplicationInsights.config file, or by setting properties
            on the HeartbeatProvider at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatDefaultPayloadProvider.IsKeyword(System.String)">
            <summary>
            Assess if a given string contains a keyword that this default payload provider supplies to the
            heartbeat payload. This is primarly used to dissallow users from adding or setting a conflicting
            property into the heartbeat.
            </summary>
            <param name="keyword">string to test against supplied property names</param>
            <returns>True if the given keyword conflicts with this default payload provider's properties</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatDefaultPayloadProvider.SetDefaultPayload(System.Collections.Generic.IEnumerable{System.String},Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatProvider)">
            <summary>
            Call to initiate the setting of properties in the given heartbeat provider.
            </summary>
            <param name="disabledFields">List of any default heartbeat payload field names that the user has specified as being disabled.</param>
            <param name="provider">The heartbeat provider to set the values into.</param>
            <returns>True if any fields were set into the provider, false if none were.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager">
            <summary>
            Defines an implementation for management of the heartbeat feature of the 
            Application Insights SDK meant for public consumption. Add/Set properties, 
            disable/enable the heartbeat, and set the interval between heartbeat pulses.
            <remarks>
            If a module is present in the SDK at runtime that implements this interface, the
            heartbeat feature can be extended or configured as necessary.
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.IsHeartbeatEnabled">
            <summary>
            Gets or sets a value indicating whether or not the Heartbeat feature is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.ExcludedHeartbeatPropertyProviders">
            <summary>
            Gets a list of default heartbeat property providers that are disabled and will not contribute to the
            default heartbeat properties.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.HeartbeatInterval">
            <summary>
            Gets or sets the delay between heartbeats.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.ExcludedHeartbeatProperties">
            <summary>
            Gets a list of property names that are not to be sent with the heartbeats.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.AddHeartbeatProperty(System.String,System.String,System.Boolean)">
            <summary>
            Add a new Heartbeat property to the payload sent with each heartbeat.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatPropertyManager.SetHeartbeatProperty(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Set an updated value into an existing property of the heartbeat.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing.IHeartbeatProvider">
            <summary>
            Internal interface for providing heartbeat information into the SDK pipeline. Useful
            for mocking for unit test purposes.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TransmissionProcessor">
            <summary>
            An <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor"/> that act as a proxy to the Transmission of telemetry"/>.
            The <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetryChannel"/>, passed at construction time, will be used for transmission.
            This processor is always appended as the last processor in the chain.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TransmissionProcessor.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetrySink)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TransmissionProcessor"/> class.
            </summary>        
            <param name="sink">The <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetrySink"/> holding to the telemetry channel to use for sending telemetry.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TransmissionProcessor.Process(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Process the given <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/> item. Here processing is sending the item through the channel/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TypeExtensions">
            <summary>
            Defines extension methods that allow coding against <see cref="T:System.Type"/> without conditional compilation on versions of .NET framework.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TypeExtensions.IsAssignableFrom(System.Type,System.Type)">
            <summary>
            Returns a value that indicates whether the specified type can be assigned to the current type.
            </summary>
            <remarks>
            This method emulates the built-in method of the <see cref="T:System.Type"/> class which is not available on Windows Runtime.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TypeExtensions.GetProperties(System.Type)">
            <summary>
            Returns all the public properties of the specified type.
            </summary>
            <remarks>
            This method emulates the built-in method of the <see cref="T:System.Type"/> class which is not available on Windows Runtime.
            Note that, unlike the built-in <see cref="T:System.Type"/> method, this method does not return properties defined in any of the base types.
            However, this should be sufficient for our public types, which have to be sealed on Windows Runtime.
            </remarks>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.UserContext">
            <summary>
            Encapsulates information about a user using an application.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.UserContext.Id">
            <summary>
            Gets or sets the ID of user accessing the application.
            </summary>
            <remarks>
            Unique user ID is automatically generated in default Application Insights configuration.
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.UserContext.AccountId">
            <summary>
            Gets or sets the ID of an application-defined account associated with the user.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.UserContext.UserAgent">
            <summary>
            Gets or sets the UserAgent of an application-defined account associated with the user.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.UserContext.AuthenticatedUserId">
            <summary>
            Gets or sets the authenticated user id.
            Authenticated user id should be a persistent string that uniquely represents each authenticated user in the application or service.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Utils">
            <summary>
            Various utilities.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Utils.PopulateRequiredStringValue(System.String,System.String,System.String)">
            <summary>
            Validates the string and if null or empty populates it with '$parameterName is a required field for $telemetryType' value.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Utils.ValidateDuration(System.String)">
            <summary>
            Returns default Timespan value if not a valid Timespan.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.random">
            <summary>
            Generator singleton.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.index">
            <summary>
            Index of the last used random number within pre-generated array.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.segmentCount">
            <summary>
            Count of segments of random numbers.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.segmentSize">
            <summary>
            Number of random numbers per segment.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.bitsToStoreRandomIndexWithinSegment">
            <summary>
            Number of bits used to store index of the random number within segment.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.segmentIndexMask">
            <summary>
            Bit mask to get segment index bits.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.randomIndexWithinSegmentMask">
            <summary>
            Bit mask to get index of the random number within segment.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.randomArrayIndexMask">
            <summary>
            Bit mask to get index of the random number in the pre-generated array.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.randomGemerators">
            <summary>
            Array of random number batch generators (one per each segment).
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.randomNumbers">
            <summary>
            Array of pre-generated random numbers.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.Initialize">
            <summary>
            Initializes generator with a set of random numbers.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.Initialize(System.Func{System.UInt64,Microsoft.ApplicationInsights.Extensibility.Implementation.IRandomNumberBatchGenerator},System.Int32,System.Int32)">
            <summary>
            Initializes generator with a set of random numbers.
            </summary>
            <param name="randomGeneratorFactory">Factory used to create random number batch generators.</param>
            <param name="segmentIndexBits">Number of significant bits in segment index, i.e. value of 3 means 8 segments of random numbers - 0..7.</param>
            <param name="segmentBits">Number of significant bits in random number index within segment, i.e. value of 10 means 1024 random numbers per segment.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.Next">
            <summary>
            Weakly thread safe next (random) operation id generator
            where 'weakly' indicates that it is unlikely we'll get into 
            collision state.
            </summary>
            <returns>Next operation id.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.WeakConcurrentRandom.RegenerateSegment(System.Int32)">
            <summary>
            Generates random number batch for segment which just exhausted
            according to value of the new index.
            </summary>
            <param name="newIndex">Index in random number array of the random number we're about to return.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.XorshiftRandomBatchGenerator">
            <summary>
            Generates batches of random number using Xorshift algorithm
            Note: implementation of XorShift algorithm https://en.wikipedia.org/wiki/Xorshift. You can find some extra details and performance tests here http://www.codeproject.com/Articles/9187/A-fast-equivalent-for-System-Random.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.XorshiftRandomBatchGenerator.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.XorshiftRandomBatchGenerator"/> class.
            </summary>
            <param name="seed">Random generator seed value.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.XorshiftRandomBatchGenerator.NextBatch(System.UInt64[],System.Int32,System.Int32)">
            <summary>
            Generates a batch of random numbers.
            </summary>
            <param name="buffer">Buffer to put numbers in.</param>
            <param name="index">Start index in the buffer.</param>
            <param name="count">Count of random numbers to generate.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules">
            <summary>
            This API supports the AI Framework infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Instance">
            <summary>
            Gets the TelemetryModules collection.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.TelemetryModules.Modules">
            <summary>
            Gets the telemetry modules collection.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor">
            <summary>
            An instance of this class is contained within the <see cref="T:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor"/> telemetry processor.
            It extracts auto-collected, pre-aggregated (aka. "standard") metrics from DependencyTelemetry objects which represent
            invocations of remote dependencies performed by the monitored service.
            </summary>
            <remarks>
            Auto-Discovering Dependency Types: **
            Dependency call duration is collected as a metric for failed and successful calls separately, and grouped by dependency type.
            It is essential to control the number of data series produced by this extractor: It must be a small, bounded value.
            However, this extractor needs to support different modules that collect information about different kinds of dependencies.
            To meet these constraints, the extractor will auto-discover dependency types, but it will not auto-discover more types than
            the number controlled by the <see cref="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.MaxDependencyTypesToDiscover" /> property.
            The first <c>MaxDependencyTypesToDiscover</c> dependency types encountered will be tracked separately.
            Additional types will all be grouped as "<c>Other</c>".
            Customers should set this value to a value such that "<c>Other</c>" does not actually occur in practice.
            As a guidance, a good value will be approximately in range 1 - 20. If significantly more types are expected, it should be
            examined whether the dependency type field is used appropriately.
            If <c>MaxDependencyTypesToDiscover</c> is set to <c>0</c>, dependency calls will not be grouped by type.
            </remarks>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.MaxDependenctTypesToDiscoverDefault">
            <summary>
            The default value for the <see cref="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.MaxDependencyTypesToDiscover"/> property if it is not set to a different value.
            See also the remarks about the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor"/> class for additional info about the use
            the of <c>MaxDependencyTypesToDiscover</c>-property.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.initializationLock">
            <summary>
            <see cref="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.ReinitializeMetrics(System.Int32)" />-lock.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.metricTelemetryClient">
            <summary>
            The <c>TelemetryClient</c> to be used for creating and sending the metrics by this extractor.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.dependencyCallDurationMetric">
            <summary>
            Extracted metric.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.maxDependencyTypesToDiscover">
            <summary>
            Maximum number of auto-discovered dependency types
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.ExtractorName">
            <summary>
            Gets the name of this extractor.
            All telemetry that has been processed by this extractor will be tagged by adding the
            string "<c>(Name: {ExtractorName}, Ver:{ExtractorVersion})</c>" to the <c>xxx.ProcessedByExtractors</c> property.
            The respective logic is in the <see cref="T:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor"/>-class.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.ExtractorVersion">
            <summary>
            Gets the version of this extractor.
            All telemetry that has been processed by this extractor will be tagged by adding the
            string "<c>(Name: {ExtractorName}, Ver:{ExtractorVersion})</c>" to the <c>xxx.ProcessedByExtractors</c> property.
            The respective logic is in the <see cref="T:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor"/>-class.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.MaxDependencyTypesToDiscover">
            <summary>
            Gets or sets the maximum number of auto-discovered dependency types.
            See also the remarks about the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor"/> class for additional info about the use the of this property.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.InitializeExtractor(Microsoft.ApplicationInsights.TelemetryClient)">
            <summary>
            Pre-initialize this extractor.
            </summary>
            <param name="metricTelemetryClient">The <c>TelemetryClient</c> to be used for sending extracted metrics.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.ExtractMetrics(Microsoft.ApplicationInsights.Channel.ITelemetry,System.Boolean@)">
            <summary>
            Extracts appropriate data points for auto-collected, pre-aggregated metrics from a single <c>DependencyTelemetry</c> item.
            </summary>
            <param name="fromItem">The telemetry item from which to extract the metric data points.</param>
            <param name="isItemProcessed">Whether of not the specified item was processed (aka not ignored) by this extractor.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.ReinitializeMetrics(System.Int32)">
            <summary>
            Initializes the privates and activates them atomically.
            </summary>
            <param name="maxDependencyTypesToDiscoverCount">Max number of Dependency Types to discover.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.ISpecificAutocollectedMetricsExtractor.ExtractorName">
            <summary>
            Gets the name of this extractor.
            All telemetry that has been processed by this extractor will be tagged by adding the
            string "<c>(Name: {ExtractorName}, Ver:{ExtractorVersion})</c>" to the <c>xxx.ProcessedByExtractors</c> property.
            The respective logic is in the <see cref="T:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor"/>-class.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.ISpecificAutocollectedMetricsExtractor.ExtractorVersion">
            <summary>
            Gets the version of this extractor.
            All telemetry that has been processed by this extractor will be tagged by adding the
            string "<c>(Name: {ExtractorName}, Ver:{ExtractorVersion})</c>" to the <c>xxx.ProcessedByExtractors</c> property.
            The respective logic is in the <see cref="T:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor"/>-class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.ISpecificAutocollectedMetricsExtractor.InitializeExtractor(Microsoft.ApplicationInsights.TelemetryClient)">
            <summary>
            Pre-initialize this extractor.
            </summary>
            <param name="metricTelemetryClient">The <c>TelemetryClient</c> to be used for sending extracted metrics.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.ISpecificAutocollectedMetricsExtractor.ExtractMetrics(Microsoft.ApplicationInsights.Channel.ITelemetry,System.Boolean@)">
            <summary>
            Perform actual metric data point extraction from the specified item.
            </summary>
            <param name="fromItem">The item from which to extract metrics.</param>
            <param name="isItemProcessed">Whether the specified item was processed (or ignored) by this extractor.
            This determines whether the specified item will be tagged accordingly by adding the
            string "<c>(Name: {ExtractorName}, Ver:{ExtractorVersion})</c>" to the <c>xxx.ProcessedByExtractors></c> property.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.RequestMetricsExtractor">
            <summary>
            An instance of this class is contained within the <see cref="T:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor"/> telemetry processor.
            It extracts auto-collected, pre-aggregated (aka. "standard") metrics from RequestTelemetry objects which represent
            invocations of the monitored service.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.IOperationHolder`1">
            <summary>
            Represents the operation item that holds telemetry which is tracked on end request. Operation can be associated with either WEB or SQL dependencies.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.IOperationHolder`1.Telemetry">
            <summary>
            Gets Telemetry item of interest that is created when StartOperation function of ClientExtensions is invoked.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.ISerializableWithWriter">
            <summary>
            Interface for defining objects which can be serialized with a given <see cref="T:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter"/>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializableWithWriter.Serialize(Microsoft.ApplicationInsights.Extensibility.ISerializationWriter)">
            <summary>
            Writes serialization info about the class using the given <see cref="T:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter"/>
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter">
            <summary>
            The interface for defining writers capable of serializing data into various formats.    
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(System.String,System.String)">
            <summary>
            Writes name and value for a string field
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(System.String,System.Nullable{System.Double})">
            <summary>
            Writes name and value for a double field
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(System.String,System.Nullable{System.Int32})">
            <summary>
            Writes name and value for a int field
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(System.String,System.Nullable{System.Boolean})">
            <summary>
            Writes name and value for a boolean field
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Writes name and value for a TimeSpan field
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Writes name and value for a DateTimeOffset field
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(System.String,Microsoft.ApplicationInsights.Extensibility.ISerializableWithWriter)">
            <summary>
            Writes name and value for a ISerializableWithWriter field
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(Microsoft.ApplicationInsights.Extensibility.ISerializableWithWriter)">
            <summary>
            Writes value ISerializableWithWriter field
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Writes name and values for a IList field of strings
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(System.String,System.Collections.Generic.IList{Microsoft.ApplicationInsights.Extensibility.ISerializableWithWriter})">
            <summary>
            Writes name and values for a IList field of objects implementing ISerializableWithWriter
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes name and value for a IDictionary field with string,string as key,value
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteProperty(System.String,System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Writes name and value for a IDictionary field with string,string as key,value
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteStartObject(System.String)">
            <summary>
            Marks beginning of a complex object.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteStartObject">
            <summary>
            Marks beginning of a complex object.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ISerializationWriter.WriteEndObject">
            <summary>
            Marks ending of a complex object.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer">
            <summary>
            Represents an object that initializes <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/> objects.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/> instances use <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer"/> objects to 
            automatically initialize properties of the <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/> objects.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Initializes properties of the specified <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/> object.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryModule">
            <summary>
            Represents an object that supports initialization from <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ITelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initialize method is called after all configuration properties have been loaded from the configuration.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor">
            <summary>
            Represents an object used to process telemetry as part of sending it to Application Insights.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor.Process(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Process a collected telemetry item.
            </summary>
            <param name="item">A collected Telemetry item.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.OperationCorrelationTelemetryInitializer">
            <summary>
            Telemetry initializer that populates OperationContext for the telemetry item based on context stored in an AsyncLocal variable.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.OperationCorrelationTelemetryInitializer.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Initializes/Adds operation id to the existing telemetry item.
            </summary>
            <param name="telemetryItem">Target telemetry item to add operation id.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.SdkInternalOperationsMonitor">
            <summary>
            Helps to define whether thread is performing SDK internal operation at the moment.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.SdkInternalOperationsMonitor.IsEntered">
            <summary>
            Determines whether the current thread executing the internal operation.
            </summary>
            <returns>true if the current thread executing the internal operation; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.SdkInternalOperationsMonitor.Enter">
            <summary>
            Marks the thread as executing the internal operation.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.SdkInternalOperationsMonitor.Exit">
            <summary>
            Unmarks the thread as executing the internal operation.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.SequencePropertyInitializer">
            <summary>
            An <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer"/> that populates <see cref="P:Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence"/> property for 
            the Microsoft internal telemetry sent to the Vortex endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.SequencePropertyInitializer.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Populates <see cref="P:Microsoft.ApplicationInsights.Channel.ITelemetry.Sequence"/> with unique ID and sequential number.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration">
            <summary>
            Encapsulates the global telemetry configuration typically loaded from the ApplicationInsights.config file.
            </summary>
            <remarks>
            All <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/> objects are initialized using the <see cref="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active"/> 
            telemetry configuration provided by this class.
            </remarks>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.isDisposed">
            <summary>
            Indicates if this instance has been disposed of.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.#ctor">
            <summary>
            Initializes a new instance of the TelemetryConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TelemetryConfiguration class.
            </summary>
            <param name="instrumentationKey">The instrumentation key this configuration instance will provide.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.#ctor(System.String,Microsoft.ApplicationInsights.Channel.ITelemetryChannel)">
            <summary>
            Initializes a new instance of the TelemetryConfiguration class.
            </summary>
            <param name="instrumentationKey">The instrumentation key this configuration instance will provide.</param>
            <param name="channel">The telemetry channel to provide with this configuration instance.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active">
            <summary>
            Gets the active <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration"/> instance loaded from the ApplicationInsights.config file. 
            If the configuration file does not exist, the active configuration instance is initialized with minimum defaults 
            needed to send telemetry to Application Insights.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.InstrumentationKey">
            <summary>
            Gets or sets the default instrumentation key for the application.
            </summary>
            <exception cref="T:System.ArgumentNullException">The new value is null.</exception>
            <remarks>
            This instrumentation key value is used by default by all <see cref="T:Microsoft.ApplicationInsights.TelemetryClient"/> instances
            created in the application. This value can be overwritten by setting the <see cref="P:Microsoft.ApplicationInsights.DataContracts.TelemetryContext.InstrumentationKey"/>
            property of the <see cref="P:Microsoft.ApplicationInsights.TelemetryClient.Context"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.DisableTelemetry">
            <summary>
            Gets or sets a value indicating whether sending of telemetry to Application Insights is disabled.
            </summary>
            <remarks>
            This disable tracking setting value is used by default by all <see cref="T:Microsoft.ApplicationInsights.TelemetryClient"/> instances
            created in the application. 
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryInitializers">
            <summary>
            Gets the list of <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryInitializer"/> objects that supply additional information about telemetry.
            </summary>
            <remarks>
            Telemetry initializers extend Application Insights telemetry collection by supplying additional information 
            about individual <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/> items, such as <see cref="P:Microsoft.ApplicationInsights.Channel.ITelemetry.Timestamp"/>. A <see cref="T:Microsoft.ApplicationInsights.TelemetryClient"/>
            invokes telemetry initializers each time <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.Track(Microsoft.ApplicationInsights.Channel.ITelemetry)"/> method is called.
            The default list of telemetry initializers is provided by the Application Insights NuGet packages and loaded from 
            the ApplicationInsights.config file located in the application directory. 
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessors">
            <summary>
            Gets a readonly collection of TelemetryProcessors.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessorChainBuilder">
            <summary>
            Gets the TelemetryProcessorChainBuilder which can build and populate TelemetryProcessors in the TelemetryConfiguration.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryChannel">
            <summary>
            Gets or sets the telemetry channel for the default sink.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.ApplicationIdProvider">
            <summary>
            Gets or sets the Application Id Provider.
            </summary>
            <remarks>
            This feature is opt-in and must be configured to be enabled.
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetrySinks">
            <summary>
            Gets a list of telemetry sinks associated with the configuration.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.DefaultTelemetrySink">
            <summary>
            Gets the default telemetry sink.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.TelemetryProcessorChain">
            <summary>
            Gets or sets the chain of processors.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateDefault">
            <summary>
            Creates a new <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration"/> instance loaded from the ApplicationInsights.config file.
            If the configuration file does not exist, the new configuration instance is initialized with minimum defaults 
            needed to send telemetry to Application Insights.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.CreateFromConfiguration(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration"/> instance loaded from the specified configuration.
            </summary>
            <param name="config">An xml serialized configuration.</param>
            <exception cref="T:System.ArgumentNullException">Throws if the config value is null or empty.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Dispose">
            <summary>
            Releases resources used by the current instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Dispose(System.Boolean)">
            <summary>
            Disposes of resources.
            </summary>
            <param name="disposing">Indicates if managed code is being disposed.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.TelemetrySink">
            <summary>
            Represents a destination for telemetry, consisting of a set of telemetry processors and a channel.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.TelemetrySink.DefaultSinkName">
            <summary>
            The name to use for the default telemetry sink when specifying its properties through configuration.
            </summary>
            <remarks>The name is not case-sensitive.</remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetrySink.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration,Microsoft.ApplicationInsights.Channel.ITelemetryChannel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetrySink"/> class.
            </summary>
            <param name="telemetryConfiguration">Telemetry configuration to use for the new <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetrySink"/> instance.</param>
            <param name="telemetryChannel">Telemetry channel to use for the new <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetrySink"/> instance.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetrySink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetrySink"/> class. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetrySink.TelemetryProcessorChainBuilder">
            <summary>
            Gets or sets an instance of the <see cref="P:Microsoft.ApplicationInsights.Extensibility.TelemetrySink.TelemetryProcessorChainBuilder"/> that this sink is using.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetrySink.TelemetryChannel">
            <summary>
            Gets or sets the telemetry channel.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetrySink.Name">
            <summary>
            Gets or sets the name of the sink.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.TelemetrySink.TelemetryProcessors">
            <summary>
            Gets a readonly collection of TelemetryProcessors.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetrySink.Dispose">
            <summary>
            Releases resources used by the instance of <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetrySink"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetrySink.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initializes the sink.
            </summary>
            <param name="configuration">Telemetry configuration to be used during sink operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.TelemetrySink.Process(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Processes a collected telemetry item.
            </summary>
            <param name="item">Item to process.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions">
            <summary>
            Extends Activity to support W3C distributed tracing standard.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions.GenerateW3CContext(System.Diagnostics.Activity)">
            <summary>
            Generate new W3C context.
            </summary>
            <param name="activity">Activity to generate W3C context on.</param>
            <returns>The same Activity for chaining.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions.IsW3CActivity(System.Diagnostics.Activity)">
            <summary>
            Checks if current Activity has W3C properties on it.
            </summary>
            <param name="activity">Activity to check.</param>
            <returns>True if Activity has W3C properties, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions.UpdateContextOnActivity(System.Diagnostics.Activity)">
            <summary>
            Updates context on the Activity based on the W3C Context in the parent Activity tree.
            </summary>
            <param name="activity">Activity to update W3C context on.</param>
            <returns>The same Activity for chaining.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions.GetTraceparent(System.Diagnostics.Activity)">
            <summary>
            Gets traceparent header value for the Activity or null if there is no W3C context on it.
            </summary>
            <param name="activity">Activity to read W3C context from.</param>
            <returns>traceparent header value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions.SetTraceparent(System.Diagnostics.Activity,System.String)">
            <summary>
            Initializes W3C context on the Activity from traceparent header value.
            </summary>
            <param name="activity">Activity to set W3C context on.</param>
            <param name="value">Valid traceparent header like 00-0af7651916cd43dd8448eb211c80319c-b9c7c989f97918e1-01.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions.GetTracestate(System.Diagnostics.Activity)">
            <summary>
            Gets tracestate header value from the Activity.
            </summary>
            <param name="activity">Activity to get tracestate from.</param>
            <returns>tracestate header value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions.SetTracestate(System.Diagnostics.Activity,System.String)">
            <summary>
            Sets tracestate header value on the Activity.
            </summary>
            <param name="activity">Activity to set tracestate on.</param>
            <param name="value">tracestate header value.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions.GetTraceId(System.Diagnostics.Activity)">
            <summary>
            Gets TraceId from the Activity.
            Use carefully: if may cause iteration over all tags!
            </summary>
            <param name="activity">Activity to get traceId from.</param>
            <returns>TraceId value or null if it does not exist.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions.GetSpanId(System.Diagnostics.Activity)">
            <summary>
            Gets SpanId from the Activity.
            Use carefully: if may cause iteration over all tags!
            </summary>
            <param name="activity">Activity to get spanId from.</param>
            <returns>SpanId value or null if it does not exist.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions.GetParentSpanId(System.Diagnostics.Activity)">
            <summary>
            Gets ParentSpanId from the Activity.
            Use carefully: if may cause iteration over all tags!
            </summary>
            <param name="activity">Activity to get ParentSpanId from.</param>
            <returns>ParentSpanId value or null if it does not exist.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CActivityExtensions.UpdateTelemetry(System.Diagnostics.Activity,Microsoft.ApplicationInsights.Channel.ITelemetry,System.Boolean)">
            <summary>
            Sets Activity W3C context on the telemetry.
            </summary>
            <param name="activity">Activity to update telemetry from.</param>
            <param name="telemetry">Telemetry item.</param>
            <param name="forceUpdate">Force update if properties are already set.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants">
            <summary>
            W3C constants.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.TraceIdTag">
            <summary>
            Trace-Id tag name.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.SpanIdTag">
            <summary>
            Span-Id tag name.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.ParentSpanIdTag">
            <summary>
            Parent span-Id tag name.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.VersionTag">
            <summary>
            Version tag name.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.SampledTag">
            <summary>
            Sampled tag name.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.TracestateTag">
            <summary>
            Tracestate tag name.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.DefaultVersion">
            <summary>
            Default version value.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.TraceFlagRecordedAndNotRequested">
            <summary>
            Default sampled flag value: may be recorded, not requested
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.TraceFlagRecordedAndRequested">
            <summary>
            Recorded and requested sampled flag value
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.RequestedTraceFlag">
            <summary>
            Requested trace flag
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.LegacyRootIdProperty">
            <summary>
            Legacy root Id tag name.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.W3C.W3CConstants.LegacyRequestIdProperty">
            <summary>
            Legacy root Id tag name.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.W3C.W3COperationCorrelationTelemetryInitializer">
            <summary>
            Telemetry Initializer that sets correlation ids for W3C.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3COperationCorrelationTelemetryInitializer.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Initializes telemetry item.
            </summary>
            <param name="telemetry">Telemetry item.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.W3C.W3CUtilities">
            <summary>
            W3C distributed tracing utilities.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CUtilities.GenerateTraceId">
            <summary>
            Generates random trace Id as per W3C Distributed tracing specification.
            https://github.com/w3c/distributed-tracing/blob/master/trace_context/HTTP_HEADER_FORMAT.md#trace-id
            </summary>
            <returns>Random 16 bytes array encoded as hex string</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CUtilities.GenerateSpanId">
            <summary>
            Generates random span Id as per W3C Distributed tracing specification.
            https://github.com/w3c/distributed-tracing/blob/master/trace_context/HTTP_HEADER_FORMAT.md#span-id
            </summary>
            <returns>Random 8 bytes array encoded as hex string</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.W3C.W3CUtilities.GenerateId(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts byte array to hex lower case string.
            </summary>
            <returns>Array encoded as hex string</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor">
            <summary>
            Extracts auto-collected, pre-aggregated (aka. "standard") metrics from telemetry.
            Metric Extractors participate in the telemetry pipeline as telemetry processors. They examine telemetry items going through
            the pipeline and create pre-aggregated metrics based on the encountered items. The metrics can be anything. For example, one may
            choose to extract a metric for "Request Duration" from RequestTelemetry items. Or one may choose to create a metric "Cows Sold"
            from specific user-tracked EventTelemetry items that contain respective information. 
            <br />
            Metric Extractors should be placed into the pipeline after telemetry initializers and before any telemetry processors that may
            perform any kind of filtering, e.g. before any sampling processors. Placing metric extractors after any filters will prevent them
            from seeing all potentially relevant telemetry which will skew the extracted metrics.
            <br />
            This extractor is responsible for aggregating auto-collected, pre-aggregated (aka. "standard") metrics, such as failed request
            count, dependency call durations and similar. Users may use the same pattern to create their own extractors for any metrics
            they want from any kind of telemetry. 
            This extractor contains several implementations of the (internal) <c>ISpecificAutocollectedMetricsExtractor</c>-interface to which
            it delegates the aggregation of particular metrics. All those implementations share the
            same (dedicated) <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricManager"/>-instance for metric aggregation.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.extractors">
            <summary>
            We have dedicated instance variables to refer to each individual extractors because we are exposing some of their properties to the config subsystem here.
            However, for calling common methods for all of them, we also group them together.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.metricTelemetryClient">
            <summary>
            The <see cref="T:Microsoft.ApplicationInsights.TelemetryClient"/> that will be used to send all extracted metrics.
            !!! All participating implementations of <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.ISpecificAutocollectedMetricsExtractor" /> must             !!! 
            !!! use <see cref="F:Microsoft.ApplicationInsights.MetricAggregationScope.TelemetryClient" /> when accessing <see cref="T:Microsoft.ApplicationInsights.Metric" /> for          !!! 
            !!! extracted metrics, and NOT the default (which is <c>MetricAggregationScope.TelemetryConfiguration</c>).         !!! 
            !!! This will make sure that this specific instance of <c>TelemetryClient</c> is used and its Context is respected. !!! 
            The above is required to ensure that all metric documents are tagged correctly and are processed using the particular 
            <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration"/> instance used to initialize this extractor.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.nextProcessorInPipeline">
            <summary>
            The telemetry processor that will be called after this processor.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.isMetricExtractorAfterSamplingLogged">
            <summary>
            Marks if we ever log MetricExtractorAfterSamplingError so that if we do we use Verbosity level subsequently.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.#ctor(Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor" /> class.
            </summary>
            <param name="nextProcessorInPipeline">Subsequent telemetry processor.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.MaxDependencyTypesToDiscover">
            <summary>
            Gets or sets the <see cref="P:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor.MaxDependencyTypesToDiscover"/>-property.
            See the remarks for the <see cref="T:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.DependencyMetricsExtractor"/>-class for more info.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            This class implements the <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryModule"/> interface by defining this method.
            It will be called by the infrastructure when the telemetry pipeline is being built.
            This will ensure that the extractor is initialized using the same <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration" /> as the rest of the pipeline.
            Specifically, this will also ensure that the <see cref="T:Microsoft.ApplicationInsights.TelemetryClient" /> used internally for sending extracted metrics uses
            the same configuration.
            </summary>
            <param name="configuration">The telemetric configuration to be used by this extractor.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.Process(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            This class implements the <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor"/> interface by defining this method.
            This method will be called by the pipeline for each telemetry item that goes through it.
            It invokes <see cref="M:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.ExtractMetrics(Microsoft.ApplicationInsights.Channel.ITelemetry)"/> to actually do the extraction.
            </summary>
            <param name="item">The telemetry item from which the metrics will be extracted.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.Dispose">
            <summary>
            Disposes this telemetry extractor.
            </summary>
            <remarks>This class is sealed. The pattern "private void Dispose(bool disposing)" is not applicable.</remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.GetExtractorInfo(Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.ISpecificAutocollectedMetricsExtractor)">
            <summary>
            Constructs the extractor info string for caching.
            </summary>
            <param name="extractor">The extractor to describe.</param>
            <returns>Extractor info string for caching.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.AddExtractorInfo(Microsoft.ApplicationInsights.Channel.ITelemetry,System.String)">
            <summary>
            All telemetry that has been processed by this extractor will be tagged by adding the
            string "<c>(Name: {ExtractorName}, Ver:{ExtractorVersion})</c>" to the <c>xxx.ProcessedByExtractors</c> property.
            This method adds that string to the specified telemetry item's properties.
            </summary>
            <param name="item">The telemetry item to be tagged.</param>
            <param name="extractorInfo">The string to be added to the item's properties.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.InitializeExtractors(Microsoft.ApplicationInsights.TelemetryClient)">
            <summary>
            Calls all participating extractors to initialize themselves.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.ExtractMetrics(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Calls the <see cref="M:Microsoft.ApplicationInsights.Extensibility.Implementation.Metrics.ISpecificAutocollectedMetricsExtractor.ExtractMetrics(Microsoft.ApplicationInsights.Channel.ITelemetry,System.Boolean@)"/> of each participating extractor for the specified item.
            Catches and logs all errors.
            If <c>isItemProcessed</c> is True, adds a corresponding marker to the item's properties.
            </summary>
            <param name="fromItem">The item from which to extract metrics.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.InvokeNextProcessor(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Invokes the subsequent telemetry processor if it has been initialized.
            </summary>
            <param name="item">Item to pass.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.AutocollectedMetricsExtractor.ExtractorWithInfo">
            <summary>
            Groups an instance of <c>ISpecificAutocollectedMetricsExtractor</c> with a cached version of it's pipeline processing info.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Shared.Extensibility.Implementation.BroadcastProcessor">
            <summary>
            An <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor"/> that asynchronously sends the data to multiple child telemetry sinks.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Shared.Extensibility.Implementation.BroadcastProcessor.TelemetryDispatcher">
            <summary>
            Utility class that clones incoming telemetry as necessary and sends it to one of the telemetry sinks 
            handled by the parent BroadcastProcessor.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Shared.Extensibility.Implementation.BroadcastProcessor.TelemetryDispatcher.SendItemToSink(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Sends the item to sink. If cloning of item is required, clones the item before sending it to <see cref="T:Microsoft.ApplicationInsights.Extensibility.TelemetrySink"/>
            </summary>
            <param name="telemetry">The telemetry item to send to sink.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Shared.Extensibility.Implementation.PassThroughProcessor">
            <summary>
            An <see cref="T:Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor"/> that just passes data to its downstream telemetry sink.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metric">
            <summary>
            Represents a zero- or multi-dimensional metric.<br />
            Contains convenience methods to track, aggregate and send values.<br />
            A <c>Metric</c> instance groups one or more <c>MetricSeries</c> that actually track and aggregate values along with
            naming and configuration attributes that identify the metric and define how it will be aggregated. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metric.Identifier">
            <summary>
            Gets the identifier of a metric groups together the MetricNamespace, the MetricId, and the dimensions of the metric, if any.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metric.SeriesCount">
            <summary>
            Gets the current number of metric series contained in this metric. 
            Each metric contains a special zero-dimension series, plus one series per unique dimension-values combination.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.GetDimensionValues(System.Int32)">
            <summary>
            Gets the values known for dimension identified by the specified 1-based dimension index.
            </summary>
            <param name="dimensionNumber">1-based dimension number. Currently it can be <c>1</c> ... <c>10</c>.</param>
            <returns>The values known for the specified dimension.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.GetAllSeries">
            <summary>
            Gets all metric series contained in this metric.
            Each metric contains a special zero-dimension series, plus one series per unique dimension-values combination.
            </summary>
            <returns>All metric series contained in this metric.
            Each metric contains a special zero-dimension series, plus one series per unique dimension-values combination.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@)">
            <summary>
            Gets a <c>MetricSeries</c> associated with this metric.<br />
            This overload gets the zero-dimensional <c>MetricSeries</c> associated with this metric.
            Every metric, regardless of its dimensionality, has such a zero-dimensional <c>MetricSeries</c>.
            </summary>
            <param name="series">Will be set to the zero-dimensional <c>MetricSeries</c> associated with this metric</param>
            <returns><c>True</c>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@,System.String)">
            <summary>
            Gets or creates the <c>MetricSeries</c> associated with the specified dimension value.<br />
            This overload may only be used with 1-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="series">If this method returns <c>True</c>: Will be set to the <c>MetricSeries</c> associated with the specified dimension value.<br />
            Otherwise: Will be set to <c>null</c>.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <returns><c>True</c> if the <c>MetricSeries</c> indicated by the specified dimension name could be retrieved (or created);
            <c>False</c> if the indicated series could not be retrieved or created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@,System.String,System.String)">
            <summary>
            Gets or creates the <c>MetricSeries</c> associated with the specified dimension values.<br />
            This overload may only be used with 2-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="series">If this method returns <c>True</c>: Will be set to the <c>MetricSeries</c> associated with the specified dimension value.<br />
            Otherwise: Will be set to <c>null</c>.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <returns><c>True</c> if the <c>MetricSeries</c> indicated by the specified dimension name could be retrieved (or created);
            <c>False</c> if the indicated series could not be retrieved or created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@,System.String,System.String,System.String)">
            <summary>
            Gets or creates the <c>MetricSeries</c> associated with the specified dimension values.<br />
            This overload may only be used with 3-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="series">If this method returns <c>True</c>: Will be set to the <c>MetricSeries</c> associated with the specified dimension value.<br />
            Otherwise: Will be set to <c>null</c>.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <returns><c>True</c> if the <c>MetricSeries</c> indicated by the specified dimension name could be retrieved (or created);
            <c>False</c> if the indicated series could not be retrieved or created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@,System.String,System.String,System.String,System.String)">
            <summary>
            Gets or creates the <c>MetricSeries</c> associated with the specified dimension values.<br />
            This overload may only be used with 4-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="series">If this method returns <c>True</c>: Will be set to the <c>MetricSeries</c> associated with the specified dimension value.<br />
            Otherwise: Will be set to <c>null</c>.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <returns><c>True</c> if the <c>MetricSeries</c> indicated by the specified dimension name could be retrieved (or created);
            <c>False</c> if the indicated series could not be retrieved or created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets or creates the <c>MetricSeries</c> associated with the specified dimension values.<br />
            This overload may only be used with 5-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="series">If this method returns <c>True</c>: Will be set to the <c>MetricSeries</c> associated with the specified dimension value.<br />
            Otherwise: Will be set to <c>null</c>.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <returns><c>True</c> if the <c>MetricSeries</c> indicated by the specified dimension name could be retrieved (or created);
            <c>False</c> if the indicated series could not be retrieved or created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets or creates the <c>MetricSeries</c> associated with the specified dimension values.<br />
            This overload may only be used with 6-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="series">If this method returns <c>True</c>: Will be set to the <c>MetricSeries</c> associated with the specified dimension value.<br />
            Otherwise: Will be set to <c>null</c>.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <returns><c>True</c> if the <c>MetricSeries</c> indicated by the specified dimension name could be retrieved (or created);
            <c>False</c> if the indicated series could not be retrieved or created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets or creates the <c>MetricSeries</c> associated with the specified dimension values.<br />
            This overload may only be used with 7-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="series">If this method returns <c>True</c>: Will be set to the <c>MetricSeries</c> associated with the specified dimension value.<br />
            Otherwise: Will be set to <c>null</c>.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <returns><c>True</c> if the <c>MetricSeries</c> indicated by the specified dimension name could be retrieved (or created);
            <c>False</c> if the indicated series could not be retrieved or created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets or creates the <c>MetricSeries</c> associated with the specified dimension values.<br />
            This overload may only be used with 8-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="series">If this method returns <c>True</c>: Will be set to the <c>MetricSeries</c> associated with the specified dimension value.<br />
            Otherwise: Will be set to <c>null</c>.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <param name="dimension8Value">The value of the 8th dimension.</param>
            <returns><c>True</c> if the <c>MetricSeries</c> indicated by the specified dimension name could be retrieved (or created);
            <c>False</c> if the indicated series could not be retrieved or created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets or creates the <c>MetricSeries</c> associated with the specified dimension values.<br />
            This overload may only be used with 9-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="series">If this method returns <c>True</c>: Will be set to the <c>MetricSeries</c> associated with the specified dimension value.<br />
            Otherwise: Will be set to <c>null</c>.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <param name="dimension8Value">The value of the 8th dimension.</param>
            <param name="dimension9Value">The value of the 9th dimension.</param>
            <returns><c>True</c> if the <c>MetricSeries</c> indicated by the specified dimension name could be retrieved (or created);
            <c>False</c> if the indicated series could not be retrieved or created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets or creates the <c>MetricSeries</c> associated with the specified dimension values.<br />
            This overload may only be used with 10-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="series">If this method returns <c>True</c>: Will be set to the <c>MetricSeries</c> associated with the specified dimension value.<br />
            Otherwise: Will be set to <c>null</c>.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <param name="dimension8Value">The value of the 8th dimension.</param>
            <param name="dimension9Value">The value of the 9th dimension.</param>
            <param name="dimension10Value">The value of the 10th dimension.</param>
            <returns><c>True</c> if the <c>MetricSeries</c> indicated by the specified dimension name could be retrieved (or created);
            <c>False</c> if the indicated series could not be retrieved or created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TryGetDataSeries(Microsoft.ApplicationInsights.Metrics.MetricSeries@,System.Boolean,System.String[])">
            <summary>
            Gets or creates the <c>MetricSeries</c> associated with the specified dimension values.<br />
            This overload used metrics of any valid dimensionality:
            The number of elements in the specified <c>dimensionValues</c> array must exactly match the dimensionality of this metric,
            and that array may not contain nulls. Specify a null-array for zero-dimensional metrics.
            </summary>
            <param name="series">If this method returns <c>True</c>: Will be set to the <c>MetricSeries</c> associated with the specified dimension values.<br />
            Otherwise: Will be set to <c>null</c>.</param>
            <param name="createIfNotExists">Whether to attempt creating a metric series for the specified dimension values if it does not exist.</param>
            <param name="dimensionValues">The values of the dimensions for the required metric series.</param>
            <returns><c>True</c> if the <c>MetricSeries</c> indicated by the specified dimension names could be retrieved or created;
            <c>False</c> if the indicated series could not be retrieved or created because <c>createIfNotExists</c> is <c>false</c>
            or because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Double)">
            <summary>
            Tracks the specified value.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.<br />
            This method uses the zero-dimensional <c>MetricSeries</c> associated with this metric.
            Use <c>TrackValue(..)</c> to track values into <c>MetricSeries</c> associated with specific dimension-values in multi-dimensional metrics.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Object)">
            <summary>
            Tracks the specified value.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.<br />
            This method uses the zero-dimensional <c>MetricSeries</c> associated with this metric.
            Use <c>TrackValue(..)</c> to track values into <c>MetricSeries</c> associated with specific dimension-values in multi-dimensional metrics.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Double,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension value.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 1-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Object,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension value.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 1-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Double,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 2-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Object,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 2-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Double,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 3-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Object,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 3-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Double,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 4-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Object,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 4-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Double,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 5-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Object,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 5-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Double,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 6-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Object,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 6-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Double,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 7-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Object,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 7-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Double,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 8-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <param name="dimension8Value">The value of the 8th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Object,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 8-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <param name="dimension8Value">The value of the 8th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Double,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 9-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <param name="dimension8Value">The value of the 8th dimension.</param>
            <param name="dimension9Value">The value of the 9th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Object,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 9-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <param name="dimension8Value">The value of the 8th dimension.</param>
            <param name="dimension9Value">The value of the 9th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Double,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 10-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <param name="dimension8Value">The value of the 8th dimension.</param>
            <param name="dimension9Value">The value of the 9th dimension.</param>
            <param name="dimension10Value">The value of the 10th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metric.TrackValue(System.Object,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tracks the specified value using the <c>MetricSeries</c> associated with the specified dimension values.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.
            This overload may only be used with 10-dimensional metrics. Use other overloads to specify a matching number of dimension values for this metric.
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
            <param name="dimension1Value">The value of the 1st dimension.</param>
            <param name="dimension2Value">The value of the 2nd dimension.</param>
            <param name="dimension3Value">The value of the 3rd dimension.</param>
            <param name="dimension4Value">The value of the 4th dimension.</param>
            <param name="dimension5Value">The value of the 5th dimension.</param>
            <param name="dimension6Value">The value of the 6th dimension.</param>
            <param name="dimension7Value">The value of the 7th dimension.</param>
            <param name="dimension8Value">The value of the 8th dimension.</param>
            <param name="dimension9Value">The value of the 9th dimension.</param>
            <param name="dimension10Value">The value of the 10th dimension.</param>
            <returns><c>True</c> if the specified value was added to the <c>MetricSeries</c> indicated by the specified dimension name;
            <c>False</c> if the indicated series could not be created because a dimension cap or a metric series cap was reached.</returns>
            <exception cref="T:System.ArgumentException">If the number of specified dimension names does not match the dimensionality of this <c>Metric</c>.</exception>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricAggregationScope">
            <summary>
            Used when getting or creating a <see cref="T:Microsoft.ApplicationInsights.Metric" /> to optionally specify the scope across which the values for the metric are to be aggregated in memory.<br />
            Intended for advanced scenarios.
            The default "<see cref="F:Microsoft.ApplicationInsights.MetricAggregationScope.TelemetryConfiguration" />" is used whenever <c>MetricAggregationScope</c> is not specified explicitly.
            </summary>
            <seealso cref="F:Microsoft.ApplicationInsights.MetricAggregationScope.TelemetryConfiguration" />
            <seealso cref="F:Microsoft.ApplicationInsights.MetricAggregationScope.TelemetryClient" />
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricAggregationScope.TelemetryConfiguration">
            <summary>
            <para>Metric values will be aggregated ACROSS all telemetry clients that belong to the same <c>TelemetryConfiguration</c>.<br />
            This is the default. It fits most use cases and is more conservative towards resources.</para>
            <para>Background-Info: When you use this option with the <c>.GetMetric(..)</c> extension method of a <c>TelemetryClient</c>,
            the <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricManager" /> instance that owns the retrieved <c>Metric</c> will
            be attached to a <c>TelemetryConfiguration</c> instance associated with that <c>TelemetryClient</c>. Thus, the <c>MetricManager</c>
            will be shared across all clients of this telemetry config. As a result, the <c>Context</c>, the <c>InstrumentationKey</c>
            and other properties of the respective <c>TelemetryClient</c> will be ignored in favor of the <c>TelemetryConfiguration</c>-wide
            settings.</para>
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricAggregationScope.TelemetryClient">
            <summary>
            <para>Metric values will be aggregated only across a specific <c>TelemetryClient</c> instance and then sent using that
            particular instance.<br />
            Such aggregation across many smaller scopes can be resource intensive. This option is only recommended when a particular instance
            of <c>TelementryClient</c> needs to be used for sending telemetry. Typically, <c>MetricAggregationScope.TelemetryConfiguration</c>
            is the preferred option.</para>
            <para>Background-Info: This option causes the <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricManager" /> instance that
            owns the retrieved <c>Metric</c> to be attached to a specified <c>TelemetryClient</c> instance.
            As a result, the <c>Context</c> and the <c>InstrumentationKey</c> of the specified <c>TelemetryClient</c> will be respected.
            However, each <c>MetricManager</c> instance encapsulates a managed thread and each aggregator uses additional memory.</para>
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricConfigurations">
            <summary>
            Static container for the most commonly used metric configurations.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricConfigurations.Common">
            <summary>
            Groups extension methods that return pre-defined metric configurations and related constants.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricConfigurationsExtensions">
            <summary>
            Provides the default Metric Configuration for Measurements.
            Do not use directly. Instead, use: <c>MetricConfigurations.Common.Xxxx()</c>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.MetricConfigurationsExtensions.Measurement(Microsoft.ApplicationInsights.MetricConfigurations)">
            <summary>
            <para>Use to measure properties and/or counts of items. Also, use to measure attributes and/or rates of events.<br />
            Produces aggregates that contain simple statistics about tracked values per time period: Count, Sum, Min, Max.<br />
            (This is the most commonly used metric configuration and is the default unless otherwise specified.)</para>
            
            <para>For example, use this metric configuration to measure:<br />
            Size and number of server requests per time period; Duration and rate of database calls per time period;
            Number of sale events and number of items sold per sale event over a time period, etc.</para>
            </summary>
            <param name="metricConfigPresets">A static attachment point for this extension method.</param>
            <returns>The default <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricConfiguration"/> for measurement metrics.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.MetricConfigurationsExtensions.SetDefaultForMeasurement(Microsoft.ApplicationInsights.MetricConfigurations,Microsoft.ApplicationInsights.Metrics.MetricConfigurationForMeasurement)">
            <summary>
            Set the configuration returned from <c>MetricConfigurations.Common.Measurement()</c>.
            </summary>
            <param name="metricConfigPresets">Will be ignored.</param>
            <param name="defaultConfigurationForMeasurement">Future default config.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricDimensionNames">
            <summary>
            Contains constants used to refer to metric dimensions with special significance.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext">
            <summary>
            <p>Contains constants used to refer to metric dimensions that will be mapped to fields
            within the <see cref="T:Microsoft.ApplicationInsights.DataContracts.TelemetryContext"/> attached to Application
            Insights metric telemetry item that represents <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate" /> objects sent to the Application Insights
            cloud ingestion endpoint.</p>
            <p>When a metric has a dimension with this a name that equals to one of the constants defined here, the value of that
            dimension will not be sent as a regular dimension-value, but as the value of the corresponding field within the telemetry
            item's <c>TelemetryContext</c>. Note that this applies only to metrics that belong to Application Insights components and
            that are sent via the Application Insights ingestion endpoint.
            Metrics sent via other channels are not subject to this transformation.</p>
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.InstrumentationKey">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Property(System.String)">
            <summary>If you name a metric dimension named <c>propertyName</c> you can apply this method to it
            to generate a name that will be moved to TelemetryContext just like its standard fields.</summary>
            <param name="propertyName">A metric dimension.</param>
            <returns>A dimension name based on the specified <c>propertyName</c> that will be moved to TelemetryContext
            just like its standard fields.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.IsProperty(System.String,System.String@)">
            <summary>Checks whether this is a custom dimension name that has been marked to be moved to
            the TelemetryContext using <see cref="M:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Property(System.String)"/>.</summary>
            <param name="dimensionName">A dimension name.</param>
            <param name="propertyName">The underlying property name (or <c>null</c>).</param>
            <returns>Whether this is a custom dimension name that has been marked to be moved to
            the TelemetryContext using <see cref="M:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Property(System.String)"/>-method.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Cloud">
            <summary>Provides structure for constants defined in <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/>. See there for more info.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Cloud.RoleInstance">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Cloud.RoleName">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Component">
            <summary>Provides structure for constants defined in <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/>. See there for more info.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Component.Version">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device">
            <summary>Provides structure for constants defined in <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/>. See there for more info.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.Id">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.Language">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.Model">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.NetworkType">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.OemName">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.OperatingSystem">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.ScreenResolution">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Device.Type">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Location">
            <summary>Provides structure for constants defined in <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/>. See there for more info.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Location.Ip">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation">
            <summary>Provides structure for constants defined in <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/>. See there for more info.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation.CorrelationVector">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation.Id">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation.Name">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation.ParentId">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Operation.SyntheticSource">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Session">
            <summary>Provides structure for constants defined in <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/>. See there for more info.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Session.Id">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.Session.IsFirst">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.User">
            <summary>Provides structure for constants defined in <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/>. See there for more info.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.User.AccountId">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.User.AuthenticatedUserId">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.User.Id">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext.User.UserAgent">
            <summary>See details about the static class <see cref="T:Microsoft.ApplicationInsights.MetricDimensionNames.TelemetryContext"/> for information about this constant.</summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.AggregationPeriodSummary">
            <summary>@ToDo: Complete documentation before stable release. {390}</summary>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.AggregationPeriodSummary.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.ApplicationInsights.Metrics.MetricAggregate},System.Collections.Generic.IReadOnlyList{Microsoft.ApplicationInsights.Metrics.MetricAggregate})">
            <summary>@ToDo: Complete documentation before stable release. {487}</summary>
            <param name="persistentAggregates">@ToDo: Complete documentation before stable release. {672}</param>
            <param name="nonpersistentAggregates">@ToDo: Complete documentation before stable release. {290}</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.Extensibility.AggregationPeriodSummary.PersistentAggregates">
            <summary>Gets @ToDo: Complete documentation before stable release. {315}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.Extensibility.AggregationPeriodSummary.NonpersistentAggregates">
            <summary>Gets @ToDo: Complete documentation before stable release. {776}</summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.ApplicationInsightsTelemetryPipeline">
            <summary>@ToDo: Complete documentation before stable release. {628}</summary>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.ApplicationInsightsTelemetryPipeline.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>@ToDo: Complete documentation before stable release. {763}</summary>
            <param name="telemetryPipeline">@ToDo: Complete documentation before stable release. {887}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.ApplicationInsightsTelemetryPipeline.#ctor(Microsoft.ApplicationInsights.TelemetryClient)">
            <summary>@ToDo: Complete documentation before stable release. {253}</summary>
            <param name="telemetryClient">@ToDo: Complete documentation before stable release. {017}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.ApplicationInsightsTelemetryPipeline.TrackAsync(Microsoft.ApplicationInsights.Metrics.MetricAggregate,System.Threading.CancellationToken)">
            <summary>@ToDo: Complete documentation before stable release. {017}</summary>
            <param name="metricAggregate">@ToDo: Complete documentation before stable release. {043}</param>
            <param name="cancelToken">@ToDo: Complete documentation before stable release. {921}</param>
            <returns>@ToDo: Complete documentation before stable release. {373}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.ApplicationInsightsTelemetryPipeline.FlushAsync(System.Threading.CancellationToken)">
            <summary>@ToDo: Complete documentation before stable release. {935}</summary>
            <param name="cancelToken">@ToDo: Complete documentation before stable release. {490}</param>
            <returns>@ToDo: Complete documentation before stable release. {817}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricAggregateToTelemetryPipelineConverter">
            <summary>@ToDo: Complete documentation before stable release. {397}</summary>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricAggregateToTelemetryPipelineConverter.Convert(Microsoft.ApplicationInsights.Metrics.MetricAggregate)">
            <summary>@ToDo: Complete documentation before stable release. {360}</summary>
            <param name="aggregate">@ToDo: Complete documentation before stable release. {116}</param>
            <returns>@ToDo: Complete documentation before stable release. {685}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator">
            <summary>@ToDo: Complete documentation before stable release. {558}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.DataSeries">
            <summary>Gets @ToDo: Complete documentation before stable release. {969}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.TryRecycle">
            <summary>@ToDo: Complete documentation before stable release. {792}</summary>
            <returns>@ToDo: Complete documentation before stable release. {235}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.Reset(System.DateTimeOffset,Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter)">
            <summary>@ToDo: Complete documentation before stable release. {246}</summary>
            <param name="periodStart">@ToDo: Complete documentation before stable release. {781}</param>
            <param name="valueFilter">@ToDo: Complete documentation before stable release. {567}</param>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.Reset(System.DateTimeOffset)">
            <summary>@ToDo: Complete documentation before stable release. {734}</summary>
            <param name="periodStart">@ToDo: Complete documentation before stable release. {299}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.CompleteAggregation(System.DateTimeOffset)">
            <summary>@ToDo: Complete documentation before stable release. {099}</summary>
            <param name="periodEnd">@ToDo: Complete documentation before stable release. {193}</param>
            <returns>@ToDo: Complete documentation before stable release. {573}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.CreateAggregateUnsafe(System.DateTimeOffset)">
            <summary>@ToDo: Complete documentation before stable release. {221}</summary>
            <param name="periodEnd">@ToDo: Complete documentation before stable release. {203}</param>
            <returns>@ToDo: Complete documentation before stable release. {615}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.TrackValue(System.Double)">
            <summary>@ToDo: Complete documentation before stable release. {574}</summary>
            <param name="metricValue">@ToDo: Complete documentation before stable release. {887}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesAggregator.TrackValue(System.Object)">
            <summary>@ToDo: Complete documentation before stable release. {206}</summary>
            <param name="metricValue">@ToDo: Complete documentation before stable release. {266}</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesFilter">
            <summary>@ToDo: Complete documentation before stable release. {339}</summary>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesFilter.WillConsume(Microsoft.ApplicationInsights.Metrics.MetricSeries,Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter@)">
            <summary>@ToDo: Complete documentation before stable release. {600}</summary>
            <param name="dataSeries">@ToDo: Complete documentation before stable release. {025}</param>
            <param name="valueFilter">@ToDo: Complete documentation before stable release. {050}</param>
            <returns>@ToDo: Complete documentation before stable release. {100}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricTelemetryPipeline">
            <summary>
            Represents an eventual destination for metric telemetry.
            For example, an Application Insights telemetry pipeline, a file or some other ingestion point.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricTelemetryPipeline.TrackAsync(Microsoft.ApplicationInsights.Metrics.MetricAggregate,System.Threading.CancellationToken)">
            <summary>
            Send a metric aggregate to the eventual destination.
            </summary>
            <param name="metricAggregate">The aggregate.</param>
            <param name="cancelToken">Cancellation may or may not be supported by different destinations.</param>
            <exception cref="T:System.ArgumentNullException">The specified <c>metricAggregate</c> is null.</exception>
            <exception cref="T:System.ArgumentException">The runtime class of the specified <c>metricAggregate</c> does not match the
                telemetry destination type represented by this instance of <c>IMetricTelemetryPipeline</c>.</exception>
            <exception cref="T:System.OperationCanceledException">The specified <c>cancelToken</c> has had cancellation requested.</exception>
            <returns>@ToDo: Complete documentation before stable release. {034}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricTelemetryPipeline.FlushAsync(System.Threading.CancellationToken)">
            <summary>@ToDo: Complete documentation before stable release. {453}</summary>
            <param name="cancelToken">@ToDo: Complete documentation before stable release. {697}</param>
            <returns>@ToDo: Complete documentation before stable release. {934}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter">
            <summary>@ToDo: Complete documentation before stable release. {265}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter.WillConsume(Microsoft.ApplicationInsights.Metrics.MetricSeries,System.Double)">
            <summary>@ToDo: Complete documentation before stable release. {919}</summary>
            <param name="dataSeries">@ToDo: Complete documentation before stable release. {526}</param>
            <param name="metricValue">@ToDo: Complete documentation before stable release. {095}</param>
            <returns>@ToDo: Complete documentation before stable release. {464}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter.WillConsume(Microsoft.ApplicationInsights.Metrics.MetricSeries,System.Object)">
            <summary>@ToDo: Complete documentation before stable release. {704}</summary>
            <param name="dataSeries">@ToDo: Complete documentation before stable release. {929}</param>
            <param name="metricValue">@ToDo: Complete documentation before stable release. {703}</param>
            <returns>@ToDo: Complete documentation before stable release. {497}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline">
            <summary>@ToDo: Complete documentation before stable release. {079}</summary>
            @PublicExposureCandidate
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.CountLimitDefault">
            <summary>@ToDo: Complete documentation before stable release. {529}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.#ctor">
            <summary>@ToDo: Complete documentation before stable release. {846}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.#ctor(System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {195}</summary>
            <param name="countLimit">@ToDo: Complete documentation before stable release. {153}</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.CountLimit">
            <summary>Gets @ToDo: Complete documentation before stable release. {953}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.Count">
            <summary>Gets @ToDo: Complete documentation before stable release. {917}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.Item(System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {823}</summary>
            <param name="index">@ToDo: Complete documentation before stable release. {470}</param>
            <returns>@ToDo: Complete documentation before stable release. {699}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.Clear">
            <summary>@ToDo: Complete documentation before stable release. {169}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.TrackAsync(Microsoft.ApplicationInsights.Metrics.MetricAggregate,System.Threading.CancellationToken)">
            <summary>@ToDo: Complete documentation before stable release. {319}</summary>
            <param name="metricAggregate">@ToDo: Complete documentation before stable release. {915}</param>
            <param name="cancelToken">@ToDo: Complete documentation before stable release. {929}</param>
            <returns>@ToDo: Complete documentation before stable release. {190}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MemoryMetricTelemetryPipeline.FlushAsync(System.Threading.CancellationToken)">
            <summary>@ToDo: Complete documentation before stable release. {094}</summary>
            <param name="cancelToken">@ToDo: Complete documentation before stable release. {776}</param>
            <returns>@ToDo: Complete documentation before stable release. {084}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToApplicationInsightsPipelineConverterBase">
            <summary>@ToDo: Complete documentation before stable release. {533}</summary>
            @PublicExposureCandidate
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToApplicationInsightsPipelineConverterBase.AggregationIntervalMonikerPropertyKey">
            <summary>@ToDo: Complete documentation before stable release. {918}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToApplicationInsightsPipelineConverterBase.AggregationKindMoniker">
            <summary>Gets @ToDo: Complete documentation before stable release. {692}</summary>s
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToApplicationInsightsPipelineConverterBase.Convert(Microsoft.ApplicationInsights.Metrics.MetricAggregate)">
            <summary>@ToDo: Complete documentation before stable release. {200}</summary>
            <param name="aggregate">@ToDo: Complete documentation before stable release. {793}</param>
            <returns>@ToDo: Complete documentation before stable release. {084}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToApplicationInsightsPipelineConverterBase.PopulateDataValues(Microsoft.ApplicationInsights.DataContracts.MetricTelemetry,Microsoft.ApplicationInsights.Metrics.MetricAggregate)">
            <summary>@ToDo: Complete documentation before stable release. {632}</summary>
            <param name="telemetryItem">@ToDo: Complete documentation before stable release. {469}</param>
            <param name="aggregate">@ToDo: Complete documentation before stable release. {380}</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToTelemetryPipelineConverters">
            <summary>@ToDo: Complete documentation before stable release. {573}</summary>
            @PublicExposureCandidate
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToTelemetryPipelineConverters.Registry">
            <summary>@ToDo: Complete documentation before stable release. {097}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToTelemetryPipelineConverters.Add(System.Type,System.String,Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricAggregateToTelemetryPipelineConverter)">
            <summary>@ToDo: Complete documentation before stable release. {109}</summary>
            <param name="pipelineType">@ToDo: Complete documentation before stable release. {517}</param>
            <param name="aggregationKindMoniker">@ToDo: Complete documentation before stable release. {274}</param>
            <param name="converter">@ToDo: Complete documentation before stable release. {912}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregateToTelemetryPipelineConverters.TryGet(System.Type,System.String,Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricAggregateToTelemetryPipelineConverter@)">
            <summary>@ToDo: Complete documentation before stable release. {076}</summary>
            <param name="pipelineType">@ToDo: Complete documentation before stable release. {807}</param>
            <param name="aggregationKindMoniker">@ToDo: Complete documentation before stable release. {677}</param>
            <param name="converter">@ToDo: Complete documentation before stable release. {420}</param>
            <returns>@ToDo: Complete documentation before stable release. {143}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind">
            <summary>@ToDo: Complete documentation before stable release. {447}</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind.Default">
            <summary>
            The default aggregation cycle.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind.QuickPulse">
            <summary>
            The aggregation cycle used by QuickPulse
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind.Custom">
            <summary>
            The custom aggregation cycle.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricConfigurationExtensions">
            <summary>
            Provides discoverable access to constants used by metric aggregates.
            Do not use directly. Instead, use: <c>MetricConfigurations.Common.Xxxx().Constants()</c>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricConfigurationExtensions.Constants(Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement)">
            <summary>
            Groups constants used my metric aggregates produced by aggregators that are configured by metric configurations represented
            through instances of <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement"/>. See also <c>MetricConfigurations.Common.Measurement()</c>./>
            </summary>
            <param name="measurementConfig">@ToDo: Complete documentation before stable release. {071}</param>
            <returns>@ToDo: Complete documentation before stable release. {132}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricConfigurationExtensions.Constants(Microsoft.ApplicationInsights.Metrics.MetricConfigurationForMeasurement)">
            <summary>
            Groups constants used my metric aggregates produced by aggregators that are configured by metric configurations represented
            through instances of <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricConfigurationForMeasurement"/>. See also <c>MetricConfigurations.Common.Measurement()</c>./>
            </summary>
            <param name="measurementConfig">@ToDo: Complete documentation before stable release. {276}</param>
            <returns>@ToDo: Complete documentation before stable release. {564}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricExtensions">
            <summary>
            There are some APIs on <c>Metric</c> that we hide from Intellisense by making them internal until the ..Extensibility namespace is imported.
            This class exposes them.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricExtensions.GetConfiguration(Microsoft.ApplicationInsights.Metric)">
            <summary>
            Exposes the <c>Configuration</c> property for users who imported the <c>Microsoft.ApplicationInsights.Metrics.Extensibility</c> namespace.
            </summary>
            <param name="metric">@ToDo: Complete documentation before stable release. {753}</param>
            <returns>@ToDo: Complete documentation before stable release. {527}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricManagerExtensions">
            <summary>
            There are some methods on that MetricManager needs to forward to its encapsulated MetricAggregationManager that need to be public.
            However, in order not to pulute the API surface shown by Intellisense, we redirect them through this class, which is located in a more specialized namespace.
            </summary>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricManagerExtensions.StopAggregators(Microsoft.ApplicationInsights.Metrics.MetricManager,Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind,System.DateTimeOffset)">
            <summary>@ToDo: Complete documentation before stable release. {989}</summary>
            <param name="metricManager">@ToDo: Complete documentation before stable release. {335}</param>
            <param name="aggregationCycleKind">@ToDo: Complete documentation before stable release. {001}</param>
            <param name="tactTimestamp">@ToDo: Complete documentation before stable release. {687}</param>
            <returns>@ToDo: Complete documentation before stable release. {620}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricManagerExtensions.StartOrCycleAggregators(Microsoft.ApplicationInsights.Metrics.MetricManager,Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind,System.DateTimeOffset,Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricSeriesFilter)">
            <summary>@ToDo: Complete documentation before stable release. {396}</summary>
            <param name="metricManager">@ToDo: Complete documentation before stable release. {784}</param>
            <param name="aggregationCycleKind">@ToDo: Complete documentation before stable release. {805}</param>
            <param name="tactTimestamp">@ToDo: Complete documentation before stable release. {879}</param>
            <param name="futureFilter">@ToDo: Complete documentation before stable release. {735}</param>
            <returns>@ToDo: Complete documentation before stable release. {762}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricManagerExtensions.StopDefaultAggregationCycleAsync(Microsoft.ApplicationInsights.Metrics.MetricManager)">
            <summary>
            Stops metric aggregation in advanced scenarios where a MetricManager was explicitly created using its ctor.
            </summary>
            <remarks>
            Metric Manager does not encapsulate any disposable or native resourses. However, it encapsulates a managed thread.
            In normal cases, a metric manager is accessed via convenience methods and consumers never need to worry about that thread.
            However, advanced scenarios may explicitly create a metric manager instance. In such cases, consumers may need to call
            this method on the explicitly created instance to let the thread know that it no longer needs to run. The thread will not
            be aborted proactively. Instead, it will complete the ongoing aggregation cycle and then gracfully exit instead of scheduling
            the next iteration. However, the background thread will not send any aggregated metrics if it has been notified to stop.
            Therefore, this method flushes current data before sending the notification.
            </remarks>
            <param name="metricManager">The metric manager</param>
            <returns>
            You can await the returned Task if you want to be sure that the encapsulated thread completed.
            If you just want to notify the thread to stop without waiting for it, do not await this method.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1">
            <summary>@ToDo: Complete documentation before stable release. {562}</summary>
            <typeparam name="TBufferedValue">The actual type of the metric values. For most common metrics it's <c>double</c>.
            However, for example a metric collecting strings to dount the number of distinct entities might have <c>string</c>.</typeparam>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.#ctor(System.Func{Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase{`0}},Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration,Microsoft.ApplicationInsights.Metrics.MetricSeries,Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind)">
            <summary>@ToDo: Complete documentation before stable release. {683}</summary>
            <param name="metricValuesBufferFactory">@ToDo: Complete documentation before stable release. {573}</param>
            <param name="configuration">@ToDo: Complete documentation before stable release. {343}</param>
            <param name="dataSeries">@ToDo: Complete documentation before stable release. {725}</param>
            <param name="aggregationCycleKind">@ToDo: Complete documentation before stable release. {361}</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.DataSeries">
            <summary>Gets @ToDo: Complete documentation before stable release. {182}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.CompleteAggregation(System.DateTimeOffset)">
            <summary>@ToDo: Complete documentation before stable release. {895}</summary>
            <param name="periodEnd">@ToDo: Complete documentation before stable release. {406}</param>
            <returns>@ToDo: Complete documentation before stable release. {839}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.Reset(System.DateTimeOffset)">
            <summary>@ToDo: Complete documentation before stable release. {121}</summary>
            <param name="periodStart">@ToDo: Complete documentation before stable release. {513}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.Reset(System.DateTimeOffset,Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricValueFilter)">
            <summary>@ToDo: Complete documentation before stable release. {674}</summary>
            <param name="periodStart">@ToDo: Complete documentation before stable release. {632}</param>
            <param name="valueFilter">@ToDo: Complete documentation before stable release. {637}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.TrackValue(System.Double)">
            <summary>@ToDo: Complete documentation before stable release. {461}</summary>
            <param name="metricValue">@ToDo: Complete documentation before stable release. {786}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.TrackValue(System.Object)">
            <summary>@ToDo: Complete documentation before stable release. {415}</summary>
            <param name="metricValue">@ToDo: Complete documentation before stable release. {635}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.TryRecycle">
            <summary>@ToDo: Complete documentation before stable release. {040}</summary>
            <returns>@ToDo: Complete documentation before stable release. {556}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.CreateAggregateUnsafe(System.DateTimeOffset)">
            <summary>@ToDo: Complete documentation before stable release. {017}</summary>
            <param name="periodEnd">@ToDo: Complete documentation before stable release. {120}</param>
            <returns>@ToDo: Complete documentation before stable release. {390}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.CreateAggregate(System.DateTimeOffset)">
            <summary>@ToDo: Complete documentation before stable release. {238}</summary>
            <param name="periodEnd">@ToDo: Complete documentation before stable release. {096}</param>
            <returns>@ToDo: Complete documentation before stable release. {421}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.ResetAggregate">
            <summary>@ToDo: Complete documentation before stable release. {896}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.ConvertMetricValue(System.Double)">
            <summary>@ToDo: Complete documentation before stable release. {878}</summary>
            <param name="metricValue">@ToDo: Complete documentation before stable release. {128}</param>
            <returns>@ToDo: Complete documentation before stable release. {270}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.ConvertMetricValue(System.Object)">
            <summary>@ToDo: Complete documentation before stable release. {928}</summary>
            <param name="metricValue">@ToDo: Complete documentation before stable release. {941}</param>
            <returns>@ToDo: Complete documentation before stable release. {657}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.UpdateAggregate_Stage1(Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase{`0},System.Int32,System.Int32)">
            <summary>
            Aggregators implement updating aggregate state from buffer by implemenmting this method (<c>UpdateAggregate_Stage1</c>)
            and its sibling method <c>UpdateAggregate_Stage2</c>. Stage 1 is the part of the update that needs to happen while holding
            a lock on the <c>metric values buffer</c> (e.g. extracting a summary from the buffer). Stage 2 is the part of the update
            that does not need such a lock.
            </summary>
            <param name="buffer">@ToDo: Complete documentation before stable release. {580}</param>
            <param name="minFlushIndex">@ToDo: Complete documentation before stable release. {764}</param>
            <param name="maxFlushIndex">@ToDo: Complete documentation before stable release. {497}</param>
            <returns>@ToDo: Complete documentation before stable release. {788}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.UpdateAggregate_Stage2(System.Object)">
            <summary>
            Aggregators implement updating aggregate state from buffer by implemenmting this method (<c>UpdateAggregate_Stage2</c>)
            and its sibling method <c>UpdateAggregate_Stage1</c>. Stage 1 is the part of the update that needs to happen while holding
            a lock on the <c>metric values buffer</c> (e.g. extracting a summary from the buffer). Stage 2 is the part of the update
            that does not need such a lock.
            </summary>
            <param name="stage1Result">@ToDo: Complete documentation before stable release. {551}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.AddInfo_Timing_Dimensions_Context(Microsoft.ApplicationInsights.Metrics.MetricAggregate,System.DateTimeOffset)">
            <summary>@ToDo: Complete documentation before stable release. {203}</summary>
            <param name="aggregate">@ToDo: Complete documentation before stable release. {570}</param>
            <param name="periodEnd">@ToDo: Complete documentation before stable release. {632}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.TrackFilteredConvertedValue(`0)">
            <summary>
            This method is the meat of the lock-free aggregation logic.
            </summary>
            <param name="metricValue">Already filtered and conveted value to be tracked.
                We know that the value is not Double.NaN and not null and it passed trought any filters.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesAggregatorBase`1.UpdateAggregate(Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase{`0})">
            <summary>
            Flushes the values buffer to update the aggregate state held by subclasses.
            </summary>
            <param name="buffer">@ToDo: Complete documentation before stable release. {208}</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesExtensions">
            <summary>
            There are some APIs on <c>MetricSeries</c> that we hide from Intellisense by making them internal until the ..Extensibility namespace is imported.
            This class exposes them.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricSeriesExtensions.GetConfiguration(Microsoft.ApplicationInsights.Metrics.MetricSeries)">
            <summary>
            Exposes the <c>Configuration</c> property for users who imported the <c>Microsoft.ApplicationInsights.Metrics.Extensibility</c> namespace.
            </summary>
            <param name="metricSeries">@ToDo: Complete documentation before stable release. {509}</param>
            <returns>@ToDo: Complete documentation before stable release. {867}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1">
            <summary>@ToDo: Complete documentation before stable release. {821}</summary>
            <typeparam name="TValue">The tyoe of values held in the buffer.</typeparam>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.#ctor(System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {327}</summary>
            <param name="capacity">@ToDo: Complete documentation before stable release. {055}</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.Capacity">
            <summary>Gets @ToDo: Complete documentation before stable release. {982}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.NextFlushIndex">
            <summary>Gets or sets @ToDo: Complete documentation before stable release. {934}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.IncWriteIndex">
            <summary>@ToDo: Complete documentation before stable release. {997}</summary>
            <returns>@ToDo: Complete documentation before stable release. {390}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.PeekLastWriteIndex">
            <summary>@ToDo: Complete documentation before stable release. {243}</summary>
            <returns>@ToDo: Complete documentation before stable release. {695}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.WriteValue(System.Int32,`0)">
            <summary>@ToDo: Complete documentation before stable release. {205}</summary>
            <param name="index">@ToDo: Complete documentation before stable release. {545}</param>
            <param name="value">@ToDo: Complete documentation before stable release. {562}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.ResetIndices">
            <summary>@ToDo: Complete documentation before stable release. {182}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.ResetIndicesAndData">
            <summary>@ToDo: Complete documentation before stable release. {105}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.GetAndResetValue(System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {628}</summary>
            <param name="index">@ToDo: Complete documentation before stable release. {939}</param>
            <returns>@ToDo: Complete documentation before stable release. {285}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.ResetValues(`0[])">
            <summary>@ToDo: Complete documentation before stable release. {016}</summary>
            <param name="values">.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.GetAndResetValueOnce(`0[],System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {277}</summary>
            <param name="values">@ToDo: Complete documentation before stable release. {569}</param>
            <param name="index">@ToDo: Complete documentation before stable release. {193}</param>
            <returns>@ToDo: Complete documentation before stable release. {571}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.WriteValueOnce(`0[],System.Int32,`0)">
            <summary>@ToDo: Complete documentation before stable release. {016}</summary>
            <param name="values">@ToDo: Complete documentation before stable release. {051}</param>
            <param name="index">@ToDo: Complete documentation before stable release. {872}</param>
            <param name="value">@ToDo: Complete documentation before stable release. {963}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBufferBase`1.IsInvalidValue(`0)">
            <summary>@ToDo: Complete documentation before stable release. {997}</summary>
            <param name="value">@ToDo: Complete documentation before stable release. {863}</param>
            <returns>@ToDo: Complete documentation before stable release. {432}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Double">
            <summary>@ToDo: Complete documentation before stable release. {469}</summary>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Double.#ctor(System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {923}</summary>
            <param name="capacity">@ToDo: Complete documentation before stable release. {808}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Double.IsInvalidValue(System.Double)">
            <summary>@ToDo: Complete documentation before stable release. {611}</summary>
            <param name="value">@ToDo: Complete documentation before stable release. {523}</param>
            <returns>@ToDo: Complete documentation before stable release. {416}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Double.ResetValues(System.Double[])">
            <summary>@ToDo: Complete documentation before stable release. {768}</summary>
            <param name="values">@ToDo: Complete documentation before stable release. {365}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Double.GetAndResetValueOnce(System.Double[],System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {913}</summary>
            <param name="values">@ToDo: Complete documentation before stable release. {943}</param>
            <param name="index">@ToDo: Complete documentation before stable release. {130}</param>
            <returns>@ToDo: Complete documentation before stable release. {880}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Double.WriteValueOnce(System.Double[],System.Int32,System.Double)">
            <summary>@ToDo: Complete documentation before stable release. {684}</summary>
            <param name="values">@ToDo: Complete documentation before stable release. {246}</param>
            <param name="index">@ToDo: Complete documentation before stable release. {452}</param>
            <param name="value">@ToDo: Complete documentation before stable release. {035}</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Object">
            <summary>@ToDo: Complete documentation before stable release. {201}</summary>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Object.#ctor(System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {314}</summary>
            <param name="capacity">@ToDo: Complete documentation before stable release. {683}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Object.IsInvalidValue(System.Object)">
            <summary>@ToDo: Complete documentation before stable release. {922}</summary>
            <param name="value">@ToDo: Complete documentation before stable release. {263}</param>
            <returns>@ToDo: Complete documentation before stable release. {284}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Object.ResetValues(System.Object[])">
            <summary>@ToDo: Complete documentation before stable release. {616}</summary>
            <param name="values">@ToDo: Complete documentation before stable release. {931}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Object.GetAndResetValueOnce(System.Object[],System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {940}</summary>
            <param name="values">@ToDo: Complete documentation before stable release. {673}</param>
            <param name="index">@ToDo: Complete documentation before stable release. {249}</param>
            <returns>@ToDo: Complete documentation before stable release. {311}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.MetricValuesBuffer_Object.WriteValueOnce(System.Object[],System.Int32,System.Object)">
            <summary>@ToDo: Complete documentation before stable release. {003}</summary>
            <param name="values">@ToDo: Complete documentation before stable release. {110}</param>
            <param name="index">@ToDo: Complete documentation before stable release. {970}</param>
            <param name="value">@ToDo: Complete documentation before stable release. {000}</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.Extensibility.TelemetryClientExtensions">
            <summary>@ToDo: Complete documentation before stable release. {526}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Extensibility.TelemetryClientExtensions.GetMetricManager(Microsoft.ApplicationInsights.TelemetryClient,Microsoft.ApplicationInsights.MetricAggregationScope)">
            <summary>@ToDo: Complete documentation before stable release. {811}</summary>
            <param name="telemetryClient">@ToDo: Complete documentation before stable release. {225}</param>
            <param name="aggregationScope">@ToDo: Complete documentation before stable release. {281}</param>
            <returns>@ToDo: Complete documentation before stable release. {736}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration">
            <summary>@ToDo: Complete documentation before stable release. {510}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration.RequiresPersistentAggregation">
            <summary>Gets a value indicating whether @ToDo: Complete documentation before stable release. {016}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration.CreateNewAggregator(Microsoft.ApplicationInsights.Metrics.MetricSeries,Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind)">
            <summary>@ToDo: Complete documentation before stable release. {149}</summary>
            <param name="dataSeries">@ToDo: Complete documentation before stable release. {201}</param>
            <param name="aggregationCycleKind">@ToDo: Complete documentation before stable release. {841}</param>
            <returns>@ToDo: Complete documentation before stable release. {127}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1">
            <summary>@ToDo: Complete documentation before stable release. {574}</summary>
            <typeparam name="T">Type of collection elements.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1.#ctor">
            <summary>@ToDo: Complete documentation before stable release. {371}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1.Count">
            <summary>Gets @ToDo: Complete documentation before stable release. {072}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1.Add(`0)">
            <summary>@ToDo: Complete documentation before stable release. {146}</summary>
            <param name="item">@ToDo: Complete documentation before stable release. {688}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1.GetEnumerator">
            <summary>@ToDo: Complete documentation before stable release. {508}</summary>
            <returns>@ToDo: Complete documentation before stable release. {325}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>@ToDo: Complete documentation before stable release. {563}</summary>
            <returns>@ToDo: Complete documentation before stable release. {016}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1.Enumerator">
            <summary>@ToDo: Complete documentation before stable release. {671}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1.Enumerator.Count">
            <summary>Gets @ToDo: Complete documentation before stable release. {648}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1.Enumerator.Current">
            <summary>Gets @ToDo: Complete documentation before stable release. {314}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1.Enumerator.Dispose">
            <summary>@ToDo: Complete documentation before stable release. {941}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1.Enumerator.MoveNext">
            <summary>@ToDo: Complete documentation before stable release. {168}</summary>
            <returns>@ToDo: Complete documentation before stable release. {185}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.GrowingCollection`1.Enumerator.Reset">
            <summary>@ToDo: Complete documentation before stable release. {307}</summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2">
            <summary>
            Represents a multi-dimensional, discrete data cube.
            An N-dimensional discrete cube is a data structure containing elements of type TPoint.
            Each point can be addressed using a coordinate-vector containing N entries of type TDimensionValue.
            <br />
            For example, the elements in the cube may be colors, space vectors or sold items (with its properties as coordinates).
            However, the key usage in this library are multidimensional metrics. In such usage the coordinates are metric
            dimensions (TDimensionValue is String) and the cube elements (TPoint) are metric data series.
            <p>
            The cube refers to dimensions using their index: 0th, 1st, 2nd dimension and so on. For each dimension, the cube has a <c>SubdimensionsCountLimit</c>
            parameter. This limits the number of distinct values that may be specified for that specific sub-dimension (given concrete values for lower dimensions).
            Once the <c>SubdimensionsCountLimit</c> for some particular dimension is reached, the cube will no longer be able to create points whose coordinate
            vectors contain values for that particular dimension that do not occur in coordinate vectors for points already in the cube.
            The cube also has a <c>TotalPointsCountLimit</c> parameter that limits the total number of points in the cube.
            </p>
            <p>
            The elements of the coordinate vectors (i.e. the values of the dimensions of a point in the cube) are discrete. Even if their type implies a non-discrete
            space (e.g.when TDimensionValue is Double) they are always treated as discrete and separate.
            </p>
            <p>
            The cube is designed to work in concurrent scenarios while minimizing the number, the duration and the scope of locks taken. However, some locks are
            necessary to correctly impose the SubdimensionsCountLimits and the TotalPointsCountLimit constrains.
            </p>
            <p>
            This implementation assumes that creation and storage of TPoint-elements is resource intensive. It creates points lazily, only when requested.
            However, to minimize locking it uses pessimistic and optimistic concurrency mechanisms where possible. Two artifacts occur as a result:
            </p>
            <list type="bullet">
              <item><description>The specified <c>pointsFactory</c> delegate may be executed more than once for a particular coordinates vector.
                However, once a point for the specified coordinates-vector has been actually returned to the caller, always the same instance of
                that point will be returned by the cube. This behaviour is consistent with the ConcurrentDictionary in the .NET Framework.</description></item>
              <item><description>The <c>TryGetOrCreatePoint(..)</c> may return <c>false</c>, and then return <c>true</c> moments later when called with the
                same parameters. This is because in order to avoid locking the cube pre-books dimension value counts (and total points counts) and later
                frees them up if the creation of a new point did not complete.
                Notably, this artifact does not represent any problems in practice: It occurs only in concurrent races when the number of values of a
                dimension (or the total number of points) is close to the limit, where applications should not rely on a particular outcome of adding a
                point anyway. In common cases one can assume that the result of <c>TryGetOrCreatePoint(..)</c> is, indeed, stable.
                In order to control potential instability use <c>TryGetOrCreatePointAsync(..)</c> overloads.
                Note, however, that those overloads do not guarantee that the result of requesting a new point is completely stable. They merely make it
                very unlikely for it to change by re-trying the operation several times.</description></item>
            </list>
            </summary>
            <remarks>
            <p>** Color Example: **</p>
            <p>
            An example of a cube is an RGB color space.
            Assume that we use 8 bits (= 256 values) per color and that is a color class such as this:
            </p>
            <code>
            class Color
            {
                public Color(byte red, byte green, byte blue) { }
                //...
            }
            </code>
            <p>
            It is possible to represent the entire space using a cube as follows:
            </p>
            <code>
            Func{int[], Color} colorFactory = (rgbValues) =} new Color(red: rgbValues[0], green: rgbValues[1], blue: rgbValues[2]);
            MultidimensionalCube{int, Color} colorCube = new MultidimensionalCube{int, Color}(colorFactory, 256, 256, 256);
            </code>
            <p>
            We can now address specific color objects we follows:
            </p>
            <code>
            MultidimensionalPointResult{Color} greenResult = colorCube.TryGetOrCreatePoint(0, 255, 0);
            Color green = greenResult.Point;
            
            MultidimensionalPointResult{Color} yellowResult = colorCube.TryGetOrCreatePoint(255, 255, 0);
            Color yellow = yellowResult.Point;
            
            MultidimensionalPointResult{Color} azureResult = colorCube.TryGetOrCreatePoint(0, 127, 255);
            Color azure = azureResult.Point;
            </code>
            
            <p>** Metrics Example: **</p>
            <p>
            A multi-dimensional cube is used to address data time series of a multidimensional metric.
            Consider that we have a metric representing the number of milliseconds required to process a request to a web-service.
            We collect that metric according to a number of possible groupings:
            </p>
            <list type="number">
              <item><description>By the type of the request (the string “synthetic” (i.e.created by a test) or “organic” (created by a legitimate client)).</description></item>
              <item><description>By the response generated (an HTTP response code encoded as a string).</description></item>
              <item><description>By the name of the instance that executed the request (in case of a web service scaled over multiple instances).</description></item>
              <item><description>By the name of the API invoked (any URL string).</description></item>
            </list>
            <p>
            Each view represents a separate dimension. There is a distinct data time series for each combination of dimension-values. For example:
            </p>
            <list type="bullet">
              <item><description>Type=<c>"Organic"</c>, Response=<c>"200"</c>, Instance=<c>"Instance_01"</c>, API=<c>"http://myservice.com/API1?paramA=X"</c>.</description></item>
              <item><description>Type=<c>"Organic"</c>, Response=<c>"500"</c>, Instance=<c>"Instance_01"</c>, API=<c>"http://myservice.com/API2?paramB=Y"</c>.</description></item>
            </list>
            <p>
            So a data series representation might look like this:
            </p>
            <code>
            class ResponseTimeMetricSeries
            {
                public ResponseTimeMetricSeries(string kind, string responseCode, string instanceName, string url) { }
                //...
            }
            </code>
            <p>
            Note also that while some dimensions can naturally take a small amount of values(e.g.Type can only take 2 values in this example), URL can essentially
            take an unbounded number of values. In our example we want to limit the number of dimension values for specific dimensions in order to control resource
            usage. We can create a cube as follows. (Note how we used different max dimension values counts that are appropriate for each respective dimension.)
            </p>
            <code>
            Func{string[], ResponseTimeMetricSeries} metricFactory = (dimValues) =} new ResponseTimeMetricSeries(
                                                                                                    kind:         dimValues[0],
                                                                                                    responseCode: dimValues[1],
                                                                                                    instanceName: dimValues[2],
                                                                                                    url:          dimValues[3]);
            MultidimensionalCube{string, ResponseTimeMetricSeries} metricsCube = new MultidimensionalCube{string, ResponseTimeMetricSeries}(metricFactory, 2, 50, 100, 1000);
            
            MultidimensionalPointResult{ResponseTimeMetricSeries} result;
            
            result = metricsCube.TryGetOrCreatePoint("Organic", "200", "Instance_01", "http://myservice.com/API1?paramA=X");
            if (! result.Success)
            {
                throw new SomeAppropriateException("Cannot create metric data series. Dimension cap is potentially reached.");
            }
            
            ResponseTimeMetricDataSeries responseSeries01 = result.Point;
            
            
            result = metricsCube.TryGetOrCreatePoint("Organic", "500", "Instance_01", "http://myservice.com/API2?paramB=Y");
            if (! result.Success)
            {
                throw new SomeAppropriateException("Cannot create metric data series. Dimension cap is potentially reached.");
            }
            
            ResponseTimeMetricSeries responseSeries02 = result.Point;
            </code>
            </remarks>
            <typeparam name="TDimensionValue">Type of dimension values. For common metrics, it's <c>string</c>.</typeparam>
            <typeparam name="TPoint">Type of the item addreses by the dimension-values. For metrics it's a metric series.</typeparam>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.DimensionsCountLimit">
            <summary>
            We are using a recursive implementation for points creation so we are limiting the max dimension count to prevent strack overflow.
            In practice this is unlikely to be ever reached.
            If it nevertheless becomes an issue, we can change the implementation to be iterative and increase this limit.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.#ctor(System.Func{`0[],`1},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>@ToDo: Complete documentation before stable release. {877}</summary>
            <param name="pointsFactory">@ToDo: Complete documentation before stable release. {671}</param>
            <param name="subdimensionsCountLimits">@ToDo: Complete documentation before stable release. {849}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.#ctor(System.Int32,System.Func{`0[],`1},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>@ToDo: Complete documentation before stable release. {166}</summary>
            <param name="totalPointsCountLimit">@ToDo: Complete documentation before stable release. {457}</param>
            <param name="pointsFactory">@ToDo: Complete documentation before stable release. {362}</param>
            <param name="subdimensionsCountLimits">@ToDo: Complete documentation before stable release. {803}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.#ctor(System.Func{`0[],`1},System.Int32[])">
            <summary>@ToDo: Complete documentation before stable release. {973}</summary>
            <param name="pointsFactory">@ToDo: Complete documentation before stable release. {130}</param>
            <param name="subdimensionsCountLimits">@ToDo: Complete documentation before stable release. {354}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.#ctor(System.Int32,System.Func{`0[],`1},System.Int32[])">
            <summary>@ToDo: Complete documentation before stable release. {872}</summary>
            <param name="totalPointsCountLimit">@ToDo: Complete documentation before stable release. {021}</param>
            <param name="pointsFactory">@ToDo: Complete documentation before stable release. {170}</param>
            <param name="subdimensionsCountLimits">@ToDo: Complete documentation before stable release. {298}</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.DimensionsCount">
            <summary>Gets @ToDo: Complete documentation before stable release. {249}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.TotalPointsCountLimit">
            <summary>Gets @ToDo: Complete documentation before stable release. {655}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.TotalPointsCount">
            <summary>Gets @ToDo: Complete documentation before stable release. {994}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.GetSubdimensionsCountLimit(System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {062}</summary>
            <param name="dimension">@ToDo: Complete documentation before stable release. {689}</param>
            <returns>@ToDo: Complete documentation before stable release. {912}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.GetAllPoints">
            <summary>@ToDo: Complete documentation before stable release. {543}</summary>
            <returns>@ToDo: Complete documentation before stable release. {784}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.GetAllPoints(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0[],`1}})">
            <summary>@ToDo: Complete documentation before stable release. {251}</summary>
            <param name="pointContainer">@ToDo: Complete documentation before stable release. {164}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.TryGetOrCreatePoint(`0[])">
            <summary>@ToDo: Complete documentation before stable release. {924}</summary>
            <param name="coordinates">@ToDo: Complete documentation before stable release. {747}</param>
            <returns>@ToDo: Complete documentation before stable release. {986}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.TryGetPoint(`0[])">
            <summary>@ToDo: Complete documentation before stable release. {438}</summary>
            <param name="coordinates">@ToDo: Complete documentation before stable release. {321}</param>
            <returns>@ToDo: Complete documentation before stable release. {686}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.TryGetOrCreatePointAsync(`0[])">
            <summary>@ToDo: Complete documentation before stable release. {585}</summary>
            <param name="coordinates">@ToDo: Complete documentation before stable release. {643}</param>
            <returns>@ToDo: Complete documentation before stable release. {039}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.TryGetOrCreatePointAsync(System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,`0[])">
            <summary>@ToDo: Complete documentation before stable release. {973}</summary>
            <param name="sleepDuration">@ToDo: Complete documentation before stable release. {859}</param>
            <param name="timeout">@ToDo: Complete documentation before stable release. {280}</param>
            <param name="cancelToken">@ToDo: Complete documentation before stable release. {810}</param>
            <param name="coordinates">@ToDo: Complete documentation before stable release. {522}</param>
            <returns>@ToDo: Complete documentation before stable release. {402}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube`2.TryIncTotalPointsCount">
            <summary>@ToDo: Complete documentation before stable release. {211}</summary>
            <returns>@ToDo: Complete documentation before stable release. {567}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1">
            <summary>@ToDo: Complete documentation before stable release. {099}</summary>
            <typeparam name="TPoint">Type of the set over which the cube is build. For metrics, it is a metric series.</typeparam>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.DimensionsCountLimit">
            <summary>
            We are using a recursive implementation for points creation so we are limiting the max dimension count to prevent stack overflow.
            In practice this is unlikely to be ever reached.
            If it nevertheless becomes an issue, we can change the implementation to be iterative and increase this limit.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.#ctor(System.Func{System.String[],`0},System.Int32[])">
            <summary>@ToDo: Complete documentation before stable release. {016}</summary>
            <param name="pointsFactory">@ToDo: Complete documentation before stable release. {334}</param>
            <param name="dimensionValuesCountLimits">@ToDo: Complete documentation before stable release. {636}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.#ctor(System.Int32,System.Func{System.String[],`0},System.Int32[])">
            <summary>@ToDo: Complete documentation before stable release. {303}</summary>
            <param name="totalPointsCountLimit">@ToDo: Complete documentation before stable release. {393}</param>
            <param name="pointsFactory">@ToDo: Complete documentation before stable release. {718}</param>
            <param name="dimensionValuesCountLimits">@ToDo: Complete documentation before stable release. {422}</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.DimensionsCount">
            <summary>Gets @ToDo: Complete documentation before stable release. {993}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.TotalPointsCountLimit">
            <summary>Gets @ToDo: Complete documentation before stable release. {319}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.TotalPointsCount">
            <summary>Gets @ToDo: Complete documentation before stable release. {878}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.GetDimensionValuesCountLimit(System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {479}</summary>
            <param name="dimension">@ToDo: Complete documentation before stable release. {272}</param>
            <returns>@ToDo: Complete documentation before stable release. {764}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.GetDimensionValues(System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {093}</summary>
            <param name="dimension">@ToDo: Complete documentation before stable release. {419}</param>
            <returns>@ToDo: Complete documentation before stable release. {684}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.GetAllPoints">
            <summary>@ToDo: Complete documentation before stable release. {241}</summary>
            <returns>@ToDo: Complete documentation before stable release. {710}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.GetAllPoints(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String[],`0}})">
            <summary>@ToDo: Complete documentation before stable release. {375}</summary>
            <param name="pointContainer">@ToDo: Complete documentation before stable release. {365}</param>
            <returns>@ToDo: Complete documentation before stable release. {651}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.TryGetOrCreatePoint(System.String[])">
            <summary>@ToDo: Complete documentation before stable release. {444}</summary>
            <param name="coordinates">@ToDo: Complete documentation before stable release. {769}</param>
            <returns>@ToDo: Complete documentation before stable release. {229}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.TryGetOrCreatePointAsync(System.String[])">
            <summary>@ToDo: Complete documentation before stable release. {981}</summary>
            <param name="coordinates">@ToDo: Complete documentation before stable release. {197}</param>
            <returns>@ToDo: Complete documentation before stable release. {439}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.TryGetOrCreatePointAsync(System.Threading.CancellationToken,System.String[])">
            <summary>@ToDo: Complete documentation before stable release. {969}</summary>
            <param name="cancelToken">@ToDo: Complete documentation before stable release. {844}</param>
            <param name="coordinates">@ToDo: Complete documentation before stable release. {472}</param>
            <returns>@ToDo: Complete documentation before stable release. {660}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalCube2`1.TryGetPoint(System.String[])">
            <summary>@ToDo: Complete documentation before stable release. {477}</summary>
            <param name="coordinates">@ToDo: Complete documentation before stable release. {344}</param>
            <returns>@ToDo: Complete documentation before stable release. {444}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResult`1">
            <summary>@ToDo: Complete documentation before stable release. {768}</summary>
            <typeparam name="TPoint">Type of the set over which the cube is build. For metics, it is a metric series.</typeparam>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResult`1.Point">
            <summary>Gets @ToDo: Complete documentation before stable release. {917}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResult`1.FailureCoordinateIndex">
            <summary>Gets @ToDo: Complete documentation before stable release. {528}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResult`1.ResultCode">
            <summary>Gets @ToDo: Complete documentation before stable release. {621}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResult`1.IsPointCreatedNew">
            <summary>Gets a value indicating whether @ToDo: Complete documentation before stable release. {353}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResult`1.IsSuccess">
            <summary>Gets a value indicating whether @ToDo: Complete documentation before stable release. {268}</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResultCodes.Success_NewPointCreated">
            <summary>
            A new point was created and returned in this result.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResultCodes.Success_ExistingPointRetrieved">
            <summary>
            A point already existed, it was retreived and returned in this result.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResultCodes.Failure_SubdimensionsCountLimitReached">
            <summary>
            A point could not be created becasue the sub-dimsnions count was reached.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResultCodes.Failure_TotalPointsCountLimitReached">
            <summary>
            A point could not be created becasue the total points limit was reached.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResultCodes.Failure_PointDoesNotExistCreationNotRequested">
            <summary>
            A point could not be retreived becasue it does not exist and creation was not requested.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.ConcurrentDatastructures.MultidimensionalPointResultCodes.Failure_AsyncTimeoutReached">
            <summary>
            Timeout reached.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.DefaultAggregationPeriodCycle.Run">
            <summary>
            We use exactly one background thread for completing aggregators - either once per minute or once per second.
            We start this thread right when this manager is created to avoid that potential thread starvation on busy systems affects metrics.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MeasurementAggregateToApplicationInsightsPipelineConverter">
            <summary>@ToDo: Complete documentation before stable release. {951}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Util.ValidateNotNull(System.Object,System.String)">
            <summary>
            Parameter check for Null.
            </summary>
            <param name="value">Value to be checked.</param>
            <param name="name">Name of the parameter being checked.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Util.ValidateNotNullOrEmpty(System.String,System.String)">
            <summary>
            String parameter check with a more informative exception that specifies whether
            the problem was that the string was null or empty.
            </summary>
            <param name="value">Value to be checked.</param>
            <param name="name">Name of the parameter being checked.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Util.ValidateNotNullOrWhitespace(System.String,System.String)">
            <summary>
            String parameter check with a more informative exception that specifies whether
            the problem was that the string was null, empty or whitespace only.
            </summary>
            <param name="value">Value to be checked.</param>
            <param name="name">Name of the parameter being checked.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.Util.CopyTelemetryContext(Microsoft.ApplicationInsights.DataContracts.TelemetryContext,Microsoft.ApplicationInsights.DataContracts.TelemetryContext)">
            <summary>@ToDo: Complete documentation before stable release. {659}</summary>
            <param name="source">@ToDo: Complete documentation before stable release. {688}</param>
            <param name="target">@ToDo: Complete documentation before stable release. {859}</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate">
            <summary>@ToDo: Complete documentation before stable release. {406}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricAggregate.#ctor(System.String,System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {394}</summary>
            <param name="metricNamespace">@ToDo: Complete documentation before stable release. {704}</param>
            <param name="metricId">@ToDo: Complete documentation before stable release. {274}</param>
            <param name="aggregationKindMoniker">@ToDo: Complete documentation before stable release. {781}</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricAggregate.MetricNamespace">
            <summary>Gets @ToDo: Complete documentation before stable release. {747}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricAggregate.MetricId">
            <summary>Gets @ToDo: Complete documentation before stable release. {848}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricAggregate.AggregationKindMoniker">
            <summary>Gets @ToDo: Complete documentation before stable release. {959}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricAggregate.AggregationPeriodStart">
            <summary>Gets or sets @ToDo: Complete documentation before stable release. {050}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricAggregate.AggregationPeriodDuration">
            <summary>Gets or sets @ToDo: Complete documentation before stable release. {309}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricAggregate.Dimensions">
            <summary>Gets @ToDo: Complete documentation before stable release. {840}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricAggregate.Data">
            <summary>Gets @ToDo: Complete documentation before stable release. {034}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricAggregate.GetDataValue``1(System.String,``0)">
            <summary>
            This is a convenience method to retrieve the object at <c>Data[dataKey]</c>.
            It attempts to convert that object to the specified type <c>T</c>. If the conversion fails, the specified <c>defaultValue</c> is returned.
            </summary>
            <typeparam name="T">Type to which to convert the object at <c>Data[dataKey]</c>.</typeparam>
            <param name="dataKey">Key for the data item.</param>
            <param name="defaultValue">The value to return if conversion fails.</param>
            <returns>@ToDo: Complete documentation before stable release. {843}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricConfiguration">
            <summary>Encapsulates the configuration for a metric and its respective data time series.</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricConfiguration.#ctor(System.Int32,System.Int32,Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration)">
            <summary>Creates a new instance of <c>MetricConfiguration</c>.</summary>
            <param name="seriesCountLimit">How many data time series a metric can contain as a maximum.
            Once this limit is reached, calls to <c>TrackValue(..)</c>, <c>TryGetDataSeries(..)</c> and similar
            that would normally result in new series will return <c>false</c>.</param>
            <param name="valuesPerDimensionLimit">How many different values each of the dimensions of a metric can
            have as a maximum.
            Once this limit is reached, calls to <c>TrackValue(..)</c>, <c>TryGetDataSeries(..)</c> and similar
            that would normally result in new series will return <c>false</c>.</param>
            <param name="seriesConfig">The configuration for how each series of this metric should be aggregated.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricConfiguration.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Int32},Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration)">
            <summary>Creates a new instance of <c>MetricConfiguration</c>.</summary>
            <param name="seriesCountLimit">How many data time series a metric can contain as a maximum.
            Once this limit is reached, calls to <c>TrackValue(..)</c>, <c>TryGetDataSeries(..)</c> and similar
            that would normally result in new series will return <c>false</c>.</param>
            <param name="valuesPerDimensionLimits">How many different values each of the dimensions of a metric can
            have as a maximum. If this enumeration contains less elements than the number of supported dimensions,
            then the last specified element is replicated for subsequent dimensions. If this enumeration contains
            too many elements, superfluous elements are ignored.
            Once this limit is reached, calls to <c>TrackValue(..)</c>, <c>TryGetDataSeries(..)</c> and similar
            that would normally result in new series will return <c>false</c>.</param>
            <param name="seriesConfig">The configuration for how each series of this metric should be aggregated.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricConfiguration.SeriesCountLimit">
            <summary>Gets how many data time series a metric can contain as a maximum.
            Once this limit is reached, calls to <c>TrackValue(..)</c>, <c>TryGetDataSeries(..)</c> and similar
            that would normally result in new series will return <c>false</c>.</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricConfiguration.SeriesConfig">
            <summary>Gets the configuration for how each series of this metric should be aggregated.</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricConfiguration.GetValuesPerDimensionLimit(System.Int32)">
            <summary>
            Gets the maximum number of distinct values for a dimension identified by the specified 1-based dimension index.
            </summary>
            <param name="dimensionNumber">1-based dimension number. Currently it can be <c>1</c>...<c>10</c>.</param>
            <returns>The maximum number of distinct values for the specified dimension.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricConfiguration.Equals(System.Object)">
            <summary>Gets whether tho objects describe identical configuration.</summary>
            <param name="obj">A configuration object.</param>
            <returns>Whether tho objects describe identical configuration.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricConfiguration.Equals(Microsoft.ApplicationInsights.Metrics.MetricConfiguration)">
            <summary>Gets whether tho objects describe identical configuration.</summary>
            <param name="other">A configuration object.</param>
            <returns>Whether tho objects describe identical configuration.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricConfiguration.GetHashCode">
            <summary>Gets the Hash Code for this object.</summary>
            <returns>The Hash Code for this object.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricConfigurationForMeasurement">
            <summary>@ToDo: Complete documentation before stable release. {218}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricConfigurationForMeasurement.#ctor(System.Int32,System.Int32,Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement)">
            <summary>Creates a new instance of <c>MetricConfigurationForMeasurement</c>.</summary>
            <param name="seriesCountLimit">How many data time series a metric can contain as a maximum.
            Once this limit is reached, calls to <c>TrackValue(..)</c>, <c>TryGetDataSeries(..)</c> and similar
            that would normally result in new series will return <c>false</c>.</param>
            <param name="valuesPerDimensionLimit">How many different values each of the dimensions of a metric can
            have as a maximum.
            Once this limit is reached, calls to <c>TrackValue(..)</c>, <c>TryGetDataSeries(..)</c> and similar
            that would normally result in new series will return <c>false</c>.</param>
            <param name="seriesConfig">The configuration for how each series of this metric should be aggregated.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricConfigurationForMeasurement.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Int32},Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement)">
            <summary>Creates a new instance of <c>MetricConfiguration</c>.</summary>
            <param name="seriesCountLimit">How many data time series a metric can contain as a maximum.
            Once this limit is reached, calls to <c>TrackValue(..)</c>, <c>TryGetDataSeries(..)</c> and similar
            that would normally result in new series will return <c>false</c>.</param>
            <param name="valuesPerDimensionLimits">How many different values each of the dimensions of a metric can
            have as a maximum. If this enumeration contains less elements than the number of supported dimensions,
            then the last specified element is replicated for subsequent dimensions. If this enumeration contains
            too many elements, superfluous elements are ignored.
            Once this limit is reached, calls to <c>TrackValue(..)</c>, <c>TryGetDataSeries(..)</c> and similar
            that would normally result in new series will return <c>false</c>.</param>
            <param name="seriesConfig">The configuration for how each series of this metric should be aggregated.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricIdentifier">
            <summary>@ToDo: Complete documentation before stable release. {085}</summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MaxDimensionsCount">
            <summary>@ToDo: Complete documentation before stable release. {369}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace">
            <summary>
            Gets or sets this is what metric namespace will be set to if it is not specified.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.ValidateLiteral(System.String,System.String,System.Boolean)">
            <summary>@ToDo: Complete documentation before stable release. {030}</summary>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String)">
            <summary>@ToDo: Complete documentation before stable release. {150}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {710}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {080}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String,System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {219}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {419}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {852}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {761}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {629}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {522}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {040}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {406}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>@ToDo: Complete documentation before stable release. {144}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>@ToDo: Complete documentation before stable release. {694}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricNamespace">
            <summary>
            Gets the namespace of this metric.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.MetricId">
            <summary>
            Gets the ID (name) of this metric.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DimensionsCount">
            <summary>
            Gets the dimensionality of this metric.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.GetDimensionNames">
            <summary>
            Get an enumeration of the dimension names contained in this identity. The enumeration will have <c>DimensionsCount</c> elements.
            </summary>
            <returns>@ToDo: Complete documentation before stable release. {589}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.GetDimensionName(System.Int32)">
            <summary>
            Gets the name of a dimension identified by the specified 1-based dimension index.
            For zero-dimensional metrics, this method will always fail.
            </summary>
            <param name="dimensionNumber">1-based dimension number. Allowed values are <c>1</c> through <c>10</c>.</param>
            <returns>The name of the specified dimension.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.ToString">
            <summary>@ToDo: Complete documentation before stable release. {530}</summary>
            <returns>@ToDo: Complete documentation before stable release. {986}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.GetHashCode">
            <summary>
            Gets the hash code for this <c>MetricIdentifier</c> instance.
            </summary>
            <returns>Hash code for this <c>MetricIdentifier</c> instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.Equals(System.Object)">
            <summary>
            Determines whether the specified object is a <c>MetricIdentifier</c> that is equal to this <c>MetricIdentifier</c> based on the
            respective metric namespaces, metric IDs and the number and the names of dimensions.
            </summary>
            <param name="otherObj">Another object.</param>
            <returns>Whether the specified other object is equal to this object based on the respective namespaces, IDs and dimension names.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.Equals(Microsoft.ApplicationInsights.Metrics.MetricIdentifier)">
            <summary>
            Determines whether the specified object is a <c>MetricIdentifier</c> that is equal to this <c>MetricIdentifier</c> based on the
            respective metric namespaces, metric IDs and the number and the names of dimensions.
            </summary>
            <param name="otherMetricIdentifier">Another object.</param>
            <returns>Whether the specified other object is equal to this object based on the respective namespaces, IDs and dimension names.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricManager">
            <summary>@ToDo: Complete documentation before stable release. {529}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricManager.#ctor(Microsoft.ApplicationInsights.Metrics.Extensibility.IMetricTelemetryPipeline)">
            <summary>@ToDo: Complete documentation before stable release. {599}</summary>
            <param name="telemetryPipeline">@ToDo: Complete documentation before stable release. {795}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricManager.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricManager" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricManager.Metrics">
            <summary>Gets @ToDo: Complete documentation before stable release. {328}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricManager.CreateNewSeries(System.String,System.String,Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration)">
            <summary>@ToDo: Complete documentation before stable release. {362}</summary>
            <param name="metricNamespace">@ToDo: Complete documentation before stable release. {953}</param>
            <param name="metricId">@ToDo: Complete documentation before stable release. {176}</param>
            <param name="config">@ToDo: Complete documentation before stable release. {016}</param>
            <returns>@ToDo: Complete documentation before stable release. {996}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricManager.CreateNewSeries(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration)">
            <summary>@ToDo: Complete documentation before stable release. {064}</summary>
            <param name="metricNamespace">@ToDo: Complete documentation before stable release. {831}</param>
            <param name="metricId">@ToDo: Complete documentation before stable release. {381}</param>
            <param name="dimensionNamesAndValues">@ToDo: Complete documentation before stable release. {374}</param>
            <param name="config">@ToDo: Complete documentation before stable release. {303}</param>
            <returns>@ToDo: Complete documentation before stable release. {866}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricManager.CreateNewSeries(Microsoft.ApplicationInsights.Metrics.MetricIdentifier,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration)">
            <summary>@ToDo: Complete documentation before stable release. {569}</summary>
            <param name="metricIdentifier">@ToDo: Complete documentation before stable release. {108}</param>
            <param name="dimensionNamesAndValues">@ToDo: Complete documentation before stable release. {785}</param>
            <param name="config">@ToDo: Complete documentation before stable release. {275}</param>
            <returns>@ToDo: Complete documentation before stable release. {908}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricManager.Flush">
            <summary>@ToDo: Complete documentation before stable release. {134}</summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricsCollection">
            <summary>@ToDo: Complete documentation before stable release. {092}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.#ctor(Microsoft.ApplicationInsights.Metrics.MetricManager)">
            <summary>@ToDo: Complete documentation before stable release. {109}</summary>
            <param name="metricManager">@ToDo: Complete documentation before stable release. {758}</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricsCollection.Count">
            <summary>Gets @ToDo: Complete documentation before stable release. {304}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricsCollection.IsReadOnly">
            <summary>Gets a value indicating whether @ToDo: Complete documentation before stable release. {712}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.GetOrCreate(Microsoft.ApplicationInsights.Metrics.MetricIdentifier,Microsoft.ApplicationInsights.Metrics.MetricConfiguration)">
            <summary>@ToDo: Complete documentation before stable release. {799}</summary>
            <param name="metricIdentifier">@ToDo: Complete documentation before stable release. {564}</param>
            <param name="metricConfiguration">@ToDo: Complete documentation before stable release. {324}</param>
            <returns>@ToDo: Complete documentation before stable release. {708}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.TryGet(Microsoft.ApplicationInsights.Metrics.MetricIdentifier,Microsoft.ApplicationInsights.Metric@)">
            <summary>@ToDo: Complete documentation before stable release. {799}</summary>
            <param name="metricIdentifier">@ToDo: Complete documentation before stable release. {564}</param>
            <param name="metric">@ToDo: Complete documentation before stable release. {324}</param>
            <returns>@ToDo: Complete documentation before stable release. {708}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.Clear">
            <summary>@ToDo: Complete documentation before stable release. {200}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.Contains(Microsoft.ApplicationInsights.Metric)">
            <summary>@ToDo: Complete documentation before stable release. {628}</summary>
            <param name="metric">@ToDo: Complete documentation before stable release. {398}</param>
            <returns>@ToDo: Complete documentation before stable release. {479}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.Contains(Microsoft.ApplicationInsights.Metrics.MetricIdentifier)">
            <summary>@ToDo: Complete documentation before stable release. {629}</summary>
            <param name="metricIdentifier">@ToDo: Complete documentation before stable release. {398}</param>
            <returns>@ToDo: Complete documentation before stable release. {479}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.CopyTo(Microsoft.ApplicationInsights.Metric[],System.Int32)">
            <summary>@ToDo: Complete documentation before stable release. {200}</summary>
            <param name="array">@ToDo: Complete documentation before stable release. {377}</param>
            <param name="arrayIndex">@ToDo: Complete documentation before stable release. {290}</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.Remove(Microsoft.ApplicationInsights.Metric)">
            <summary>@ToDo: Complete documentation before stable release. {040}</summary>
            <param name="metric">@ToDo: Complete documentation before stable release. {667}</param>
            <returns>@ToDo: Complete documentation before stable release. {197}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.Remove(Microsoft.ApplicationInsights.Metrics.MetricIdentifier)">
            <summary>@ToDo: Complete documentation before stable release. {041}</summary>
            <param name="metricIdentifier">@ToDo: Complete documentation before stable release. {667}</param>
            <returns>@ToDo: Complete documentation before stable release. {197}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.Remove(Microsoft.ApplicationInsights.Metrics.MetricIdentifier,Microsoft.ApplicationInsights.Metric@)">
            <summary>@ToDo: Complete documentation before stable release. {041}</summary>
            <param name="metricIdentifier">@ToDo: Complete documentation before stable release. {667}</param>
            <param name="removedMetric">@ToDo: Complete documentation before stable release. {668}</param>
            <returns>@ToDo: Complete documentation before stable release. {197}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.GetEnumerator">
            <summary>@ToDo: Complete documentation before stable release. {533}</summary>
            <returns>@ToDo: Complete documentation before stable release. {064}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>@ToDo: Complete documentation before stable release. {222}</summary>
            <returns>@ToDo: Complete documentation before stable release. {354}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricsCollection.System#Collections#Generic#ICollection{Microsoft#ApplicationInsights#Metric}#Add(Microsoft.ApplicationInsights.Metric)">
            <summary>
            The Add(..) method is not supported. To add a new metric, use the GetOrCreate(..) method.
            </summary>
            <param name="unsupported">@ToDo: Complete documentation before stable release. {021}</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricSeries">
            <summary>
            Represents a data time series of metric values.
            One or more <c>MetricSeries</c> are grouped into a single <c>Metric</c>.
            Use <c>MetricSeries</c> to track, aggregate and send values without the overhead of looking them up from the
            corresponding <c>Metric</c> object.
            Each <c>Metric</c> object contains a special zero-dimension series, plus, for multi-dimensional metrics, one
            series per unique dimension-values combination.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricSeries.DimensionNamesAndValues">
            <summary>Gets @ToDo: Complete documentation before stable release. {380}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricSeries.MetricIdentifier">
            <summary>Gets @ToDo: Complete documentation before stable release. {255}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeries.TrackValue(System.Double)">
            <summary>
            Tracks the specified value.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.<br />
            <para>When non-default aggregation cycles are active, additional aggregates may be obtained by cycling respective aggregators.
            See @ToDo to learn more about this advanced use case.</para>
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeries.TrackValue(System.Object)">
            <summary>
            Tracks the specified value.<br />
            An aggregate representing tracked values will be automatically sent to the cloud ingestion endpoint at the end of each aggregation period.<br />
            <para>When non-default aggregation cycles are active, additional aggregates may be obtained by cycling respective aggregators.
            See @ToDo to learn more about this advanced use case.</para>
            </summary>
            <param name="metricValue">The value to be aggregated.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeries.ResetAggregation">
            <summary>@ToDo: Complete documentation before stable release. {218}</summary>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeries.ResetAggregation(System.DateTimeOffset)">
            <summary>@ToDo: Complete documentation before stable release. {174}</summary>
            <param name="periodStart">@ToDo: Complete documentation before stable release. {837}</param>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeries.GetCurrentAggregateUnsafe">
            <summary>@ToDo: Complete documentation before stable release. {036}</summary>
            <returns>@ToDo: Complete documentation before stable release. {909}</returns>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeries.GetCurrentAggregateUnsafe(Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind,System.DateTimeOffset)">
            <summary>@ToDo: Complete documentation before stable release. {313}</summary>
            <param name="aggregationCycleKind">@ToDo: Complete documentation before stable release. {621}</param>
            <param name="dateTime">@ToDo: Complete documentation before stable release. {851}</param>
            <returns>@ToDo: Complete documentation before stable release. {437}</returns>
            @PublicExposureCandidate
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeries.GetRecycledAggregatorInstance(Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind)">
            <summary>
            The lifetime of an aggragator can easily be a minute or so. So, it is a relatively small object that can easily get into Gen-2 GC heap,
            but then will need to be reclaimed from there relatively quickly. This can lead to a fragmentation of Gen-2 heap. To avoid this we employ
            a simple form of object pooling: Each data series keeps an instance of a past aggregator and tries to reuse it.
            Aggregator implementations which believe that they are too expensive to recycle for this, can opt out of this strategy by returning FALSE from
            their CanRecycle property.
            </summary>
            <param name="aggregationCycleKind">@ToDo: Complete documentation before stable release. {489}</param>
            <returns>@ToDo: Complete documentation before stable release. {036}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement">
            <summary>@ToDo: Complete documentation before stable release. {023}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.#ctor(System.Boolean)">
            <summary>@ToDo: Complete documentation before stable release. {650}</summary>
            <param name="restrictToUInt32Values">@ToDo: Complete documentation before stable release. {153}</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.RequiresPersistentAggregation">
            <summary>Gets a value indicating whether @ToDo: Complete documentation before stable release. {612}</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.RestrictToUInt32Values">
            <summary>Gets a value indicating whether @ToDo: Complete documentation before stable release. {691}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.CreateNewAggregator(Microsoft.ApplicationInsights.Metrics.MetricSeries,Microsoft.ApplicationInsights.Metrics.Extensibility.MetricAggregationCycleKind)">
            <summary>@ToDo: Complete documentation before stable release. {287}</summary>
            <param name="dataSeries">@ToDo: Complete documentation before stable release. {864}</param>
            <param name="aggregationCycleKind">@ToDo: Complete documentation before stable release. {203}</param>
            <returns>@ToDo: Complete documentation before stable release. {983}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Equals(System.Object)">
            <summary>@ToDo: Complete documentation before stable release. {894}</summary>
            <param name="obj">@ToDo: Complete documentation before stable release. {102}</param>
            <returns>@ToDo: Complete documentation before stable release. {488}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Equals(Microsoft.ApplicationInsights.Metrics.IMetricSeriesConfiguration)">
            <summary>@ToDo: Complete documentation before stable release. {278}</summary>
            <param name="other">@ToDo: Complete documentation before stable release. {067}</param>
            <returns>@ToDo: Complete documentation before stable release. {117}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Equals(Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement)">
            <summary>@ToDo: Complete documentation before stable release. {078}</summary>
            <param name="other">@ToDo: Complete documentation before stable release. {374}</param>
            <returns>@ToDo: Complete documentation before stable release. {070}</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.GetHashCode">
            <summary>@ToDo: Complete documentation before stable release. {869}</summary>
            <returns>@ToDo: Complete documentation before stable release. {755}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants">
            <summary>
            Groups constants used by metric aggregates produced by aggregators that are configured by metric configurations represented through
            instances of <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement"/>. This class cannot be instantiated. To access the constants, use the 
            extension method <c>MetricConfigurations.Common.Measurement().Constants()</c> or <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.AggregateKindMoniker">
            <summary>
            Gets the kind moniker for aggregates produced by aggregators that are configured by metric configurations represented
            through instances of <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.AggregateKindDataKeys">
            <summary>
            Gets constants used to refer to data fields contained within aggregates produced by aggregators that are configured
            by metric configurations represented through instances of <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants">
            <summary>
            Groups constants used to refer to data fields contained within aggregates produced by aggregators that are configured
            by metric configurations represented through instances of <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants.Count">
            <summary>
            Gets the name of the Count field in <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate"/> objects produced by measurement aggregators.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants.Sum">
            <summary>
            Gets the name of the Sum field in <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate"/> objects produced by measurement aggregators.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants.Min">
            <summary>
            Gets the name of the Minimum field in <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate"/> objects produced by measurement aggregators.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants.Max">
            <summary>
            Gets the name of the Maximum field in <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate"/> objects produced by measurement aggregators.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.AggregateKindConstants.DataKeysConstants.StdDev">
            <summary>
            Gets the name of the Standard Deviation field in <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate"/> objects produced by measurement aggregators.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants">
            <summary>
            Defines constants used my metric aggregates produced by aggregators that are configured by metric configurations represented
            through instances of <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindMoniker">
            <summary>
            The kind moniker for aggregates produced by aggregators that are configured by metric configurations represented
            through instances of <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys">
            <summary>
            Defines constants used to refer to data fields contained within aggregates produced by aggregators that are configured
            by metric configurations represented through instances of <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys.Count">
            <summary>
            The name of the Count field in <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate"/> objects produced by measurement aggregators.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys.Sum">
            <summary>
            The name of the Sum field in <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate"/> objects produced by measurement aggregators.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys.Min">
            <summary>
            The name of the Minimum field in <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate"/> objects produced by measurement aggregators.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys.Max">
            <summary>
            The name of the Maximum field in <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate"/> objects produced by measurement aggregators.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Metrics.MetricSeriesConfigurationForMeasurement.Constants.AggregateKindDataKeys.StdDev">
            <summary>
            The name of the Standard Deviation field in <see cref="T:Microsoft.ApplicationInsights.Metrics.MetricAggregate"/> objects produced by measurement aggregators.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Metrics.TelemetryConfigurationExtensions">
            <summary>@ToDo: Complete documentation before stable release. {737}</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Metrics.TelemetryConfigurationExtensions.GetMetricManager(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>@ToDo: Complete documentation before stable release. {923}</summary>
            <param name="telemetryPipeline">@ToDo: Complete documentation before stable release. {456}</param>
            <returns>@ToDo: Complete documentation before stable release. {580}</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.OperationTelemetryExtensions">
            <summary>
            Extension functions to operation telemetry that start and stop the timer.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.OperationTelemetryExtensions.Start(Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry)">
            <summary>
            An extension to telemetry item that starts the timer for the respective telemetry.
            </summary>
            <param name="telemetry">Telemetry item object that calls this extension method.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.OperationTelemetryExtensions.Start(Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry,System.Int64)">
            <summary>
            An extension to telemetry item that initializes the timer for the respective telemetry
            using a timestamp from a high-resolution <see cref="T:System.Diagnostics.Stopwatch"/>.
            </summary>
            <param name="telemetry">Telemetry item object that calls this extension method.</param>
            <param name="timestamp">A high-resolution timestamp from <see cref="T:System.Diagnostics.Stopwatch"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.OperationTelemetryExtensions.Stop(Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry)">
            <summary>
            An extension method to telemetry item that stops the timer and computes the duration of the request or dependency.
            </summary>
            <param name="telemetry">Telemetry item object that calls this extension method.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.OperationTelemetryExtensions.Stop(Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry,System.Int64)">
            <summary>
            An extension method to telemetry item that stops the timer and computes the duration of the request or dependency.
            </summary>
            <param name="telemetry">Telemetry item object that calls this extension method.</param>
            <param name="timestamp">A high-resolution timestamp from <see cref="T:System.Diagnostics.Stopwatch"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.OperationTelemetryExtensions.GenerateOperationId(Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry)">
            <summary>
            Generate random operation Id and set it to OperationContext.
            </summary>
            <param name="telemetry">Telemetry to initialize Operation id for.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.OperationTelemetryExtensions.StopImpl(Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry,System.Int64)">
            <summary>
            Set the duration given a timestamp from a high-resolution <see cref="T:System.Diagnostics.Stopwatch"/>.
            </summary>
            <param name="telemetry">Telemetry item object to update.</param>
            <param name="timestamp">The high resolution timestamp.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.OperationTelemetryExtensions.StopImpl(Microsoft.ApplicationInsights.Extensibility.Implementation.OperationTelemetry,System.TimeSpan)">
            <summary>
            Record the duration and, optionally, set the timestamp to the current time.
            </summary>
            <param name="telemetry">Telemetry item object to update.</param>
            <param name="duration">The duration of the operation.</param>
        </member>
        <member name="F:Microsoft.ApplicationInsights.PreciseTimestamp.StopwatchTicksToTimeSpanTicks">
            <summary>
            Multiplier to convert Stopwatch ticks to TimeSpan ticks.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.PreciseTimestamp.GetUtcNow">
            <summary>
            Returns high resolution (1 DateTime tick) current UTC DateTime. 
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.TelemetryClient">
            <summary>
            Send events, metrics and other telemetry to the Application Insights service.
            <a href="https://go.microsoft.com/fwlink/?linkid=525722">Learn more</a>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.TelemetryClient" /> class. Send telemetry with the active configuration, usually loaded from ApplicationInsights.config.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.#ctor(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.TelemetryClient" /> class. Send telemetry with the specified <paramref name="configuration"/>.
            </summary>
            <exception cref="T:System.ArgumentNullException">The <paramref name="configuration"/> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="configuration"/> does not contain a telemetry channel.</exception>
        </member>
        <member name="P:Microsoft.ApplicationInsights.TelemetryClient.Context">
            <summary>
            Gets the current context that will be used to augment telemetry you send.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.TelemetryClient.InstrumentationKey">
            <summary>
            Gets or sets the default instrumentation key for all <see cref="T:Microsoft.ApplicationInsights.Channel.ITelemetry"/> objects logged in this <see cref="T:Microsoft.ApplicationInsights.TelemetryClient"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.TelemetryClient.TelemetryConfiguration">
            <summary>
            Gets the <see cref="P:Microsoft.ApplicationInsights.TelemetryClient.TelemetryConfiguration"/> object associated with this telemetry client instance.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.IsEnabled">
            <summary>
            Check to determine if the tracking is enabled.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Send an <see cref="T:Microsoft.ApplicationInsights.DataContracts.EventTelemetry"/> for display in Diagnostic Search and in the Analytics Portal.
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackevent">Learn more</a>
            </remarks>
            <param name="eventName">A name for the event.</param>
            <param name="properties">Named string values you can use to search and classify events.</param>
            <param name="metrics">Measurements associated with this event.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(Microsoft.ApplicationInsights.DataContracts.EventTelemetry)">
            <summary>
            Send an <see cref="T:Microsoft.ApplicationInsights.DataContracts.EventTelemetry"/> for display in Diagnostic Search and in the Analytics Portal.
            Create a separate <see cref="T:Microsoft.ApplicationInsights.DataContracts.EventTelemetry"/> instance for each call to <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(Microsoft.ApplicationInsights.DataContracts.EventTelemetry)"/>.
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackevent">Learn more</a>
            </remarks>
            <param name="telemetry">An event log item.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String)">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#tracktrace">Learn more</a>
            </remarks>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,Microsoft.ApplicationInsights.DataContracts.SeverityLevel)">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#tracktrace">Learn more</a>
            </remarks>
            <param name="message">Message to display.</param>
            <param name="severityLevel">Trace severity level.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#tracktrace">Learn more</a>
            </remarks>
            <param name="message">Message to display.</param>
            <param name="properties">Named string values you can use to search and classify events.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(System.String,Microsoft.ApplicationInsights.DataContracts.SeverityLevel,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#tracktrace">Learn more</a>
            </remarks>
            <param name="message">Message to display.</param>
            <param name="severityLevel">Trace severity level.</param>
            <param name="properties">Named string values you can use to search and classify events.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(Microsoft.ApplicationInsights.DataContracts.TraceTelemetry)">
            <summary>
            Send a trace message for display in Diagnostic Search.
            Create a separate <see cref="T:Microsoft.ApplicationInsights.DataContracts.TraceTelemetry"/> instance for each call to <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.TrackTrace(Microsoft.ApplicationInsights.DataContracts.TraceTelemetry)"/>.
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#tracktrace">Learn more</a>
            </remarks>
            <param name="telemetry">Message with optional properties.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(System.String,System.Double,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            This method is deprecated. Metrics should always be pre-aggregated across a time period before being sent.<br />
            Use one of the <c>GetMetric(..)</c> overloads to get a metric object for accessing SDK pre-aggregation capabilities.<br />
            If you are implementing your own pre-aggregation logic, you can use the <c>Track(ITelemetry metricTelemetry)</c> method to
            send the resulting aggregates.<br />
            If your application requires sending a separate telemetry item at every occasion without aggregation across time,
            you likely have a use case for event telemetry; see <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(Microsoft.ApplicationInsights.DataContracts.EventTelemetry)"/>.
            </summary>
            <param name="name">Metric name.</param>
            <param name="value">Metric value.</param>
            <param name="properties">Named string values you can use to classify and filter metrics.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackMetric(Microsoft.ApplicationInsights.DataContracts.MetricTelemetry)">
            <summary>
            This method is deprecated. Metrics should always be pre-aggregated across a time period before being sent.<br />
            Use one of the <c>GetMetric(..)</c> overloads to get a metric object for accessing SDK pre-aggregation capabilities.<br />
            If you are implementing your own pre-aggregation logic, you can use the <c>Track(ITelemetry metricTelemetry)</c> method to
            send the resulting aggregates.<br />
            If your application requires sending a separate telemetry item at every occasion without aggregation across time,
            you likely have a use case for event telemetry; see <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.TrackEvent(Microsoft.ApplicationInsights.DataContracts.EventTelemetry)"/>.
            </summary>
            <param name="telemetry">The metric telemetry item.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackException(System.Exception,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Send an <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry"/> for display in Diagnostic Search.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="properties">Named string values you can use to classify and search for this exception.</param>
            <param name="metrics">Additional values associated with this exception.</param>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackexception">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackException(Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry)">
            <summary>
            Send an <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry"/> for display in Diagnostic Search.
            Create a separate <see cref="T:Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry"/> instance for each call to <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.TrackException(Microsoft.ApplicationInsights.DataContracts.ExceptionTelemetry)"/>
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackexception">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.Boolean)">
            <summary>
            Send information about an external dependency (outgoing call) in the application.
            </summary>
            <param name="dependencyName">Name of the command initiated with this dependency call. Low cardinality value. Examples are stored procedure name and URL path template.</param>
            <param name="data">Command initiated by this dependency call. Examples are SQL statement and HTTP URL's with all query parameters.</param>
            <param name="startTime">The time when the dependency was called.</param>
            <param name="duration">The time taken by the external dependency to handle the call.</param>
            <param name="success">True if the dependency call was handled successfully.</param>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackdependency">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(System.String,System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.Boolean)">
            <summary>
            Send information about an external dependency (outgoing call) in the application.
            </summary>
            <param name="dependencyTypeName">External dependency type. Very low cardinality value for logical grouping and interpretation of fields. Examples are SQL, Azure table, and HTTP.</param>
            <param name="dependencyName">Name of the command initiated with this dependency call. Low cardinality value. Examples are stored procedure name and URL path template.</param>
            <param name="data">Command initiated by this dependency call. Examples are SQL statement and HTTP URL's with all query parameters.</param>
            <param name="startTime">The time when the dependency was called.</param>
            <param name="duration">The time taken by the external dependency to handle the call.</param>
            <param name="success">True if the dependency call was handled successfully.</param>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackdependency">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(System.String,System.String,System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean)">
            <summary>
            Send information about an external dependency (outgoing call) in the application.
            </summary>
            <param name="dependencyTypeName">External dependency type. Very low cardinality value for logical grouping and interpretation of fields. Examples are SQL, Azure table, and HTTP.</param>
            <param name="target">External dependency target.</param>
            <param name="dependencyName">Name of the command initiated with this dependency call. Low cardinality value. Examples are stored procedure name and URL path template.</param>
            <param name="data">Command initiated by this dependency call. Examples are SQL statement and HTTP URL's with all query parameters.</param>
            <param name="startTime">The time when the dependency was called.</param>
            <param name="duration">The time taken by the external dependency to handle the call.</param>
            <param name="resultCode">Result code of dependency call execution.</param>
            <param name="success">True if the dependency call was handled successfully.</param>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackdependency">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry)">
            <summary>
            Send information about external dependency call in the application.
            Create a separate <see cref="T:Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry"/> instance for each call to <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.TrackDependency(Microsoft.ApplicationInsights.DataContracts.DependencyTelemetry)"/>
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackdependency">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Send information about availability of an application.
            </summary>
            <param name="name">Availability test name.</param>
            <param name="timeStamp">The time when the availability was captured.</param>
            <param name="duration">The time taken for the availability test to run.</param>
            <param name="runLocation">Name of the location the availability test was run from.</param>
            <param name="success">True if the availability test ran successfully.</param>
            <param name="message">Error message on availability test run failure.</param>
            <param name="properties">Named string values you can use to classify and search for this availability telemetry.</param>
            <param name="metrics">Additional values associated with this availability telemetry.</param>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=517889">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry)">
            <summary>
            Send information about availability of an application.
            Create a separate <see cref="T:Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry"/> instance for each call to <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.TrackAvailability(Microsoft.ApplicationInsights.DataContracts.AvailabilityTelemetry)"/>
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=517889">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.Track(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            This method is an internal part of Application Insights infrastructure. Do not call.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.InitializeInstrumentationKey(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            This method is an internal part of Application Insights infrastructure. Do not call.
            </summary>
            <param name="telemetry">Telemetry item to initialize instrumentation key.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.Initialize(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            This method is an internal part of Application Insights infrastructure. Do not call.
            </summary>
            <param name="telemetry">Telemetry item to initialize.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(System.String)">
            <summary>
            Send information about the page viewed in the application.
            </summary>
            <param name="name">Name of the page.</param>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#page-views">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry)">
            <summary>
            Send information about the page viewed in the application.
            Create a separate <see cref="T:Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry"/> instance for each call to <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.TrackPageView(Microsoft.ApplicationInsights.DataContracts.PageViewTelemetry)"/>.
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#page-views">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean)">
            <summary>
            Send information about a request handled by the application.
            </summary>
            <param name="name">The request name.</param>
            <param name="startTime">The time when the page was requested.</param>
            <param name="duration">The time taken by the application to handle the request.</param>
            <param name="responseCode">The response status code.</param>
            <param name="success">True if the request was handled successfully by the application.</param>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackrequest">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(Microsoft.ApplicationInsights.DataContracts.RequestTelemetry)">
            <summary>
            Send information about a request handled by the application.
            Create a separate <see cref="T:Microsoft.ApplicationInsights.DataContracts.RequestTelemetry"/> instance for each call to <see cref="M:Microsoft.ApplicationInsights.TelemetryClient.TrackRequest(Microsoft.ApplicationInsights.DataContracts.RequestTelemetry)"/>.
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#trackrequest">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.Flush">
            <summary>
            Flushes the in-memory buffer and any metrics being pre-aggregated.
            </summary>
            <remarks>
            <a href="https://go.microsoft.com/fwlink/?linkid=525722#flushing-data">Learn more</a>
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,Microsoft.ApplicationInsights.Metrics.MetricConfiguration)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,Microsoft.ApplicationInsights.Metrics.MetricConfiguration,Microsoft.ApplicationInsights.MetricAggregationScope)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
            <param name="aggregationScope">The scope across which the values for the metric are to be aggregated in memory.
            See <see cref="T:Microsoft.ApplicationInsights.MetricAggregationScope" /> for more info.</param>
            <returns>A <see cref="T:Microsoft.ApplicationInsights.Metric"/> instance that you can use to automatically aggregate and then sent metric data value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
            <returns>A <see cref="T:Microsoft.ApplicationInsights.Metric"/> instance that you can use to automatically aggregate and then sent metric data value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String,Microsoft.ApplicationInsights.Metrics.MetricConfiguration)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String,Microsoft.ApplicationInsights.Metrics.MetricConfiguration,Microsoft.ApplicationInsights.MetricAggregationScope)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
            <param name="aggregationScope">The scope across which the values for the metric are to be aggregated in memory.
            See <see cref="T:Microsoft.ApplicationInsights.MetricAggregationScope" /> for more info.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String,System.String)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <param name="dimension2Name">The name of the second dimension.</param>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
            <returns>A <see cref="T:Microsoft.ApplicationInsights.Metric"/> instance that you can use to automatically aggregate and then sent metric data value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String,System.String,Microsoft.ApplicationInsights.Metrics.MetricConfiguration)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <param name="dimension2Name">The name of the second dimension.</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String,System.String,Microsoft.ApplicationInsights.Metrics.MetricConfiguration,Microsoft.ApplicationInsights.MetricAggregationScope)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <param name="dimension2Name">The name of the second dimension.</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
            <param name="aggregationScope">The scope across which the values for the metric are to be aggregated in memory.
            See <see cref="T:Microsoft.ApplicationInsights.MetricAggregationScope" /> for more info.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String,System.String,System.String)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <param name="dimension2Name">The name of the second dimension.</param>
            <param name="dimension3Name">The name of the third dimension.</param>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
            <returns>A <see cref="T:Microsoft.ApplicationInsights.Metric"/> instance that you can use to automatically aggregate and then sent metric data value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String,System.String,System.String,Microsoft.ApplicationInsights.Metrics.MetricConfiguration)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <param name="dimension2Name">The name of the second dimension.</param>
            <param name="dimension3Name">The name of the third dimension.</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String,System.String,System.String,Microsoft.ApplicationInsights.Metrics.MetricConfiguration,Microsoft.ApplicationInsights.MetricAggregationScope)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <param name="dimension2Name">The name of the second dimension.</param>
            <param name="dimension3Name">The name of the third dimension.</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
            <param name="aggregationScope">The scope across which the values for the metric are to be aggregated in memory.
            See <see cref="T:Microsoft.ApplicationInsights.MetricAggregationScope" /> for more info.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <param name="dimension2Name">The name of the second dimension.</param>
            <param name="dimension3Name">The name of the third dimension.</param>
            <param name="dimension4Name">The name of the fourth dimension.</param>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
            <returns>A <see cref="T:Microsoft.ApplicationInsights.Metric"/> instance that you can use to automatically aggregate and then sent metric data value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String,System.String,System.String,System.String,Microsoft.ApplicationInsights.Metrics.MetricConfiguration)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <param name="dimension2Name">The name of the second dimension.</param>
            <param name="dimension3Name">The name of the third dimension.</param>
            <param name="dimension4Name">The name of the fourth dimension.</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(System.String,System.String,System.String,System.String,System.String,Microsoft.ApplicationInsights.Metrics.MetricConfiguration,Microsoft.ApplicationInsights.MetricAggregationScope)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <param name="metricId">The ID (name) of the metric.
              (The namespace specified in <see cref="P:Microsoft.ApplicationInsights.Metrics.MetricIdentifier.DefaultMetricNamespace"/> will be used.
              To specify another namespace, user an overload that takes a <c>MetricIdentifier</c> parameter instead.)</param>
            <param name="dimension1Name">The name of the first dimension.</param>
            <param name="dimension2Name">The name of the second dimension.</param>
            <param name="dimension3Name">The name of the third dimension.</param>
            <param name="dimension4Name">The name of the fourth dimension.</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
            <param name="aggregationScope">The scope across which the values for the metric are to be aggregated in memory.
            See <see cref="T:Microsoft.ApplicationInsights.MetricAggregationScope" /> for more info.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(Microsoft.ApplicationInsights.Metrics.MetricIdentifier)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricIdentifier">A grouping containing the Namespace, the ID (name) and the dimension names of the metric.</param>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
            <returns>A <see cref="T:Microsoft.ApplicationInsights.Metric"/> instance that you can use to automatically aggregate and then sent metric data value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(Microsoft.ApplicationInsights.Metrics.MetricIdentifier,Microsoft.ApplicationInsights.Metrics.MetricConfiguration)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <remarks>The aggregated values will be sent to the <c>TelemetryConfiguration</c>
            associated with this client.<br />
            The aggregation scope of the fetched<c>Metric</c> is <c>TelemetryConfiguration</c>; this
            means that all values tracked for a given metric ID and dimensions will be aggregated together
            across all clients that share the same <c>TelemetryConfiguration</c>.</remarks>
            <param name="metricIdentifier">A grouping containing the Namespace, the ID (name) and the dimension names of the metric.</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClient.GetMetric(Microsoft.ApplicationInsights.Metrics.MetricIdentifier,Microsoft.ApplicationInsights.Metrics.MetricConfiguration,Microsoft.ApplicationInsights.MetricAggregationScope)">
            <summary>
            Gets or creates a metric container that you can use to track, aggregate and send metric values.<br />
            Optionally specify a metric configuration to control how the tracked values are aggregated.
            </summary>
            <param name="metricIdentifier">A grouping containing the Namespace, the ID (name) and the dimension names of the metric.</param>
            <param name="metricConfiguration">Determines how tracked values will be aggregated. <br />
            Use presets in <see cref="F:Microsoft.ApplicationInsights.MetricConfigurations.Common"/> or specify your own settings. </param>
            <returns>A <c>Metric</c> with the specified ID and dimensions. If you call this method several times
            with the same metric ID and dimensions for a given aggregation scope, you will receive the same
            instance of <c>Metric</c>.</returns>
            <exception cref="T:System.ArgumentException">If you previously created a metric with the same namespace, ID, dimensions
            and aggregation scope, but with a different configuration. When calling this method to get a previously
            created metric, you can simply avoid specifying any configuration (or specify null) to imply the
            configuration used earlier.</exception>
            <param name="aggregationScope">The scope across which the values for the metric are to be aggregated in memory.
            See <see cref="T:Microsoft.ApplicationInsights.MetricAggregationScope" /> for more info.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.TelemetryClientExtensions">
            <summary>
            Extension class to telemetry client that creates operation object with the respective fields initialized.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClientExtensions.StartOperation``1(Microsoft.ApplicationInsights.TelemetryClient,System.String)">
            <summary>
            Start operation creates an operation object with a respective telemetry item. 
            </summary>
            <typeparam name="T">Type of the telemetry item.</typeparam>
            <param name="telemetryClient">Telemetry client object.</param>
            <param name="operationName">Name of the operation that customer is planning to propagate.</param>
            <returns>Operation item object with a new telemetry item having current start time and timestamp.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClientExtensions.StartOperation``1(Microsoft.ApplicationInsights.TelemetryClient,System.String,System.String,System.String)">
            <summary>
            Start operation creates an operation object with a respective telemetry item. 
            </summary>
            <typeparam name="T">Type of the telemetry item.</typeparam>
            <param name="telemetryClient">Telemetry client object.</param>
            <param name="operationName">Name of the operation that customer is planning to propagate.</param>
            <param name="operationId">Operation ID to set in the new operation.</param>
            <param name="parentOperationId">Optional parent operation ID to set in the new operation.</param>
            <returns>Operation item object with a new telemetry item having current start time and timestamp.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClientExtensions.StartOperation``1(Microsoft.ApplicationInsights.TelemetryClient,``0)">
            <summary>
            Creates an operation object with a given telemetry item. 
            </summary>
            <typeparam name="T">Type of the telemetry item.</typeparam>
            <param name="telemetryClient">Telemetry client object.</param>
            <param name="operationTelemetry">Operation to start.</param>
            <returns>Operation item object with a new telemetry item having current start time and timestamp.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClientExtensions.StopOperation``1(Microsoft.ApplicationInsights.TelemetryClient,Microsoft.ApplicationInsights.Extensibility.IOperationHolder{``0})">
            <summary>
            Stop operation computes the duration of the operation and tracks it using the respective telemetry client.
            </summary>
            <param name="telemetryClient">Telemetry client object.</param>
            <param name="operation">Operation object to compute duration and track.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.TelemetryClientExtensions.StartOperation``1(Microsoft.ApplicationInsights.TelemetryClient,System.Diagnostics.Activity)">
            <summary>
            Creates an operation object with a respective telemetry item using <see cref="T:System.Diagnostics.Activity"/> instance that holds tracing context. 
            </summary>
            <example>
            <code>
              // receive message from a queue service (or any kind of the request/message from external service)
              var message = queue.Receive();
            
              // Extract tracing context from the message before processing it
              // Note that some protocols may define how Activity should be serialized into the message,
              // and some client SDKs implementing them may provide Extract method.
              // For other protocols/libraries, serialization has to be agreed between producer and consumer
              // and Inject/Extract pattern to be implemented
              var activity = message.ExtractActivity();
            
              // Track processing of the message
              using (telemetryClient.StartOperation&lt;RequestTelemetry&gt;(activity))
              {
                // process message
              }
             // telemetry is reported when operation is disposed.
            </code>
            </example>
            <remarks><para>Activity represents tracing context; it contains correlation identifiers and extended properties that are propagated to external calls.
            See <a href="https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/ActivityUserGuide.md"/> for more details.</para>
            <para>When Activity instance is passed to StartOperation, it is expected that Activity has ParentId (if it was provided by upstream service), but has not been started yet.
            It may also have additional Tags and Baggage to augment telemetry.</para>
            </remarks>
            <typeparam name="T">Type of the telemetry item.</typeparam>
            <param name="telemetryClient">Telemetry client object.</param>
            <param name="activity">Activity to get tracing context and telemetry properties from.</param>
            <returns>Operation item object with a new telemetry item having current start time and timestamp.</returns>
        </member>
    </members>
</doc>
